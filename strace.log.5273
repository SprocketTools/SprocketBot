00:33:13.321389 execve("/usr/bin/psql", ["psql", "-h", "localhost", "-U", "postgres", "-p", "5432", "-d", "sprocketbot", "-c", "select 1"], 0x7fd4bbec78 /* 21 vars */) = 0 <0.001091>
00:33:13.323330 brk(NULL)               = 0x558a370000 <0.000079>
00:33:13.323773 mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f905c9000 <0.000100>
00:33:13.324105 faccessat(AT_FDCWD, "/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory) <0.000092>
00:33:13.324968 openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3 <0.000095>
00:33:13.325295 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=65875, ...}, AT_EMPTY_PATH) = 0 <0.000083>
00:33:13.325655 mmap(NULL, 65875, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f905b8000 <0.000106>
00:33:13.325962 close(3)                = 0 <0.000076>
00:33:13.326265 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libm.so.6", O_RDONLY|O_CLOEXEC) = 3 <0.000094>
00:33:13.326579 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\230\1\t\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\33\0\32\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0X\376\7\0\0\0\0\0X\376\7\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0x\375\10\0\0\0\0\0x\375\10\0\0\0\0\0x\375\10\0\0\0\0\0\354\2\0\0\0\0\0\0\370\2\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\210\375\10\0\0\0\0\0\210\375\10\0\0\0\0\0\210\375\10\0\0\0\0\0\0\2\0\0\0\0\0\0\0\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0D\0\0\0\0\0\0\0D\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\340q\7\0\0\0\0\0\340q\7\0\0\0\0\0\340q\7\0\0\0\0\0\274\22\0\0\0\0\0\0\274\22\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0x\375\10\0\0\0\0\0x\375\10\0\0\0\0\0x\375\10\0\0\0\0\0\210\2\0\0\0\0\0\0\210\2\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\270\206\246\1U\221\236=\274\226\371D\324S\314\305\362VGi\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\7\0\0\0\0\0\0\0\0\0\0\0\342\3\0\0\22\0\0\0\200\0\0\0\r\0\0\0\245@\0@AH\20\4*T\4N\2\17u\0J\350\200\"\0a\10\312H`\0\200\0006J@\24\204&\20PA\337\300P\21\2) \20x\202\24\10\0\222\22\0\200(\252\4%@\212`\30\0\2#\0E \20*\2\20\244\tf\215Q\6\212\21\0\0\0\4!\22@\5\01000\324J: \320\0\10\22\1\204iJG\211\f\20\200H \0`(\220\24\n\5\22\2\2\210\0\6\0\10\2@@\10\203\30 \204\5A0E\4 \210#\t\0@B\20@\203!A\0\4`\0\0J\1\t\224\1\200\200\10\0000H2\2\210\10\1\10 D\20\1!\254\r\n\20 \f\2\0\310S\"\320\210\206\0 \0D@\0\20\1\200\200\202\221\0!\206I\2\10\22\0\0)\0R\10\4\202\20\0 \10\t\200d\2\0 \0\0222\1\0\"\0@\4\1V\0\"\10\201R\10\246\34\2\240\200\0J (\206\20\250\24c\35\210\351\21\0\300\20\204\4\1\30\10\0\0\0\4\0\0\0\10\20\0\20H P@\24", 832) = 832 <0.000125>
00:33:13.326975 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=591960, ...}, AT_EMPTY_PATH) = 0 <0.000083>
00:33:13.327304 mmap(NULL, 655472, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f904ef000 <0.000114>
00:33:13.327620 mmap(0x7f904f0000, 589936, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7f904f0000 <0.000183>
00:33:13.328006 munmap(0x7f904ef000, 4096) = 0 <0.000096>
00:33:13.328298 munmap(0x7f90581000, 57456) = 0 <0.000088>
00:33:13.328580 mprotect(0x7f90570000, 61440, PROT_NONE) = 0 <0.000111>
00:33:13.328889 mmap(0x7f9057f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x8f000) = 0x7f9057f000 <0.000122>
00:33:13.329280 close(3)                = 0 <0.000079>
00:33:13.329578 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3 <0.000096>
00:33:13.329894 read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0py\2\0\0\0\0\0@\0\0\0\0\0\0\0P#\31\0\0\0\0\0\0\0\0\0@\08\0\n\0@\0?\0>\0\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0000\2\0\0\0\0\0\0000\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0(\206\25\0\0\0\0\0(\206\25\0\0\0\0\0(\206\25\0\0\0\0\0\33\0\0\0\0\0\0\0\33\0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0|h\30\0\0\0\0\0|h\30\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\300\315\30\0\0\0\0\0\300\315\31\0\0\0\0\0\300\315\31\0\0\0\0\0HI\0\0\0\0\0\0\340\22\1\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\260\373\30\0\0\0\0\0\260\373\31\0\0\0\0\0\260\373\31\0\0\0\0\0\260\1\0\0\0\0\0\0\260\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0p\2\0\0\0\0\0\0p\2\0\0\0\0\0\0p\2\0\0\0\0\0\0D\0\0\0\0\0\0\0D\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0\7\0\0\0\4\0\0\0\300\315\30\0\0\0\0\0\300\315\31\0\0\0\0\0\300\315\31\0\0\0\0\0\20\0\0\0\0\0\0\0\220\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0P\345td\4\0\0\0D\206\25\0\0\0\0\0D\206\25\0\0\0\0\0D\206\25\0\0\0\0\0lh\0\0\0\0\0\0lh\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\300\315\30\0\0\0\0\0\300\315\31\0\0\0\0\0\300\315\31\0\0\0\0\0@2\0\0\0\0\0\0@2\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\088\365\24\327]\2047Z`\322\252\200\257\6\fMf\\\217\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\7\0\0\0\0\0\0\0\0\0\0\0\361\3\0\0\26\0\0\0\0\1\0\0\16\0\0\0@0\22\\\250 \23\1\210\3\346\220\305E\214\0\304\0X\0\7\204 p\302\200\1\r\212\34\301\24\21\200\310D2\10*@\210V<- N\262H&\204\320\216\4\f\0\3\2\16\261\254:\17f\310\200\3003\0\300\fP\t \201\t\224\v$ ($\0\204$Z0\20X\200\312DB(\0\6\200\20\32C\0\250T\200\0IP\4Q\212P\22\4\0$\0\10  \21\20", 832) = 832 <0.000081>
00:33:13.330269 newfstatat(3, "", {st_mode=S_IFREG|0755, st_size=1651472, ...}, AT_EMPTY_PATH) = 0 <0.000083>
00:33:13.330596 mmap(NULL, 1826976, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f90331000 <0.000117>
00:33:13.331027 mmap(0x7f90340000, 1761440, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7f90340000 <0.000166>
00:33:13.331397 munmap(0x7f90331000, 61440) = 0 <0.000094>
00:33:13.331686 munmap(0x7f904ef000, 160) = 0 <0.000095>
00:33:13.331974 mprotect(0x7f904c7000, 86016, PROT_NONE) = 0 <0.000138>
00:33:13.332308 mmap(0x7f904dc000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18c000) = 0x7f904dc000 <0.000170>
00:33:13.332702 mmap(0x7f904e2000, 49312, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f904e2000 <0.000157>
00:33:13.333119 close(3)                = 0 <0.000077>
00:33:13.333421 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libcrypt.so.1", O_RDONLY|O_CLOEXEC) = 3 <0.000100>
00:33:13.333741 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\08\1\3\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\32\0\31\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\324\337\2\0\0\0\0\0\324\337\2\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0P\370\2\0\0\0\0\0P\370\3\0\0\0\0\0P\370\3\0\0\0\0\0\270\7\0\0\0\0\0\0(\212\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\30\373\2\0\0\0\0\0\30\373\3\0\0\0\0\0\30\373\3\0\0\0\0\0 \2\0\0\0\0\0\0 \2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\30\275\2\0\0\0\0\0\30\275\2\0\0\0\0\0\30\275\2\0\0\0\0\0$\4\0\0\0\0\0\0$\4\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0P\370\2\0\0\0\0\0P\370\3\0\0\0\0\0P\370\3\0\0\0\0\0\260\7\0\0\0\0\0\0\260\7\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\351t\247\321\36P\213\17D}=@\302\204\202\377\325\230\306\\\0\0\0\0\21\0\0\0\36\0\0\0\4\0\0\0\10\0\0\0\30\0\0 \0@`\0\10!\20\2\t$ P\30\1@=\5\3a\1\0h\200@\0\200\0\t\0\0\0\0\36\0\0\0\"\0\0\0\0\0\0\0#\0\0\0$\0\0\0&\0\0\0'\0\0\0\0\0\0\0\0\0\0\0,\0\0\0-\0\0\0000\0\0\0003\0\0\0005\0\0\0006\0\0\0\0\0\0\0`\243\r\22\326\16?\17L\374*\25\327\16?\17\233`\205\33\233(\375B\210x\10Q\177T\270F\313\373_\22\314\370\363\3034\356\2327\266\326\3CH->\333I->\333\3]\270F\250\326\3C\4]\270FC\265\370*\204\260\254\31j\31Qj\357\36\n'\264\"\7a\235X2\177\235C\r\3757\265\370*\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\n\0\270\30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\26\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\353\0\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 832) = 832 <0.000081>
00:33:13.334106 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=198584, ...}, AT_EMPTY_PATH) = 0 <0.000082>
00:33:13.334443 mmap(NULL, 361080, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f902e7000 <0.000120>
00:33:13.334863 mmap(0x7f902f0000, 295544, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7f902f0000 <0.000151>
00:33:13.335219 munmap(0x7f902e7000, 36864) = 0 <0.000094>
00:33:13.335508 munmap(0x7f90339000, 25208) = 0 <0.000088>
00:33:13.335790 mprotect(0x7f9031e000, 69632, PROT_NONE) = 0 <0.000118>
00:33:13.336104 mmap(0x7f9032f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2f000) = 0x7f9032f000 <0.000138>
00:33:13.336466 mmap(0x7f90331000, 29304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f90331000 <0.000110>
00:33:13.336824 close(3)                = 0 <0.000077>
00:33:13.337142 mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f9058e000 <0.000096>
00:33:13.337454 set_tid_address(0x7f9058e110) = 5273 <0.000076>
00:33:13.337723 set_robust_list(0x7f9058e120, 24) = 0 <0.000076>
00:33:13.337993 rseq(0x7f9058e760, 0x20, 0, 0xd428bc00) = 0 <0.000076>
00:33:13.338484 mprotect(0x7f904dc000, 16384, PROT_READ) = 0 <0.000183>
00:33:13.338925 mprotect(0x7f9032f000, 4096, PROT_READ) = 0 <0.000109>
00:33:13.339250 mprotect(0x7f9057f000, 4096, PROT_READ) = 0 <0.000121>
00:33:13.340004 mprotect(0x55720d0000, 65536, PROT_READ) = 0 <0.000118>
00:33:13.340378 mprotect(0x7f905ce000, 8192, PROT_READ) = 0 <0.000115>
00:33:13.340776 prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0 <0.000080>
00:33:13.341148 munmap(0x7f905b8000, 65875) = 0 <0.000159>
00:33:13.341612 rt_sigaction(SIGFPE, {sa_handler=SIG_IGN, sa_mask=[FPE], sa_flags=SA_RESTART}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0 <0.000082>
00:33:13.342045 getrandom("\x66\xe2\x96\xce\xd0\xe6\x0b\x04", 8, GRND_NONBLOCK) = 8 <0.000084>
00:33:13.342356 brk(NULL)               = 0x558a370000 <0.000077>
00:33:13.342629 brk(0x558a391000)       = 0x558a391000 <0.000092>
00:33:13.343276 getuid()                = 1000 <0.000076>
00:33:13.343551 geteuid()               = 1000 <0.000076>
00:33:13.343823 getgid()                = 1000 <0.000076>
00:33:13.344094 getegid()               = 1000 <0.000076>
00:33:13.344406 openat(AT_FDCWD, "/dev/urandom", O_RDONLY|O_CLOEXEC) = 3 <0.000115>
00:33:13.344757 fcntl(3, F_GETFD)       = 0x1 (flags FD_CLOEXEC) <0.000078>
00:33:13.345041 read(3, "\361\247Q@", 4) = 4 <0.000084>
00:33:13.345342 close(3)                = 0 <0.000084>
00:33:13.345622 getuid()                = 1000 <0.000074>
00:33:13.345888 geteuid()               = 1000 <0.000075>
00:33:13.346156 getgid()                = 1000 <0.000075>
00:33:13.346424 getegid()               = 1000 <0.000076>
00:33:13.347132 openat(AT_FDCWD, "/dev/urandom", O_RDONLY|O_CLOEXEC) = 3 <0.000097>
00:33:13.347464 read(3, "0\370\245\316", 4) = 4 <0.000081>
00:33:13.347762 close(3)                = 0 <0.000082>
00:33:13.348326 openat(AT_FDCWD, "/usr/lib/locale/locale-archive", O_RDONLY|O_CLOEXEC) = 3 <0.000098>
00:33:13.348646 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=3048976, ...}, AT_EMPTY_PATH) = 0 <0.000084>
00:33:13.348983 mmap(NULL, 3048976, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f90007000 <0.000129>
00:33:13.349348 close(3)                = 0 <0.000077>
00:33:13.350183 brk(0x558a3b2000)       = 0x558a3b2000 <0.000120>
00:33:13.350591 readlinkat(AT_FDCWD, "/proc/self/exe", "/usr/bin/perl", 4095) = 13 <0.000166>
00:33:13.351110 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/5.36.0/aarch64-linux-gnu-thread-multi", 0x7ff0cc83a8, 0) = -1 ENOENT (No such file or directory) <0.000088>
00:33:13.351445 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/5.36.0", 0x7ff0cc83a8, 0) = -1 ENOENT (No such file or directory) <0.000082>
00:33:13.351758 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/aarch64-linux-gnu-thread-multi", 0x7ff0cc83a8, 0) = -1 ENOENT (No such file or directory) <0.000084>
00:33:13.352134 newfstatat(AT_FDCWD, "/usr/local/lib/site_perl/5.36.0/aarch64-linux-gnu-thread-multi", 0x7ff0cc83a8, 0) = -1 ENOENT (No such file or directory) <0.000085>
00:33:13.352452 newfstatat(AT_FDCWD, "/usr/local/lib/site_perl/5.36.0", 0x7ff0cc83a8, 0) = -1 ENOENT (No such file or directory) <0.000080>
00:33:13.352762 newfstatat(AT_FDCWD, "/usr/local/lib/site_perl/aarch64-linux-gnu-thread-multi", 0x7ff0cc83a8, 0) = -1 ENOENT (No such file or directory) <0.000080>
00:33:13.353097 fcntl(0, F_SETFD, 0)    = 0 <0.000079>
00:33:13.353387 ioctl(0, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHO|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000089>
00:33:13.353721 lseek(0, 0, SEEK_CUR)   = -1 ESPIPE (Illegal seek) <0.000076>
00:33:13.354008 fcntl(1, F_SETFD, 0)    = 0 <0.000075>
00:33:13.354285 ioctl(1, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHO|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000078>
00:33:13.354591 lseek(1, 0, SEEK_CUR)   = -1 ESPIPE (Illegal seek) <0.000076>
00:33:13.354983 fcntl(2, F_SETFD, 0)    = 0 <0.000078>
00:33:13.355264 ioctl(2, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHO|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000078>
00:33:13.355570 lseek(2, 0, SEEK_CUR)   = -1 ESPIPE (Illegal seek) <0.000076>
00:33:13.355857 openat(AT_FDCWD, "/usr/bin/psql", O_RDONLY|O_CLOEXEC) = 3 <0.000103>
00:33:13.356182 fcntl(3, F_GETFD)       = 0x1 (flags FD_CLOEXEC) <0.000076>
00:33:13.356463 ioctl(3, TCGETS, 0x7ff0cc8220) = -1 ENOTTY (Inappropriate ioctl for device) <0.000078>
00:33:13.356749 lseek(3, 0, SEEK_CUR)   = 0 <0.000076>
00:33:13.357027 newfstatat(3, "", {st_mode=S_IFREG|0755, st_size=10481, ...}, AT_EMPTY_PATH) = 0 <0.000083>
00:33:13.357355 getuid()                = 1000 <0.000075>
00:33:13.357625 geteuid()               = 1000 <0.000077>
00:33:13.357894 getgid()                = 1000 <0.000076>
00:33:13.358162 getegid()               = 1000 <0.000077>
00:33:13.358435 rt_sigaction(SIGCHLD, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0 <0.000078>
00:33:13.359917 read(3, "#!/usr/bin/perl\n# Call a PostgreSQL client program with the version, cluster and default\n# database specified in ~/.postgresqlrc or\n# /etc/postgresql-common/user_clusters.\n#\n# (C) 2005-2009 Martin Pitt <mpitt@debian.org>\n# (C) 2013-2022 Christoph Berg <myon@debian.org>\n#\n#  This program is free software; you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation; either version 2 of the License, or\n#  (at your option) any later version.\n#\n#  This program is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n\nuse warnings;\nuse strict;\nuse POSIX;\nuse PgCommon;\n\nmy ($version, $cluster);\nmy $explicit_host = exists $ENV{PGHOST};\nmy $explicit_port = $ENV{PGPORT};\nmy $explicit_service = exists $ENV{PGSERVICE};\n\n# Evaluate PGCLUSTER (unless PGHOST is set as well)\nif (exists $ENV{'PGCLUSTER'} and not $explicit_host) {\n    ($version, $cluster) = split ('/', $ENV{'PGCLUSTER'}, 2);\n    error \"Invalid version $version specified in PGCLUSTER\" unless version_exists $version;\n    error 'No cluster specified with $PGCLUSTER' unless $cluster;\n}\n\n# Check for --cluster argument and filter it out\nfor (my $i = 0; $i <= $#ARGV; ++$i) {\n    last if $ARGV[$i] eq '--';\n\n    if ($ARGV[$i] eq '--cluster') {\n        error '--cluster option needs an argument (<version>/<cluster>)' if ($i >= $#ARGV);\n\n        ($version, $cluster) = split ('/', $ARGV[$i+1], 2);\n        error \"Invalid version $version specified with --cluster\" unless version_exists $version;\n        error 'No cluster specified with --cluster' unless $cluster;\n\n        splice @ARGV, $i, 2;\n        last;\n    } elsif ($ARGV[$i] =~ /^--cluster=(\\d+\\.?\\d)\\/(.+)/) {\n        ($version, $cluster) = ($1, $2);\n        error \"Invalid version $version specified with --cluster\" unless version_exists $version;\n        error 'No cluster specified with --cluster' unless $cluster;\n\n        splice @ARGV, $i, 1;\n        last;\n    }\n    # --host or -h on command line, drop info from PGCLUSTER\n    if ($ARGV[$i] =~ /^--host\\b/ || $ARGV[$i] =~ /^-\\w*h\\w*$/) {\n        ($version, $cluster) = (undef, undef);\n        $explicit_host = 1;\n        delete $ENV{PGCLUSTER};\n    }\n    # --port or -p on command line\n    if ($ARGV[$i] =~ /^--port\\b(?:=(\\d+))?/ || $ARGV[$i] =~ /^-\\w*p(\\d+)?$/) {\n        if (defined $1) {\n            $explicit_port = $1;\n        } elsif ($i < $#ARGV) {\n            $explicit_port = $ARGV[$i+1];\n        }\n    }\n    # \"service=\" in connection string\n    if ($ARGV[$i] =~ /\\bservice=/) {\n        $explicit_service = 1;\n    }\n}\n\n# if only a port is specified, look for local cluster on specified port\nif ($explicit_port and not $version and not $cluster and not $explicit_host and not $explicit_service) {\n    LOOP: foreach my $v (reverse get_versions()) {\n        foreach my $c (get_version_clusters $v) {\n            my $p = get_cluster_port $v, $c;\n            if ($p eq $explicit_port) {\n                $version = $v;\n                # set PGCLUSTER variable for information\n                $ENV{PGCLUSTER} = \"$version/$c\";\n                last LOOP;\n            }\n        }\n    }\n}\n\n# if we don't have a cluster, and no specific host or port was given, consult postgresqlrc\n# or fall back to default port cluster (on 5432), or undef otherwise\nmy ($db);\n($version, $cluster, $db) = user_cluster_map() unless ($cluster or $explicit_host or $explicit_port);\n\nmy ($host, $port);\n\nif ($cluster) {\n    # check if we have a network cluster (N.N/the.host.name:port)\n    if ($cluster =~ /^(\\S+):(\\d*)$/) {\n\t$host = $1;\n\t$port = $2 || $PgCommon::defaultport;\n    } elsif (not cluster_exists($version, $cluster)) {\n        # a specific cluster was requested, error out because it doesn't exist\n        error \"Cluster $version $cluster does not exist\";\n    } else {\n        $host = get_cluster_socketdir ($version, $cluster);\n        $port = get_cluster_port($version, $clust"..., 8192) = 8192 <0.000115>
00:33:13.360739 newfstatat(AT_FDCWD, "/etc/perl/warnings.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000091>
00:33:13.361073 newfstatat(AT_FDCWD, "/etc/perl/warnings.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000081>
00:33:13.361392 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/warnings.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000083>
00:33:13.361705 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/warnings.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000083>
00:33:13.362023 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/warnings.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000083>
00:33:13.362333 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/warnings.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000083>
00:33:13.362844 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/warnings.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000102>
00:33:13.363195 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/warnings.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000086>
00:33:13.363521 newfstatat(AT_FDCWD, "/usr/share/perl5/warnings.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000087>
00:33:13.363840 newfstatat(AT_FDCWD, "/usr/share/perl5/warnings.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000086>
00:33:13.364162 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/warnings.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000086>
00:33:13.364516 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/warnings.pm", {st_mode=S_IFREG|0644, st_size=29669, ...}, 0) = 0 <0.000089>
00:33:13.364867 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/warnings.pm", O_RDONLY|O_CLOEXEC) = 4 <0.000109>
00:33:13.365209 ioctl(4, TCGETS, 0x7ff0cc79e0) = -1 ENOTTY (Inappropriate ioctl for device) <0.000083>
00:33:13.365507 lseek(4, 0, SEEK_CUR)   = 0 <0.000084>
00:33:13.365867 read(4, "# -*- buffer-read-only: t -*-\n# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!\n# This file is built by regen/warnings.pl.\n# Any changes made here will be lost!\n\npackage warnings;\n\nour $VERSION = \"1.58\";\n\n# Verify that we're called correctly so that warnings will work.\n# Can't use Carp, since Carp uses us!\n# String regexps because constant folding = smaller optree = less memory vs regexp literal\n# see also strict.pm.\ndie sprintf \"Incorrect use of pragma '%s' at %s line %d.\\n\", __PACKAGE__, +(caller)[1,2]\n    if __FILE__ !~ ( '(?x) \\b     '.__PACKAGE__.'  \\.pmc? \\z' )\n    && __FILE__ =~ ( '(?x) \\b (?i:'.__PACKAGE__.') \\.pmc? \\z' );\n\nour %Offsets = (\n    # Warnings Categories added in Perl 5.008\n    'all'\t\t\t\t=> 0,\n    'closure'\t\t\t\t=> 2,\n    'deprecated'\t\t\t=> 4,\n    'exiting'\t\t\t\t=> 6,\n    'glob'\t\t\t\t=> 8,\n    'io'\t\t\t\t=> 10,\n    'closed'\t\t\t\t=> 12,\n    'exec'\t\t\t\t=> 14,\n    'layer'\t\t\t\t=> 16,\n    'newline'\t\t\t\t=> 18,\n    'pipe'\t\t\t\t=> 20,\n    'unopened'\t\t\t\t=> 22,\n    'misc'\t\t\t\t=> 24,\n    'numeric'\t\t\t\t=> 26,\n    'once'\t\t\t\t=> 28,\n    'overflow'\t\t\t\t=> 30,\n    'pack'\t\t\t\t=> 32,\n    'portable'\t\t\t\t=> 34,\n    'recursion'\t\t\t\t=> 36,\n    'redefine'\t\t\t\t=> 38,\n    'regexp'\t\t\t\t=> 40,\n    'severe'\t\t\t\t=> 42,\n    'debugging'\t\t\t\t=> 44,\n    'inplace'\t\t\t\t=> 46,\n    'internal'\t\t\t\t=> 48,\n    'malloc'\t\t\t\t=> 50,\n    'signal'\t\t\t\t=> 52,\n    'substr'\t\t\t\t=> 54,\n    'syntax'\t\t\t\t=> 56,\n    'ambiguous'\t\t\t\t=> 58,\n    'bareword'\t\t\t\t=> 60,\n    'digit'\t\t\t\t=> 62,\n    'parenthesis'\t\t\t=> 64,\n    'precedence'\t\t\t=> 66,\n    'printf'\t\t\t\t=> 68,\n    'prototype'\t\t\t\t=> 70,\n    'qw'\t\t\t\t=> 72,\n    'reserved'\t\t\t\t=> 74,\n    'semicolon'\t\t\t\t=> 76,\n    'taint'\t\t\t\t=> 78,\n    'threads'\t\t\t\t=> 80,\n    'uninitialized'\t\t\t=> 82,\n    'unpack'\t\t\t\t=> 84,\n    'untie'\t\t\t\t=> 86,\n    'utf8'\t\t\t\t=> 88,\n    'void'\t\t\t\t=> 90,\n\n    # Warnings Categories added in Perl 5.011\n    'imprecision'\t\t\t=> 92,\n    'illegalproto'\t\t\t=> 94,\n\n    # Warnings Categories added in Perl 5.013\n    'non_unicode'\t\t\t=> 96,\n    'nonchar'\t\t\t\t=> 98,\n    'surrogate'\t\t\t\t=> 100,\n\n    # Warnings Categories added in Perl 5.017\n    'experimental'\t\t\t=> 102,\n    'experimental::lexical_subs'\t=> 104,\n    'experimental::regex_sets'\t\t=> 106,\n    'experimental::smartmatch'\t\t=> 108,\n\n    # Warnings Categories added in Perl 5.019\n    'experimental::postderef'\t\t=> 110,\n    'experimental::signatures'\t\t=> 112,\n    'syscalls'\t\t\t\t=> 114,\n\n    # Warnings Categories added in Perl 5.021\n    'experimental::bitwise'\t\t=> 116,\n    'experimental::const_attr'\t\t=> 118,\n    'experimental::re_strict'\t\t=> 120,\n    'experimental::refaliasing'\t\t=> 122,\n    'locale'\t\t\t\t=> 124,\n    'missing'\t\t\t\t=> 126,\n    'redundant'\t\t\t\t=> 128,\n\n    # Warnings Categories added in Perl 5.025\n    'experimental::declared_refs'\t=> 130,\n\n    # Warnings Categories added in Perl 5.027\n    'experimental::alpha_assertions'\t=> 132,\n    'experimental::script_run'\t\t=> 134,\n    'shadow'\t\t\t\t=> 136,\n\n    # Warnings Categories added in Perl 5.029\n    'experimental::private_use'\t\t=> 138,\n    'experimental::uniprop_wildcards'\t=> 140,\n    'experimental::vlb'\t\t\t=> 142,\n\n    # Warnings Categories added in Perl 5.031\n    'experimental::isa'\t\t\t=> 144,\n\n    # Warnings Categories added in Perl 5.033\n    'experimental::try'\t\t\t=> 146,\n\n    # Warnings Categories added in Perl 5.035\n    'experimental::args_array_with_signatures'=> 148,\n    'experimental::builtin'\t\t=> 150,\n    'experimental::defer'\t\t=> 152,\n    'experimental::extra_paired_delimiters'=> 154,\n    'experimental::for_list'\t\t=> 156,\n    'scalar'\t\t\t\t=> 158,\n);\n\nour %Bits = (\n    'all'\t\t\t\t=> \"\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\", # [0..79]\n    'ambiguous'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [29]\n    'bareword'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [30]\n    'closed'\t\t\t\t=> \"\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [6]\n    'closure'\t\t\t\t=> \"\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [1]\n    'debugging'\t\t\t\t=> \"\\x00\\x00\\x00\\x"..., 8192) = 8192 <0.000122>
00:33:13.366379 brk(0x558a3d3000)       = 0x558a3d3000 <0.000118>
00:33:13.368139 read(4, "..11,57]\n    'layer'\t\t\t\t=> \"\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [8]\n    'locale'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\", # [62]\n    'malloc'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [25]\n    'misc'\t\t\t\t=> \"\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [12]\n    'missing'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\", # [63]\n    'newline'\t\t\t\t=> \"\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [9]\n    'non_unicode'\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [48]\n    'nonchar'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [49]\n    'numeric'\t\t\t\t=> \"\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [13]\n    'once'\t\t\t\t=> \"\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [14]\n    'overflow'\t\t\t\t=> \"\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [15]\n    'pack'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [16]\n    'parenthesis'\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [32]\n    'pipe'\t\t\t\t=> \"\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [10]\n    'portable'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [17]\n    'precedence'\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [33]\n    'printf'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [34]\n    'prototype'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [35]\n    'qw'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [36]\n    'recursion'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [18]\n    'redefine'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [19]\n    'redundant'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\", # [64]\n    'regexp'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [20]\n    'reserved'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [37]\n    'scalar'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\", # [79]\n    'semicolon'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [38]\n    'severe'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x54\\x05\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [21..25]\n    'shadow'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\", # [68]\n    'signal'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [26]\n    'substr'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [27]\n    'surrogate'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [50]\n    'syntax'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x55\\x55\\x15\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [28..38,47]\n    'syscalls'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\", # [57]\n    'taint'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [39]\n    'threads'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [40]\n    'uninitialized'\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [41]\n    'unopened'\t\t\t\t=> \"\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0"..., 8192) = 8192 <0.000060>
00:33:13.369693 read(4, "00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\", # [54]\n    'experimental::try'\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\", # [73]\n    'experimental::uniprop_wildcards'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\", # [70]\n    'experimental::vlb'\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\", # [71]\n    'glob'\t\t\t\t=> \"\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [4]\n    'illegalproto'\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [47]\n    'imprecision'\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [46]\n    'inplace'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [23]\n    'internal'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [24]\n    'io'\t\t\t\t=> \"\\x00\\xa8\\xaa\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\", # [5..11,57]\n    'layer'\t\t\t\t=> \"\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [8]\n    'locale'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\", # [62]\n    'malloc'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [25]\n    'misc'\t\t\t\t=> \"\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [12]\n    'missing'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\", # [63]\n    'newline'\t\t\t\t=> \"\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [9]\n    'non_unicode'\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [48]\n    'nonchar'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [49]\n    'numeric'\t\t\t\t=> \"\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [13]\n    'once'\t\t\t\t=> \"\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [14]\n    'overflow'\t\t\t\t=> \"\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [15]\n    'pack'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [16]\n    'parenthesis'\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [32]\n    'pipe'\t\t\t\t=> \"\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [10]\n    'portable'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [17]\n    'precedence'\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [33]\n    'printf'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [34]\n    'prototype'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [35]\n    'qw'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [36]\n    'recursion'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [18]\n    'redefine'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [19]\n    'redundant'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\", # [64]\n    'regexp'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [20]\n    'reserved'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [37]\n    'scalar'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\", # [79]\n    'semicolon'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [38]\n    'severe'\t\t\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\xa8\\x0a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [21..25]\n    'shadow"..., 8192) = 8192 <0.000057>
00:33:13.371211 brk(0x558a3f4000)       = 0x558a3f4000 <0.000066>
00:33:13.372715 read(4, "(empty import list or after a lone \"FATAL\")\n    push @_, 'all' if !@_ || @_==1 && $_[0] eq 'FATAL';\n\n    $mask = _expand_bits($mask);\n    foreach my $word ( @_ ) {\n        if ($word eq 'FATAL') {\n            next;\n        }\n        elsif ($catmask = $Bits{$word}) {\n            $mask = ~(~$mask | $catmask | $DeadBits{$word});\n        }\n        else\n          { Croaker(\"Unknown warnings category '$word'\")}\n    }\n\n    ${^WARNING_BITS} = $mask ;\n}\n\nmy %builtin_type; @builtin_type{qw(SCALAR ARRAY HASH CODE REF GLOB LVALUE Regexp)} = ();\n\nsub LEVEL () { 8 };\nsub MESSAGE () { 4 };\nsub FATAL () { 2 };\nsub NORMAL () { 1 };\n\nsub __chk\n{\n    my $category ;\n    my $offset ;\n    my $isobj = 0 ;\n    my $wanted = shift;\n    my $has_message = $wanted & MESSAGE;\n    my $has_level   = $wanted & LEVEL  ;\n\n    if ($has_level) {\n        if (@_ != ($has_message ? 3 : 2)) {\n            my $sub = (caller 1)[3];\n            my $syntax = $has_message\n                ? \"category, level, 'message'\"\n                : 'category, level';\n            Croaker(\"Usage: $sub($syntax)\");\n        }\n    }\n    elsif (not @_ == 1 || @_ == ($has_message ? 2 : 0)) {\n        my $sub = (caller 1)[3];\n        my $syntax = $has_message ? \"[category,] 'message'\" : '[category]';\n        Croaker(\"Usage: $sub($syntax)\");\n    }\n\n    my $message = pop if $has_message;\n\n    if (@_) {\n        # check the category supplied.\n        $category = shift ;\n        if (my $type = ref $category) {\n            Croaker(\"not an object\")\n                if exists $builtin_type{$type};\n            $category = $type;\n            $isobj = 1 ;\n        }\n        $offset = $Offsets{$category};\n        Croaker(\"Unknown warnings category '$category'\")\n            unless defined $offset;\n    }\n    else {\n        $category = (caller(1))[0] ;\n        $offset = $Offsets{$category};\n        Croaker(\"package '$category' not registered for warnings\")\n            unless defined $offset ;\n    }\n\n    my $i;\n\n    if ($isobj) {\n        my $pkg;\n        $i = 2;\n        while (do { { package DB; $pkg = (caller($i++))[0] } } ) {\n            last unless @DB::args && $DB::args[0] =~ /^$category=/ ;\n        }\n        $i -= 2 ;\n    }\n    elsif ($has_level) {\n        $i = 2 + shift;\n    }\n    else {\n        $i = _error_loc(); # see where Carp will allocate the error\n    }\n\n    # Default to 0 if caller returns nothing.  Default to $DEFAULT if it\n    # explicitly returns undef.\n    my(@callers_bitmask) = (caller($i))[9] ;\n    my $callers_bitmask =\n         @callers_bitmask ? $callers_bitmask[0] // $DEFAULT : 0 ;\n    length($callers_bitmask) > ($offset >> 3) or $offset = $Offsets{all};\n\n    my @results;\n    foreach my $type (FATAL, NORMAL) {\n        next unless $wanted & $type;\n\n        push @results, vec($callers_bitmask, $offset + $type - 1, 1);\n    }\n\n    # &enabled and &fatal_enabled\n    return $results[0] unless $has_message;\n\n    # &warnif, and the category is neither enabled as warning nor as fatal\n    return if ($wanted & (NORMAL | FATAL | MESSAGE))\n                      == (NORMAL | FATAL | MESSAGE)\n        && !($results[0] || $results[1]);\n\n    # If we have an explicit level, bypass Carp.\n    if ($has_level and @callers_bitmask) {\n        # logic copied from util.c:mess_sv\n        my $stuff = \" at \" . join \" line \", (caller $i)[1,2];\n        $stuff .= sprintf \", <%s> %s %d\",\n                           *${^LAST_FH}{NAME},\n                           ($/ eq \"\\n\" ? \"line\" : \"chunk\"), $.\n            if $. && ${^LAST_FH};\n        die \"$message$stuff.\\n\" if $results[0];\n        return warn \"$message$stuff.\\n\";\n    }\n\n    require Carp;\n    Carp::croak($message) if $results[0];\n    # will always get here for &warn. will only get here for &warnif if the\n    # category is enabled\n    Carp::carp($message);\n}\n\nsub _mkMask\n{\n    my ($bit) = @_;\n    my $mask = \"\";\n\n    vec($mask, $bit, 1) = 1;\n    return $mask;\n}\n\nsub register_categories\n{\n    my @names = @_;\n\n    for my $name (@names) {\n        if (! defined $Bits{$name}) {\n            $Offsets{$name}  = $LAST_BIT;\n            $Bits{$name}     = _mkMask($LAST_BIT++);\n   "..., 8192) = 5093 <0.000059>
00:33:13.374855 brk(0x558a415000)       = 0x558a415000 <0.000066>
00:33:13.376351 lseek(4, 29654, SEEK_SET) = 29654 <0.000049>
00:33:13.376522 lseek(4, 0, SEEK_CUR)   = 29654 <0.000045>
00:33:13.376682 close(4)                = 0 <0.000055>
00:33:13.377564 newfstatat(AT_FDCWD, "/etc/perl/strict.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000055>
00:33:13.377787 newfstatat(AT_FDCWD, "/etc/perl/strict.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.377967 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/strict.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.378173 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/strict.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.378352 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/strict.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.378525 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/strict.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.378737 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/strict.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000051>
00:33:13.378924 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/strict.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.379101 newfstatat(AT_FDCWD, "/usr/share/perl5/strict.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.379277 newfstatat(AT_FDCWD, "/usr/share/perl5/strict.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.379453 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/strict.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.379637 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/strict.pm", {st_mode=S_IFREG|0644, st_size=1606, ...}, 0) = 0 <0.000049>
00:33:13.379834 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/strict.pm", O_RDONLY|O_CLOEXEC) = 4 <0.000064>
00:33:13.380029 ioctl(4, TCGETS, 0x7ff0cc79e0) = -1 ENOTTY (Inappropriate ioctl for device) <0.000046>
00:33:13.380195 lseek(4, 0, SEEK_CUR)   = 0 <0.000046>
00:33:13.380378 read(4, "package strict;\n\n$strict::VERSION = \"1.12\";\n\nmy ( %bitmask, %explicit_bitmask );\n\nBEGIN {\n    # Verify that we're called correctly so that strictures will work.\n    # Can't use Carp, since Carp uses us!\n    # see also warnings.pm.\n    die sprintf \"Incorrect use of pragma '%s' at %s line %d.\\n\", __PACKAGE__, +(caller)[1,2]\n        if __FILE__ !~ ( '(?x) \\b     '.__PACKAGE__.'  \\.pmc? \\z' )\n        && __FILE__ =~ ( '(?x) \\b (?i:'.__PACKAGE__.') \\.pmc? \\z' );\n\n    %bitmask = (\n        refs => 0x00000002,\n        subs => 0x00000200,\n        vars => 0x00000400,\n    );\n\n    %explicit_bitmask = (\n        refs => 0x00000020,\n        subs => 0x00000040,\n        vars => 0x00000080,\n    );\n\n    my $bits = 0;\n    $bits |= $_ for values %bitmask;\n\n    my $inline_all_bits = $bits;\n    *all_bits = sub () { $inline_all_bits };\n\n    $bits = 0;\n    $bits |= $_ for values %explicit_bitmask;\n\n    my $inline_all_explicit_bits = $bits;\n    *all_explicit_bits = sub () { $inline_all_explicit_bits };\n}\n\nsub bits {\n    my $bits = 0;\n    my @wrong;\n    foreach my $s (@_) {\n        if (exists $bitmask{$s}) {\n            $^H |= $explicit_bitmask{$s};\n\n            $bits |= $bitmask{$s};\n        }\n        else {\n            push @wrong, $s;\n        }\n    }\n    if (@wrong) {\n        require Carp;\n        Carp::croak(\"Unknown 'strict' tag(s) '@wrong'\");\n    }\n    $bits;\n}\n\nsub import {\n    shift;\n    $^H |= @_ ? &bits : all_bits | all_explicit_bits;\n}\n\nsub unimport {\n    shift;\n\n    if (@_) {\n        $^H &= ~&bits;\n    }\n    else {\n        $^H &= ~all_bits;\n        $^H |= all_explicit_bits;\n    }\n}\n\n1;\n__END__\n\n", 8192) = 1606 <0.000053>
00:33:13.381689 lseek(4, 1605, SEEK_SET) = 1605 <0.000049>
00:33:13.381864 lseek(4, 0, SEEK_CUR)   = 1605 <0.000046>
00:33:13.382021 close(4)                = 0 <0.000051>
00:33:13.382281 newfstatat(AT_FDCWD, "/etc/perl/POSIX.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000050>
00:33:13.382469 newfstatat(AT_FDCWD, "/etc/perl/POSIX.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.382670 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/POSIX.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.382852 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/POSIX.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000045>
00:33:13.383054 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/POSIX.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000045>
00:33:13.383231 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/POSIX.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000044>
00:33:13.383402 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/POSIX.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.383575 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/POSIX.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000045>
00:33:13.383747 newfstatat(AT_FDCWD, "/usr/share/perl5/POSIX.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.383918 newfstatat(AT_FDCWD, "/usr/share/perl5/POSIX.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000044>
00:33:13.384090 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/POSIX.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.384262 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/POSIX.pm", {st_mode=S_IFREG|0644, st_size=20383, ...}, 0) = 0 <0.000047>
00:33:13.384450 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/POSIX.pm", O_RDONLY|O_CLOEXEC) = 4 <0.000060>
00:33:13.384637 ioctl(4, TCGETS, 0x7ff0cc79e0) = -1 ENOTTY (Inappropriate ioctl for device) <0.000043>
00:33:13.384796 lseek(4, 0, SEEK_CUR)   = 0 <0.000042>
00:33:13.384967 read(4, "package POSIX;\nuse strict;\nuse warnings;\n\nour ($AUTOLOAD, %SIGRT);\n\nour $VERSION = '2.03';\n\nrequire XSLoader;\n\nuse Fcntl qw(FD_CLOEXEC F_DUPFD F_GETFD F_GETFL F_GETLK F_RDLCK F_SETFD\n\t     F_SETFL F_SETLK F_SETLKW F_UNLCK F_WRLCK O_ACCMODE O_APPEND\n\t     O_CREAT O_EXCL O_NOCTTY O_NONBLOCK O_RDONLY O_RDWR O_TRUNC\n\t     O_WRONLY SEEK_CUR SEEK_END SEEK_SET\n\t     S_ISBLK S_ISCHR S_ISDIR S_ISFIFO S_ISREG\n\t     S_IRGRP S_IROTH S_IRUSR S_IRWXG S_IRWXO S_IRWXU S_ISGID S_ISUID\n\t     S_IWGRP S_IWOTH S_IWUSR S_IXGRP S_IXOTH S_IXUSR);\n\nmy $loaded;\n\nsub croak { require Carp;  goto &Carp::croak }\nsub usage { croak \"Usage: POSIX::$_[0]\" }\n\nXSLoader::load();\n\nmy %replacement = (\n    L_tmpnam    => undef,\n    atexit      => 'END {}',\n    atof        => undef,\n    atoi        => undef,\n    atol        => undef,\n    bsearch     => \\'not supplied',\n    calloc      => undef,\n    clearerr    => 'IO::Handle::clearerr',\n    div         => '/, % and int',\n    execl       => undef,\n    execle      => undef,\n    execlp      => undef,\n    execv       => undef,\n    execve      => undef,\n    execvp      => undef,\n    fclose      => 'IO::Handle::close',\n    fdopen      => 'IO::Handle::new_from_fd',\n    feof        => 'IO::Handle::eof',\n    ferror      => 'IO::Handle::error',\n    fflush      => 'IO::Handle::flush',\n    fgetc       => 'IO::Handle::getc',\n    fgetpos     => 'IO::Seekable::getpos',\n    fgets       => 'IO::Handle::gets',\n    fileno      => 'IO::Handle::fileno',\n    fopen       => 'IO::File::open',\n    fprintf     => 'printf',\n    fputc       => 'print',\n    fputs       => 'print',\n    fread       => 'read',\n    free        => undef,\n    freopen     => 'open',\n    fscanf      => '<> and regular expressions',\n    fseek       => 'IO::Seekable::seek',\n    fsetpos     => 'IO::Seekable::setpos',\n    fsync       => 'IO::Handle::sync',\n    ftell       => 'IO::Seekable::tell',\n    fwrite      => 'print',\n    labs        => 'abs',\n    ldiv        => '/, % and int',\n    longjmp     => 'die',\n    malloc      => undef,\n    memchr      => 'index()',\n    memcmp      => 'eq',\n    memcpy      => '=',\n    memmove     => '=',\n    memset      => 'x',\n    offsetof    => undef,\n    putc        => 'print',\n    putchar     => 'print',\n    puts        => 'print',\n    qsort       => 'sort',\n    rand        => \\'non-portable, use Perl\\'s rand instead',\n    realloc     => undef,\n    scanf       => '<> and regular expressions',\n    setbuf      => 'IO::Handle::setbuf',\n    setjmp      => 'eval {}',\n    setvbuf     => 'IO::Handle::setvbuf',\n    siglongjmp  => 'die',\n    sigsetjmp   => 'eval {}',\n    srand       => \\'not supplied; refer to Perl\\'s srand documentation',\n    sscanf      => 'regular expressions',\n    strcat      => '.=',\n    strchr      => 'index()',\n    strcmp      => 'eq',\n    strcpy      => '=',\n    strcspn     => 'regular expressions',\n    strlen      => 'length',\n    strncat     => '.=',\n    strncmp     => 'eq',\n    strncpy     => '=',\n    strpbrk     => undef,\n    strrchr     => 'rindex()',\n    strspn      => undef,\n    strtok      => undef,\n    tmpfile     => 'IO::File::new_tmpfile',\n    tmpnam      => 'use File::Temp',\n    ungetc      => 'IO::Handle::ungetc',\n    vfprintf    => undef,\n    vprintf     => undef,\n    vsprintf    => undef,\n);\n\nmy %reimpl = (\n    abs       => 'x => CORE::abs($_[0])',\n    alarm     => 'seconds => CORE::alarm($_[0])',\n    assert    => 'expr => croak \"Assertion failed\" if !$_[0]',\n    atan2     => 'x, y => CORE::atan2($_[0], $_[1])',\n    chdir     => 'directory => CORE::chdir($_[0])',\n    chmod     => 'mode, filename => CORE::chmod($_[0], $_[1])',\n    chown     => 'uid, gid, filename => CORE::chown($_[0], $_[1], $_[2])',\n    closedir  => 'dirhandle => CORE::closedir($_[0])',\n    cos       => 'x => CORE::cos($_[0])',\n    creat     => 'filename, mode => &open($_[0], &O_WRONLY | &O_CREAT | &O_TRUNC, $_[1])',\n    errno     => '$! + 0',\n    exit      => 'status => CORE::exit($_[0])',\n    exp       => 'x => CORE::exp($_[0])',\n    fabs      => 'x => CORE::abs($_[0])',\n    fcntl     => 'filehandle, cmd, arg => CORE::fcntl($_[0], $_"..., 8192) = 8192 <0.000053>
00:33:13.385600 newfstatat(AT_FDCWD, "/etc/perl/Fcntl.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.385784 newfstatat(AT_FDCWD, "/etc/perl/Fcntl.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000044>
00:33:13.385960 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/Fcntl.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000045>
00:33:13.386130 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/Fcntl.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000044>
00:33:13.386301 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/Fcntl.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000045>
00:33:13.386469 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/Fcntl.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000044>
00:33:13.386641 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/Fcntl.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000051>
00:33:13.386858 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/Fcntl.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.387035 newfstatat(AT_FDCWD, "/usr/share/perl5/Fcntl.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.387209 newfstatat(AT_FDCWD, "/usr/share/perl5/Fcntl.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.387383 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Fcntl.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.387558 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Fcntl.pm", {st_mode=S_IFREG|0644, st_size=2100, ...}, 0) = 0 <0.000049>
00:33:13.387747 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Fcntl.pm", O_RDONLY|O_CLOEXEC) = 5 <0.000057>
00:33:13.387930 ioctl(5, TCGETS, 0x7ff0cc7210) = -1 ENOTTY (Inappropriate ioctl for device) <0.000045>
00:33:13.388092 lseek(5, 0, SEEK_CUR)   = 0 <0.000045>
00:33:13.388295 read(5, "package Fcntl;\n\nuse strict;\n\nuse Exporter 'import';\nrequire XSLoader;\nour $VERSION = '1.15';\n\nXSLoader::load();\n\n# Named groups of exports\nour %EXPORT_TAGS = (\n    'flock'   => [qw(LOCK_SH LOCK_EX LOCK_NB LOCK_UN)],\n    'Fcompat' => [qw(FAPPEND FASYNC FCREAT FDEFER FDSYNC FEXCL FLARGEFILE\n\t\t     FNDELAY FNONBLOCK FRSYNC FSYNC FTRUNC)],\n    'seek'    => [qw(SEEK_SET SEEK_CUR SEEK_END)],\n    'mode'    => [qw(S_ISUID S_ISGID S_ISVTX S_ISTXT\n\t\t     _S_IFMT S_IFREG S_IFDIR S_IFLNK\n\t\t     S_IFSOCK S_IFBLK S_IFCHR S_IFIFO S_IFWHT S_ENFMT\n\t\t     S_IRUSR S_IWUSR S_IXUSR S_IRWXU\n\t\t     S_IRGRP S_IWGRP S_IXGRP S_IRWXG\n\t\t     S_IROTH S_IWOTH S_IXOTH S_IRWXO\n\t\t     S_IREAD S_IWRITE S_IEXEC\n\t\t     S_ISREG S_ISDIR S_ISLNK S_ISSOCK\n\t\t     S_ISBLK S_ISCHR S_ISFIFO\n\t\t     S_ISWHT S_ISENFMT\t\t\n\t\t     S_IFMT S_IMODE\n                  )],\n);\n\n# Items to export into callers namespace by default\n# (move infrequently used names to @EXPORT_OK below)\nour @EXPORT =\n  qw(\n\tFD_CLOEXEC\n\tF_ALLOCSP\n\tF_ALLOCSP64\n\tF_COMPAT\n\tF_DUP2FD\n\tF_DUPFD\n\tF_EXLCK\n\tF_FREESP\n\tF_FREESP64\n\tF_FSYNC\n\tF_FSYNC64\n\tF_GETFD\n\tF_GETFL\n\tF_GETLK\n\tF_GETLK64\n\tF_GETOWN\n\tF_NODNY\n\tF_POSIX\n\tF_RDACC\n\tF_RDDNY\n\tF_RDLCK\n\tF_RWACC\n\tF_RWDNY\n\tF_SETFD\n\tF_SETFL\n\tF_SETLK\n\tF_SETLK64\n\tF_SETLKW\n\tF_SETLKW64\n\tF_SETOWN\n\tF_SHARE\n\tF_SHLCK\n\tF_UNLCK\n\tF_UNSHARE\n\tF_WRACC\n\tF_WRDNY\n\tF_WRLCK\n\tO_ACCMODE\n\tO_ALIAS\n\tO_APPEND\n\tO_ASYNC\n\tO_BINARY\n\tO_CREAT\n\tO_DEFER\n\tO_DIRECT\n\tO_DIRECTORY\n\tO_DSYNC\n\tO_EXCL\n\tO_EXLOCK\n\tO_LARGEFILE\n\tO_NDELAY\n\tO_NOCTTY\n\tO_NOFOLLOW\n\tO_NOINHERIT\n\tO_NONBLOCK\n\tO_RANDOM\n\tO_RAW\n\tO_RDONLY\n\tO_RDWR\n\tO_RSRC\n\tO_RSYNC\n\tO_SEQUENTIAL\n\tO_SHLOCK\n\tO_SYNC\n\tO_TEMPORARY\n\tO_TEXT\n\tO_TRUNC\n\tO_WRONLY\n     );\n\n# Other items we are prepared to export if requested\nour @EXPORT_OK = (qw(\n\tDN_ACCESS\n\tDN_ATTRIB\n\tDN_CREATE\n\tDN_DELETE\n\tDN_MODIFY\n\tDN_MULTISHOT\n\tDN_RENAME\n\tF_GETLEASE\n\tF_GETPIPE_SZ\n\tF_GETSIG\n\tF_NOTIFY\n\tF_SETLEASE\n\tF_SETPIPE_SZ\n\tF_SETSIG\n\tLOCK_MAND\n\tLOCK_READ\n\tLOCK_RW\n\tLOCK_WRITE\n        O_ALT_IO\n        O_EVTONLY\n\tO_IGNORE_CTTY\n\tO_NOATIME\n\tO_NOLINK\n        O_NOSIGPIPE\n\tO_NOTRANS\n        O_SYMLINK\n        O_TTY_INIT\n), map {@{$_}} values %EXPORT_TAGS);\n\n1;\n", 8192) = 2100 <0.000050>
00:33:13.388666 newfstatat(AT_FDCWD, "/etc/perl/Exporter.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000050>
00:33:13.388848 newfstatat(AT_FDCWD, "/etc/perl/Exporter.pm", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.389024 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/Exporter.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.389198 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/Exporter.pm", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.389375 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/Exporter.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.389547 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/Exporter.pm", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.389723 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/Exporter.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.389898 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/Exporter.pm", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.390074 newfstatat(AT_FDCWD, "/usr/share/perl5/Exporter.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.390248 newfstatat(AT_FDCWD, "/usr/share/perl5/Exporter.pm", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.390423 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Exporter.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.390597 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Exporter.pm", {st_mode=S_IFREG|0644, st_size=2336, ...}, 0) = 0 <0.000075>
00:33:13.390818 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Exporter.pm", O_RDONLY|O_CLOEXEC) = 6 <0.000054>
00:33:13.390998 ioctl(6, TCGETS, 0x7ff0cc6a40) = -1 ENOTTY (Inappropriate ioctl for device) <0.000045>
00:33:13.391160 lseek(6, 0, SEEK_CUR)   = 0 <0.000046>
00:33:13.391375 read(6, "package Exporter;\n\nuse strict;\nno strict 'refs';\n\nour $Debug = 0;\nour $ExportLevel = 0;\nour $Verbose ||= 0;\nour $VERSION = '5.77';\nour %Cache;\n\nsub as_heavy {\n  require Exporter::Heavy;\n  # Unfortunately, this does not work if the caller is aliased as *name = \\&foo\n  # Thus the need to create a lot of identical subroutines\n  my $c = (caller(1))[3];\n  $c =~ s/.*:://;\n  \\&{\"Exporter::Heavy::heavy_$c\"};\n}\n\nsub export {\n  goto &{as_heavy()};\n}\n\nsub import {\n  my $pkg = shift;\n  my $callpkg = caller($ExportLevel);\n\n  if ($pkg eq \"Exporter\" and @_ and $_[0] eq \"import\") {\n    *{$callpkg.\"::import\"} = \\&import;\n    return;\n  }\n\n  # We *need* to treat @{\"$pkg\\::EXPORT_FAIL\"} since Carp uses it :-(\n  my $exports = \\@{\"$pkg\\::EXPORT\"};\n  # But, avoid creating things if they don't exist, which saves a couple of\n  # hundred bytes per package processed.\n  my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \\@{\"$pkg\\::EXPORT_FAIL\"};\n  return export $pkg, $callpkg, @_\n    if $Verbose or $Debug or $fail && @$fail > 1;\n  my $export_cache = ($Cache{$pkg} ||= {});\n  my $args = @_ or @_ = @$exports;\n\n  if ($args and not %$export_cache) {\n    s/^&//, $export_cache->{$_} = 1\n      foreach (@$exports, @{\"$pkg\\::EXPORT_OK\"});\n  }\n  my $heavy;\n  # Try very hard not to use {} and hence have to  enter scope on the foreach\n  # We bomb out of the loop with last as soon as heavy is set.\n  if ($args or $fail) {\n    ($heavy = (/\\W/ or $args and not exists $export_cache->{$_}\n               or $fail and @$fail and $_ eq $fail->[0])) and last\n                 foreach (@_);\n  } else {\n    ($heavy = /\\W/) and last\n      foreach (@_);\n  }\n  return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;\n  local $SIG{__WARN__} = \n\tsub {require Carp; &Carp::carp} if not $SIG{__WARN__};\n  # shortcut for the common case of no type character\n  *{\"$callpkg\\::$_\"} = \\&{\"$pkg\\::$_\"} foreach @_;\n}\n\n# Default methods\n\nsub export_fail {\n    my $self = shift;\n    @_;\n}\n\n# Unfortunately, caller(1)[3] \"does not work\" if the caller is aliased as\n# *name = \\&foo.  Thus the need to create a lot of identical subroutines\n# Otherwise we could have aliased them to export().\n\nsub export_to_level {\n  goto &{as_heavy()};\n}\n\nsub export_tags {\n  goto &{as_heavy()};\n}\n\nsub export_ok_tags {\n  goto &{as_heavy()};\n}\n\nsub require_version {\n  goto &{as_heavy()};\n}\n\n1;\n__END__\n\n", 8192) = 2336 <0.000059>
00:33:13.392215 brk(0x558a436000)       = 0x558a436000 <0.000069>
00:33:13.393850 lseek(6, 2335, SEEK_SET) = 2335 <0.000048>
00:33:13.394024 lseek(6, 0, SEEK_CUR)   = 2335 <0.000045>
00:33:13.394180 close(6)                = 0 <0.000052>
00:33:13.394943 read(5, "", 8192)       = 0 <0.000049>
00:33:13.395117 close(5)                = 0 <0.000048>
00:33:13.395370 newfstatat(AT_FDCWD, "/etc/perl/XSLoader.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000052>
00:33:13.395571 newfstatat(AT_FDCWD, "/etc/perl/XSLoader.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.395749 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/XSLoader.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000049>
00:33:13.395925 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/XSLoader.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.396102 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/XSLoader.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.396275 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/XSLoader.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.396452 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/XSLoader.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000049>
00:33:13.396628 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/XSLoader.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.396832 newfstatat(AT_FDCWD, "/usr/share/perl5/XSLoader.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.397007 newfstatat(AT_FDCWD, "/usr/share/perl5/XSLoader.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.397183 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/XSLoader.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.397356 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/XSLoader.pm", {st_mode=S_IFREG|0644, st_size=4115, ...}, 0) = 0 <0.000049>
00:33:13.397548 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/XSLoader.pm", O_RDONLY|O_CLOEXEC) = 5 <0.000063>
00:33:13.397741 ioctl(5, TCGETS, 0x7ff0cc7210) = -1 ENOTTY (Inappropriate ioctl for device) <0.000045>
00:33:13.397905 lseek(5, 0, SEEK_CUR)   = 0 <0.000045>
00:33:13.398102 read(5, "# Generated from XSLoader_pm.PL (resolved %Config::Config value)\n# This file is unique for every OS\n\nuse strict;\nno strict 'refs';\n\npackage XSLoader;\n\nour $VERSION = \"0.31\"; # remember to update version in POD!\n\npackage DynaLoader;\n\n# No prizes for guessing why we don't say 'bootstrap DynaLoader;' here.\n# NOTE: All dl_*.xs (including dl_none.xs) define a dl_error() XSUB\nboot_DynaLoader('DynaLoader') if defined(&boot_DynaLoader) &&\n                                !defined(&dl_error);\npackage XSLoader;\n\nsub load {\n    package DynaLoader;\n\n    my ($caller, $modlibname) = caller();\n    my $module = $caller;\n\n    if (@_) {\n        $module = $_[0];\n    } else {\n        $_[0] = $module;\n    }\n\n    # work with static linking too\n    my $boots = \"$module\\::bootstrap\";\n    goto &$boots if defined &$boots;\n\n    goto \\&XSLoader::bootstrap_inherit unless $module and defined &dl_load_file;\n\n    my @modparts = split(/::/,$module);\n    my $modfname = $modparts[-1];\n    my $modfname_orig = $modfname; # For .bs file search\n\n    my $modpname = join('/',@modparts);\n    my $c = () = split(/::/,$caller,-1);\n    $modlibname =~ s,[\\\\/][^\\\\/]+$,, while $c--;    # Q&D basename\n    # Does this look like a relative path?\n    if ($modlibname !~ m{^/}) {\n        # Someone may have a #line directive that changes the file name, or\n        # may be calling XSLoader::load from inside a string eval.  We cer-\n        # tainly do not want to go loading some code that is not in @INC,\n        # as it could be untrusted.\n        #\n        # We could just fall back to DynaLoader here, but then the rest of\n        # this function would go untested in the perl core, since all @INC\n        # paths are relative during testing.  That would be a time bomb\n        # waiting to happen, since bugs could be introduced into the code.\n        #\n        # So look through @INC to see if $modlibname is in it.  A rela-\n        # tive $modlibname is not a common occurrence, so this block is\n        # not hot code.\n        FOUND: {\n            for (@INC) {\n                if ($_ eq $modlibname) {\n                    last FOUND;\n                }\n            }\n            # Not found.  Fall back to DynaLoader.\n            goto \\&XSLoader::bootstrap_inherit;\n        }\n    }\n    my $file = \"$modlibname/auto/$modpname/$modfname.so\";\n\n#   print STDERR \"XSLoader::load for $module ($file)\\n\" if $dl_debug;\n\n    # N.B. The .bs file does not following the naming convention used\n    # by mod2fname, so use the unedited version of the name.\n\n    my $bs = \"$modlibname/auto/$modpname/$modfname_orig.bs\";\n\n    # This calls DynaLoader::bootstrap, which will load the .bs file if present\n    goto \\&XSLoader::bootstrap_inherit if not -f $file or -s $bs;\n\n    my $bootname = \"boot_$module\";\n    $bootname =~ s/\\W/_/g;\n    @DynaLoader::dl_require_symbols = ($bootname);\n\n    my $boot_symbol_ref;\n\n    # Many dynamic extension loading problems will appear to come from\n    # this section of code: XYZ failed at line 123 of DynaLoader.pm.\n    # Often these errors are actually occurring in the initialisation\n    # C code of the extension XS file. Perl reports the error as being\n    # in this perl code simply because this was the last perl code\n    # it executed.\n\n    my $libref = dl_load_file($file, 0) or do { \n        require Carp;\n        Carp::croak(\"Can't load '$file' for module $module: \" . dl_error());\n    };\n    push(@DynaLoader::dl_librefs,$libref);  # record loaded object\n\n    $boot_symbol_ref = dl_find_symbol($libref, $bootname) or do {\n        require Carp;\n        Carp::croak(\"Can't find '$bootname' symbol in $file\\n\");\n    };\n\n    push(@DynaLoader::dl_modules, $module); # record loaded module\n\n  boot:\n    my $xs = dl_install_xsub($boots, $boot_symbol_ref, $file);\n\n    # See comment block above\n    push(@DynaLoader::dl_shared_objects, $file); # record files loaded\n    return &$xs(@_);\n}\n\n# Can't test with DynaLoader->can('bootstrap_inherit') when building in the\n# core, as XSLoader gets built before DynaLoader.\n\nsub bootstrap_inherit {\n    require DynaLoader;\n    goto \\&DynaLoader::bootstrap_inheri"..., 8192) = 4115 <0.000062>
00:33:13.399464 brk(0x558a458000)       = 0x558a458000 <0.000068>
00:33:13.400259 lseek(5, 4114, SEEK_SET) = 4114 <0.000047>
00:33:13.400422 lseek(5, 0, SEEK_CUR)   = 4114 <0.000045>
00:33:13.400577 close(5)                = 0 <0.000052>
00:33:13.400885 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/auto/Fcntl/Fcntl.so", {st_mode=S_IFREG|0644, st_size=67736, ...}, 0) = 0 <0.000055>
00:33:13.401096 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/auto/Fcntl/Fcntl.bs", 0x558a3704a8, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.401307 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/auto/Fcntl/Fcntl.so", O_RDONLY|O_CLOEXEC) = 5 <0.000061>
00:33:13.401494 read(5, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0X\2\1\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\31\0\30\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3040\0\0\0\0\0\0\3040\0\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0000\362\0\0\0\0\0\0000\362\1\0\0\0\0\0000\362\1\0\0\0\0\0\300\16\0\0\0\0\0\0\310\16\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0@\376\0\0\0\0\0\0@\376\1\0\0\0\0\0@\376\1\0\0\0\0\0\200\1\0\0\0\0\0\0\200\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0H.\0\0\0\0\0\0H.\0\0\0\0\0\0H.\0\0\0\0\0\0d\0\0\0\0\0\0\0d\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0000\362\0\0\0\0\0\0000\362\1\0\0\0\0\0000\362\1\0\0\0\0\0\320\r\0\0\0\0\0\0\320\r\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\333Sx\253.Mj\32\345\236\334\204\370pB\265A\276Kb\0\0\0\0\2\0\0\0\"\0\0\0\1\0\0\0\6\0\0\0\0\0\0\1\0\200\0\0\0\0\0\0\"\0\0\0/6bx\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\7\0@\30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\24\0\350\0\2\0\0\0\0\0\0\0\0\0\0\0\0\0\322\0\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0!\1\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0X\1\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\253\1\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\1\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0F\0\0\0 \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0w\0\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\302\0\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0g\0\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\33\2\0\0\20\0\0\0", 832) = 832 <0.000050>
00:33:13.401687 newfstatat(5, "", {st_mode=S_IFREG|0644, st_size=67736, ...}, AT_EMPTY_PATH) = 0 <0.000047>
00:33:13.401878 mmap(NULL, 196856, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f8ffd6000 <0.000072>
00:33:13.402066 mmap(0x7f8ffe0000, 131320, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 5, 0) = 0x7f8ffe0000 <0.000104>
00:33:13.402284 munmap(0x7f8ffd6000, 40960) = 0 <0.000053>
00:33:13.402447 munmap(0x7f90001000, 20728) = 0 <0.000049>
00:33:13.402606 mprotect(0x7f8ffe4000, 110592, PROT_NONE) = 0 <0.000120>
00:33:13.402843 mmap(0x7f8ffff000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 5, 0xf000) = 0x7f8ffff000 <0.000087>
00:33:13.403126 close(5)                = 0 <0.000045>
00:33:13.403303 mprotect(0x7f8ffff000, 4096, PROT_READ) = 0 <0.000066>
00:33:13.406534 brk(0x558a479000)       = 0x558a479000 <0.000113>
00:33:13.407053 read(4, "{\n    usage \"printf(pattern, args...)\" if @_ < 1;\n    CORE::printf STDOUT @_;\n}\n\nsub sprintf {\n    usage \"sprintf(pattern, args...)\" if @_ == 0;\n    CORE::sprintf(shift,@_);\n}\n\nsub load_imports {\nmy %default_export_tags = ( # cf. exports policy below\n\n    assert_h =>\t[qw(assert NDEBUG)],\n\n    ctype_h =>\t        [],\n\n    dirent_h =>\t[],\n\n    errno_h =>\t[qw(E2BIG EACCES EADDRINUSE EADDRNOTAVAIL EAFNOSUPPORT EAGAIN\n\t\tEALREADY EBADF EBADMSG EBUSY ECANCELED ECHILD ECONNABORTED\n\t\tECONNREFUSED ECONNRESET EDEADLK EDESTADDRREQ EDOM EDQUOT EEXIST\n\t\tEFAULT EFBIG EHOSTDOWN EHOSTUNREACH EIDRM EILSEQ EINPROGRESS\n\t\tEINTR EINVAL EIO EISCONN EISDIR ELOOP EMFILE EMLINK EMSGSIZE\n\t\tENAMETOOLONG ENETDOWN ENETRESET ENETUNREACH ENFILE ENOBUFS\n\t\tENODATA ENODEV ENOENT ENOEXEC ENOLCK ENOLINK ENOMEM ENOMSG\n\t\tENOPROTOOPT ENOSPC ENOSR ENOSTR ENOSYS ENOTBLK ENOTCONN ENOTDIR\n\t\tENOTEMPTY ENOTRECOVERABLE ENOTSOCK ENOTSUP ENOTTY ENXIO\n\t\tEOPNOTSUPP EOTHER EOVERFLOW EOWNERDEAD EPERM EPFNOSUPPORT EPIPE\n\t\tEPROCLIM EPROTO EPROTONOSUPPORT EPROTOTYPE ERANGE EREMOTE\n\t\tERESTART EROFS ESHUTDOWN ESOCKTNOSUPPORT ESPIPE ESRCH ESTALE\n\t\tETIME ETIMEDOUT ETOOMANYREFS ETXTBSY EUSERS EWOULDBLOCK EXDEV\n\t\terrno)],\n\n    fcntl_h =>\t[qw(FD_CLOEXEC F_DUPFD F_GETFD F_GETFL F_GETLK F_RDLCK\n\t\tF_SETFD F_SETFL F_SETLK F_SETLKW F_UNLCK F_WRLCK\n\t\tO_ACCMODE O_APPEND O_CREAT O_EXCL O_NOCTTY O_NONBLOCK\n\t\tO_RDONLY O_RDWR O_TRUNC O_WRONLY\n\t\tcreat\n\t\tSEEK_CUR SEEK_END SEEK_SET\n\t\tS_IRGRP S_IROTH S_IRUSR S_IRWXG S_IRWXO S_IRWXU\n\t\tS_ISBLK S_ISCHR S_ISDIR S_ISFIFO S_ISGID S_ISREG S_ISUID\n\t\tS_IWGRP S_IWOTH S_IWUSR)],\n\n    float_h =>\t[qw(DBL_DIG DBL_EPSILON DBL_MANT_DIG\n\t\tDBL_MAX DBL_MAX_10_EXP DBL_MAX_EXP\n\t\tDBL_MIN DBL_MIN_10_EXP DBL_MIN_EXP\n\t\tFLT_DIG FLT_EPSILON FLT_MANT_DIG\n\t\tFLT_MAX FLT_MAX_10_EXP FLT_MAX_EXP\n\t\tFLT_MIN FLT_MIN_10_EXP FLT_MIN_EXP\n\t\tFLT_RADIX FLT_ROUNDS\n\t\tLDBL_DIG LDBL_EPSILON LDBL_MANT_DIG\n\t\tLDBL_MAX LDBL_MAX_10_EXP LDBL_MAX_EXP\n\t\tLDBL_MIN LDBL_MIN_10_EXP LDBL_MIN_EXP)],\n\n    grp_h =>\t[],\n\n    limits_h =>\t[qw( ARG_MAX CHAR_BIT CHAR_MAX CHAR_MIN CHILD_MAX\n\t\tINT_MAX INT_MIN LINK_MAX LONG_MAX LONG_MIN MAX_CANON\n\t\tMAX_INPUT MB_LEN_MAX NAME_MAX NGROUPS_MAX OPEN_MAX\n\t\tPATH_MAX PIPE_BUF SCHAR_MAX SCHAR_MIN SHRT_MAX SHRT_MIN\n\t\tSSIZE_MAX STREAM_MAX TZNAME_MAX UCHAR_MAX UINT_MAX\n\t\tULONG_MAX USHRT_MAX _POSIX_ARG_MAX _POSIX_CHILD_MAX\n\t\t_POSIX_LINK_MAX _POSIX_MAX_CANON _POSIX_MAX_INPUT\n\t\t_POSIX_NAME_MAX _POSIX_NGROUPS_MAX _POSIX_OPEN_MAX\n\t\t_POSIX_PATH_MAX _POSIX_PIPE_BUF _POSIX_SSIZE_MAX\n\t\t_POSIX_STREAM_MAX _POSIX_TZNAME_MAX)],\n\n    locale_h =>\t[qw(LC_ALL LC_COLLATE LC_CTYPE LC_MESSAGES\n\t\t    LC_MONETARY LC_NUMERIC LC_TIME LC_IDENTIFICATION\n                    LC_MEASUREMENT LC_PAPER LC_TELEPHONE LC_ADDRESS\n                    LC_SYNTAX LC_TOD NULL\n\t\t    localeconv setlocale)],\n\n    math_h =>   [qw(FP_ILOGB0 FP_ILOGBNAN FP_INFINITE FP_NAN FP_NORMAL\n                    FP_SUBNORMAL FP_ZERO\n                    M_1_PI M_2_PI M_2_SQRTPI M_E M_LN10 M_LN2 M_LOG10E M_LOG2E\n                    M_PI M_PI_2 M_PI_4 M_SQRT1_2 M_SQRT2\n                    HUGE_VAL INFINITY NAN\n                    acos asin atan ceil cosh fabs floor fmod\n\t\t    frexp ldexp log10 modf pow sinh tan tanh)],\n\n    pwd_h =>\t[],\n\n    setjmp_h =>\t[qw(longjmp setjmp siglongjmp sigsetjmp)],\n\n    signal_h =>\t[qw(SA_NOCLDSTOP SA_NOCLDWAIT SA_NODEFER SA_ONSTACK\n\t\tSA_RESETHAND SA_RESTART SA_SIGINFO SIGABRT SIGALRM\n\t\tSIGCHLD SIGCONT SIGFPE SIGHUP SIGILL SIGINT SIGKILL\n\t\tSIGPIPE %SIGRT SIGRTMIN SIGRTMAX SIGQUIT SIGSEGV SIGSTOP\n\t\tSIGTERM SIGTSTP SIGTTIN SIGTTOU SIGUSR1 SIGUSR2 SIGBUS\n\t\tSIGPOLL SIGPROF SIGSYS SIGTRAP SIGURG SIGVTALRM SIGXCPU SIGXFSZ\n\t\tSIG_BLOCK SIG_DFL SIG_ERR SIG_IGN SIG_SETMASK SIG_UNBLOCK\n\t\traise sigaction signal sigpending sigprocmask sigsuspend)],\n\n    stdarg_h =>\t[],\n\n    stddef_h =>\t[qw(NULL offsetof)],\n\n    stdio_h =>\t[qw(BUFSIZ EOF FILENAME_MAX L_ctermid L_cuserid\n\t\tNULL SEEK_CUR SEEK_END SEEK_SET\n\t\tSTREAM_MAX TMP_MAX stderr stdin stdout\n\t\tclearerr fclose fdopen feof ferror fflush fgetc fgetpos\n\t\tfgets fopen fprintf fputc fputs fread freopen\n\t\tfscanf fseek fsetpos ftell fwrite getchar gets\n\t\tperror putc putchar puts"..., 8192) = 8192 <0.000061>
00:33:13.408848 brk(0x558a49c000)       = 0x558a49c000 <0.000071>
00:33:13.409077 read(4, "IO_PGRP PRIO_USER)],\n\n    sys_socket_h => [qw(\n        MSG_CTRUNC MSG_DONTROUTE MSG_EOR MSG_OOB MSG_PEEK MSG_TRUNC MSG_WAITALL\n    )],\n\n    nan_payload => [ qw(getpayload setpayload setpayloadsig issignaling) ],\n\n    signal_h_si_code => [qw(\n        ILL_ILLOPC ILL_ILLOPN ILL_ILLADR ILL_ILLTRP ILL_PRVOPC ILL_PRVREG\n        ILL_COPROC ILL_BADSTK\n        FPE_INTDIV FPE_INTOVF FPE_FLTDIV FPE_FLTOVF FPE_FLTUND\n        FPE_FLTRES FPE_FLTINV FPE_FLTSUB\n        SEGV_MAPERR SEGV_ACCERR\n        BUS_ADRALN BUS_ADRERR BUS_OBJERR\n        TRAP_BRKPT TRAP_TRACE\n        CLD_EXITED CLD_KILLED CLD_DUMPED CLD_TRAPPED CLD_STOPPED CLD_CONTINUED\n        POLL_IN POLL_OUT POLL_MSG POLL_ERR POLL_PRI POLL_HUP\n        SI_USER SI_QUEUE SI_TIMER SI_ASYNCIO SI_MESGQ\n  )],\n);\n\n# exports policy:\n# - new functions may not be added to @EXPORT, only to @EXPORT_OK\n# - new SHOUTYCONSTANTS are OK to add to @EXPORT\n\n{\n  # De-duplicate the export list: \n  my ( %export, %export_ok );\n  @export   {map {@$_} values %default_export_tags} = ();\n  @export_ok{map {@$_} values   %other_export_tags} = ();\n  # Doing the de-dup with a temporary hash has the advantage that the SVs in\n  # @EXPORT are actually shared hash key scalars, which will save some memory.\n  our @EXPORT = keys %export;\n\n  # you do not want to add symbols to the following list. add a new tag instead\n  our @EXPORT_OK = (qw(close lchown nice open pipe read sleep times write\n\t\t       printf sprintf),\n\t\t    grep {!exists $export{$_}} keys %reimpl, keys %replacement, keys %export_ok);\n\n  our %EXPORT_TAGS = ( %default_export_tags, %other_export_tags );\n}\n\nrequire Exporter;\n}\n\npackage POSIX::SigAction;\n\nsub new { bless {HANDLER => $_[1], MASK => $_[2], FLAGS => $_[3] || 0, SAFE => 0}, $_[0] }\nsub handler { $_[0]->{HANDLER} = $_[1] if @_ > 1; $_[0]->{HANDLER} };\nsub mask    { $_[0]->{MASK}    = $_[1] if @_ > 1; $_[0]->{MASK} };\nsub flags   { $_[0]->{FLAGS}   = $_[1] if @_ > 1; $_[0]->{FLAGS} };\nsub safe    { $_[0]->{SAFE}    = $_[1] if @_ > 1; $_[0]->{SAFE} };\n\n{\npackage POSIX::SigSet;\n# This package is here entirely to make sure that POSIX::SigSet is seen by the\n# PAUSE indexer, so that it will always be clearly indexed in core.  This is to\n# prevent the accidental case where a third-party distribution can accidentally\n# claim the POSIX::SigSet package, as occurred in 2011-12. -- rjbs, 2011-12-30\n}\n\npackage POSIX::SigRt;\n\nrequire Tie::Hash;\n\nour @ISA = 'Tie::StdHash';\n\nour ($_SIGRTMIN, $_SIGRTMAX, $_sigrtn);\n\nour $SIGACTION_FLAGS = 0;\n\nsub _init {\n    $_SIGRTMIN = &POSIX::SIGRTMIN;\n    $_SIGRTMAX = &POSIX::SIGRTMAX;\n    $_sigrtn   = $_SIGRTMAX - $_SIGRTMIN;\n}\n\nsub _croak {\n    &_init unless defined $_sigrtn;\n    die \"POSIX::SigRt not available\" unless defined $_sigrtn && $_sigrtn > 0;\n}\n\nsub _getsig {\n    &_croak;\n    my $rtsig = $_[0];\n    # Allow (SIGRT)?MIN( + n)?, a common idiom when doing these things in C.\n    $rtsig = $_SIGRTMIN + ($1 || 0)\n\tif $rtsig =~ /^(?:(?:SIG)?RT)?MIN(\\s*\\+\\s*(\\d+))?$/;\n    return $rtsig;\n}\n\nsub _exist {\n    my $rtsig = _getsig($_[1]);\n    my $ok    = $rtsig >= $_SIGRTMIN && $rtsig <= $_SIGRTMAX;\n    ($rtsig, $ok);\n}\n\nsub _check {\n    my ($rtsig, $ok) = &_exist;\n    die \"No POSIX::SigRt signal $_[1] (valid range SIGRTMIN..SIGRTMAX, or $_SIGRTMIN..$_SIGRTMAX)\"\n\tunless $ok;\n    return $rtsig;\n}\n\nsub new {\n    my ($rtsig, $handler, $flags) = @_;\n    my $sigset = POSIX::SigSet->new($rtsig);\n    my $sigact = POSIX::SigAction->new($handler, $sigset, $flags);\n    POSIX::sigaction($rtsig, $sigact);\n}\n\nsub EXISTS { &_exist }\nsub FETCH  { my $rtsig = &_check;\n\t     my $oa = POSIX::SigAction->new();\n\t     POSIX::sigaction($rtsig, undef, $oa);\n\t     return $oa->{HANDLER} }\nsub STORE  { my $rtsig = &_check; new($rtsig, $_[2], $SIGACTION_FLAGS) }\nsub DELETE { delete $SIG{ &_check } }\nsub CLEAR  { &_exist; delete @SIG{ &POSIX::SIGRTMIN .. &POSIX::SIGRTMAX } }\nsub SCALAR { &_croak; $_sigrtn + 1 }\n\ntie %POSIX::SIGRT, 'POSIX::SigRt';\n# and the expression on the line above is true, so we return true.\n", 8192) = 3999 <0.000051>
00:33:13.412107 read(4, "", 8192)       = 0 <0.000053>
00:33:13.412318 close(4)                = 0 <0.000053>
00:33:13.412717 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/auto/POSIX/POSIX.so", {st_mode=S_IFREG|0644, st_size=134760, ...}, 0) = 0 <0.000060>
00:33:13.412942 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/auto/POSIX/POSIX.bs", 0x558a3704a8, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.413155 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/auto/POSIX/POSIX.so", O_RDONLY|O_CLOEXEC) = 4 <0.000069>
00:33:13.413353 read(4, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\250\7\2\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\33\0\32\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\08k\1\0\0\0\0\08k\1\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\250\325\1\0\0\0\0\0\250\325\2\0\0\0\0\0\250\325\2\0\0\0\0\0x0\0\0\0\0\0\0\2000\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0`\375\1\0\0\0\0\0`\375\2\0\0\0\0\0`\375\2\0\0\0\0\0\0\2\0\0\0\0\0\0\0\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\300S\1\0\0\0\0\0\300S\1\0\0\0\0\0\300S\1\0\0\0\0\0\f\3\0\0\0\0\0\0\f\3\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\250\325\1\0\0\0\0\0\250\325\2\0\0\0\0\0\250\325\2\0\0\0\0\0X*\0\0\0\0\0\0X*\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\2\24+\3\27.\2324\302z\316/\3Ui,\22R[n\0\0\0\0\2\0\0\0\322\0\0\0\1\0\0\0\6\0\0\0\0\0\0\0\0\30\0\0\0\0\0\0\322\0\0\0+\273\vy\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\t\0000^\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\26\0\30\6\3\0\0\0\0\0\0\0\0\0\0\0\0\0\177\5\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\213\3\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\314\2\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\366\0\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\362\3\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0O\5\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\376\6\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0>\1\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Q\6\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\271\1\0\0\22\0\0\0", 832) = 832 <0.000049>
00:33:13.413543 newfstatat(4, "", {st_mode=S_IFREG|0644, st_size=134760, ...}, AT_EMPTY_PATH) = 0 <0.000047>
00:33:13.413735 mmap(NULL, 263720, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f8ff9f000 <0.000087>
00:33:13.413938 mmap(0x7f8ffa0000, 198184, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 4, 0) = 0x7f8ffa0000 <0.000101>
00:33:13.414154 munmap(0x7f8ff9f000, 4096) = 0 <0.000055>
00:33:13.414319 munmap(0x7f8ffd1000, 58920) = 0 <0.000054>
00:33:13.414482 mprotect(0x7f8ffb7000, 90112, PROT_NONE) = 0 <0.000072>
00:33:13.414692 mmap(0x7f8ffcd000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 4, 0x1d000) = 0x7f8ffcd000 <0.000074>
00:33:13.414940 close(4)                = 0 <0.000045>
00:33:13.415182 mprotect(0x7f8ffcd000, 12288, PROT_READ) = 0 <0.000069>
00:33:13.415656 brk(0x558a4bd000)       = 0x558a4bd000 <0.000064>
00:33:13.416794 brk(0x558a4de000)       = 0x558a4de000 <0.000061>
00:33:13.418826 newfstatat(AT_FDCWD, "/etc/perl/Tie/Hash.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000053>
00:33:13.419080 newfstatat(AT_FDCWD, "/etc/perl/Tie/Hash.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000045>
00:33:13.419260 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/Tie/Hash.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.419436 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/Tie/Hash.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.419613 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/Tie/Hash.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.419787 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/Tie/Hash.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000045>
00:33:13.419963 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/Tie/Hash.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000051>
00:33:13.420140 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/Tie/Hash.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000045>
00:33:13.420315 newfstatat(AT_FDCWD, "/usr/share/perl5/Tie/Hash.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.420487 newfstatat(AT_FDCWD, "/usr/share/perl5/Tie/Hash.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.420663 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Tie/Hash.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.420837 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Tie/Hash.pm", {st_mode=S_IFREG|0644, st_size=2044, ...}, 0) = 0 <0.000049>
00:33:13.421031 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Tie/Hash.pm", O_RDONLY|O_CLOEXEC) = 4 <0.000063>
00:33:13.421224 ioctl(4, TCGETS, 0x7ff0cc79e0) = -1 ENOTTY (Inappropriate ioctl for device) <0.000046>
00:33:13.421390 lseek(4, 0, SEEK_CUR)   = 0 <0.000045>
00:33:13.421590 read(4, "package Tie::Hash;\n\nour $VERSION = '1.06';\n\nuse Carp;\nuse warnings::register;\n\nsub new {\n    my $pkg = shift;\n    $pkg->TIEHASH(@_);\n}\n\n# Legacy support for new()\n\nsub TIEHASH {\n    my $pkg = shift;\n    my $pkg_new = $pkg -> can ('new');\n\n    if ($pkg_new and $pkg ne __PACKAGE__) {\n        my $my_new = __PACKAGE__ -> can ('new');\n        if ($pkg_new == $my_new) {  \n            #\n            # Prevent recursion\n            #\n            croak \"$pkg must define either a TIEHASH() or a new() method\";\n        }\n\n\twarnings::warnif (\"WARNING: calling ${pkg}->new since \" .\n                          \"${pkg}->TIEHASH is missing\");\n\t$pkg -> new (@_);\n    }\n    else {\n\tcroak \"$pkg doesn't define a TIEHASH method\";\n    }\n}\n\nsub EXISTS {\n    my $pkg = ref $_[0];\n    croak \"$pkg doesn't define an EXISTS method\";\n}\n\nsub CLEAR {\n    my $self = shift;\n    my $key = $self->FIRSTKEY(@_);\n    my @keys;\n\n    while (defined $key) {\n\tpush @keys, $key;\n\t$key = $self->NEXTKEY(@_, $key);\n    }\n    foreach $key (@keys) {\n\t$self->DELETE(@_, $key);\n    }\n}\n\n# The Tie::StdHash package implements standard perl hash behaviour.\n# It exists to act as a base class for classes which only wish to\n# alter some parts of their behaviour.\n\npackage Tie::StdHash;\n# @ISA = qw(Tie::Hash);\t\t# would inherit new() only\n\nsub TIEHASH  { bless {}, $_[0] }\nsub STORE    { $_[0]->{$_[1]} = $_[2] }\nsub FETCH    { $_[0]->{$_[1]} }\nsub FIRSTKEY { my $a = scalar keys %{$_[0]}; each %{$_[0]} }\nsub NEXTKEY  { each %{$_[0]} }\nsub EXISTS   { exists $_[0]->{$_[1]} }\nsub DELETE   { delete $_[0]->{$_[1]} }\nsub CLEAR    { %{$_[0]} = () }\nsub SCALAR   { scalar %{$_[0]} }\n\npackage Tie::ExtraHash;\n\nsub TIEHASH  { my $p = shift; bless [{}, @_], $p }\nsub STORE    { $_[0][0]{$_[1]} = $_[2] }\nsub FETCH    { $_[0][0]{$_[1]} }\nsub FIRSTKEY { my $a = scalar keys %{$_[0][0]}; each %{$_[0][0]} }\nsub NEXTKEY  { each %{$_[0][0]} }\nsub EXISTS   { exists $_[0][0]->{$_[1]} }\nsub DELETE   { delete $_[0][0]->{$_[1]} }\nsub CLEAR    { %{$_[0][0]} = () }\nsub SCALAR   { scalar %{$_[0][0]} }\n\n1;\n", 8192) = 2044 <0.000062>
00:33:13.421973 newfstatat(AT_FDCWD, "/etc/perl/Carp.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000049>
00:33:13.422153 newfstatat(AT_FDCWD, "/etc/perl/Carp.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.422333 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/Carp.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.422507 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/Carp.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.422740 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/Carp.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.422921 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/Carp.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000045>
00:33:13.423096 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/Carp.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.423270 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/Carp.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.423444 newfstatat(AT_FDCWD, "/usr/share/perl5/Carp.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.423617 newfstatat(AT_FDCWD, "/usr/share/perl5/Carp.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.423793 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Carp.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.423966 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Carp.pm", {st_mode=S_IFREG|0644, st_size=25398, ...}, 0) = 0 <0.000048>
00:33:13.424153 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Carp.pm", O_RDONLY|O_CLOEXEC) = 5 <0.000059>
00:33:13.424339 ioctl(5, TCGETS, 0x7ff0cc7210) = -1 ENOTTY (Inappropriate ioctl for device) <0.000045>
00:33:13.424501 lseek(5, 0, SEEK_CUR)   = 0 <0.000045>
00:33:13.424691 read(5, "package Carp;\n\n{ use 5.006; }\nuse strict;\nuse warnings;\nBEGIN {\n    # Very old versions of warnings.pm load Carp.  This can go wrong due\n    # to the circular dependency.  If warnings is invoked before Carp,\n    # then warnings starts by loading Carp, then Carp (above) tries to\n    # invoke warnings, and gets nothing because warnings is in the process\n    # of loading and hasn't defined its import method yet.  If we were\n    # only turning on warnings (\"use warnings\" above) this wouldn't be too\n    # bad, because Carp would just gets the state of the -w switch and so\n    # might not get some warnings that it wanted.  The real problem is\n    # that we then want to turn off Unicode warnings, but \"no warnings\n    # 'utf8'\" won't be effective if we're in this circular-dependency\n    # situation.  So, if warnings.pm is an affected version, we turn\n    # off all warnings ourselves by directly setting ${^WARNING_BITS}.\n    # On unaffected versions, we turn off just Unicode warnings, via\n    # the proper API.\n    if(!defined($warnings::VERSION) || eval($warnings::VERSION) < 1.06) {\n\t${^WARNING_BITS} = \"\";\n    } else {\n\t\"warnings\"->unimport(\"utf8\");\n    }\n}\n\nsub _fetch_sub { # fetch sub without autovivifying\n    my($pack, $sub) = @_;\n    $pack .= '::';\n    # only works with top-level packages\n    return unless exists($::{$pack});\n    for ($::{$pack}) {\n\treturn unless ref \\$_ eq 'GLOB' && *$_{HASH} && exists $$_{$sub};\n\tfor ($$_{$sub}) {\n\t    return ref \\$_ eq 'GLOB' ? *$_{CODE} : undef\n\t}\n    }\n}\n\n# UTF8_REGEXP_PROBLEM is a compile-time constant indicating whether Carp\n# must avoid applying a regular expression to an upgraded (is_utf8)\n# string.  There are multiple problems, on different Perl versions,\n# that require this to be avoided.  All versions prior to 5.13.8 will\n# load utf8_heavy.pl for the swash system, even if the regexp doesn't\n# use character classes.  Perl 5.6 and Perls [5.11.2, 5.13.11) exhibit\n# specific problems when Carp is being invoked in the aftermath of a\n# syntax error.\nBEGIN {\n    if(\"$]\" < 5.013011) {\n\t*UTF8_REGEXP_PROBLEM = sub () { 1 };\n    } else {\n\t*UTF8_REGEXP_PROBLEM = sub () { 0 };\n    }\n}\n\n# is_utf8() is essentially the utf8::is_utf8() function, which indicates\n# whether a string is represented in the upgraded form (using UTF-8\n# internally).  As utf8::is_utf8() is only available from Perl 5.8\n# onwards, extra effort is required here to make it work on Perl 5.6.\nBEGIN {\n    if(defined(my $sub = _fetch_sub utf8 => 'is_utf8')) {\n\t*is_utf8 = $sub;\n    } else {\n\t# black magic for perl 5.6\n\t*is_utf8 = sub { unpack(\"C\", \"\\xaa\".$_[0]) != 170 };\n    }\n}\n\n# The downgrade() function defined here is to be used for attempts to\n# downgrade where it is acceptable to fail.  It must be called with a\n# second argument that is a true value.\nBEGIN {\n    if(defined(my $sub = _fetch_sub utf8 => 'downgrade')) {\n\t*downgrade = \\&{\"utf8::downgrade\"};\n    } else {\n\t*downgrade = sub {\n\t    my $r = \"\";\n\t    my $l = length($_[0]);\n\t    for(my $i = 0; $i != $l; $i++) {\n\t\tmy $o = ord(substr($_[0], $i, 1));\n\t\treturn if $o > 255;\n\t\t$r .= chr($o);\n\t    }\n\t    $_[0] = $r;\n\t};\n    }\n}\n\n# is_safe_printable_codepoint() indicates whether a character, specified\n# by integer codepoint, is OK to output literally in a trace.  Generally\n# this is if it is a printable character in the ancestral character set\n# (ASCII or EBCDIC).  This is used on some Perls in situations where a\n# regexp can't be used.\nBEGIN {\n    *is_safe_printable_codepoint =\n\t\"$]\" >= 5.007_003 ?\n\t    eval(q(sub ($) {\n\t\tmy $u = utf8::native_to_unicode($_[0]);\n\t\t$u >= 0x20 && $u <= 0x7e;\n\t    }))\n\t: ord(\"A\") == 65 ?\n\t    sub ($) { $_[0] >= 0x20 && $_[0] <= 0x7e }\n\t:\n\t    sub ($) {\n\t\t# Early EBCDIC\n\t\t# 3 EBCDIC code pages supported then;  all controls but one\n\t\t# are the code points below SPACE.  The other one is 0x5F on\n\t\t# POSIX-BC; FF on the other two.\n\t\t# FIXME: there are plenty of unprintable codepoints other\n\t\t# than those that this code and the comment above identifies\n\t\t# as \"controls\".\n\t\t$_[0] >= ord(\" \") && $_[0] <= 0xff &&\n\t\t    $_[0] != (ord (\"^\") == 106 ? 0x5f : "..., 8192) = 8192 <0.000062>
00:33:13.428147 brk(0x558a4ff000)       = 0x558a4ff000 <0.000079>
00:33:13.428708 newfstatat(AT_FDCWD, "/etc/perl/overloading.pmc", 0x7ff0cc6d18, 0) = -1 ENOENT (No such file or directory) <0.000051>
00:33:13.428909 newfstatat(AT_FDCWD, "/etc/perl/overloading.pm", 0x7ff0cc6d18, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.429087 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/overloading.pmc", 0x7ff0cc6d18, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.429261 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/overloading.pm", 0x7ff0cc6d18, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.429438 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/overloading.pmc", 0x7ff0cc6d18, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.429612 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/overloading.pm", 0x7ff0cc6d18, 0) = -1 ENOENT (No such file or directory) <0.000045>
00:33:13.429787 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/overloading.pmc", 0x7ff0cc6d18, 0) = -1 ENOENT (No such file or directory) <0.000049>
00:33:13.429964 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/overloading.pm", 0x7ff0cc6d18, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.430140 newfstatat(AT_FDCWD, "/usr/share/perl5/overloading.pmc", 0x7ff0cc6d18, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.430313 newfstatat(AT_FDCWD, "/usr/share/perl5/overloading.pm", 0x7ff0cc6d18, 0) = -1 ENOENT (No such file or directory) <0.000045>
00:33:13.430487 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/overloading.pmc", 0x7ff0cc6d18, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.430719 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/overloading.pm", {st_mode=S_IFREG|0644, st_size=964, ...}, 0) = 0 <0.000053>
00:33:13.430924 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/overloading.pm", O_RDONLY|O_CLOEXEC) = 6 <0.000065>
00:33:13.431121 ioctl(6, TCGETS, 0x7ff0cc6a90) = -1 ENOTTY (Inappropriate ioctl for device) <0.000047>
00:33:13.431290 lseek(6, 0, SEEK_CUR)   = 0 <0.000045>
00:33:13.431502 read(6, "package overloading;\nuse warnings;\n\nour $VERSION = '0.02';\n\nmy $HINT_NO_AMAGIC = 0x01000000; # see perl.h\n\nrequire 5.010001;\n\nsub _ops_to_nums {\n    require overload::numbers;\n\n    map { exists $overload::numbers::names{\"($_\"}\n\t? $overload::numbers::names{\"($_\"}\n\t: do { require Carp; Carp::croak(\"'$_' is not a valid overload\") }\n    } @_;\n}\n\nsub import {\n    my ( $class, @ops ) = @_;\n\n    if ( @ops ) {\n\tif ( $^H{overloading} ) {\n\t    vec($^H{overloading} , $_, 1) = 0 for _ops_to_nums(@ops);\n\t}\n\n\tif ( $^H{overloading} !~ /[^\\0]/ ) {\n\t    delete $^H{overloading};\n\t    $^H &= ~$HINT_NO_AMAGIC;\n\t}\n    } else {\n\tdelete $^H{overloading};\n\t$^H &= ~$HINT_NO_AMAGIC;\n    }\n}\n\nsub unimport {\n    my ( $class, @ops ) = @_;\n\n    if ( exists $^H{overloading} or not $^H & $HINT_NO_AMAGIC ) {\n\tif ( @ops ) {\n\t    vec($^H{overloading} ||= '', $_, 1) = 1 for _ops_to_nums(@ops);\n\t} else {\n\t    delete $^H{overloading};\n\t}\n    }\n\n    $^H |= $HINT_NO_AMAGIC;\n}\n\n1;\n__END__\n\n", 8192) = 964 <0.000054>
00:33:13.432681 lseek(6, 963, SEEK_SET) = 963 <0.000050>
00:33:13.432857 lseek(6, 0, SEEK_CUR)   = 963 <0.000045>
00:33:13.433015 close(6)                = 0 <0.000055>
00:33:13.433572 read(5, "; # allow caller to format reference arguments\n\nrequire Exporter;\nour @ISA       = ('Exporter');\nour @EXPORT    = qw(confess croak carp);\nour @EXPORT_OK = qw(cluck verbose longmess shortmess);\nour @EXPORT_FAIL = qw(verbose);    # hook to enable verbose mode\n\n# The members of %Internal are packages that are internal to perl.\n# Carp will not report errors from within these packages if it\n# can.  The members of %CarpInternal are internal to Perl's warning\n# system.  Carp will not report errors from within these packages\n# either, and will not report calls *to* these packages for carp and\n# croak.  They replace $CarpLevel, which is deprecated.    The\n# $Max(EvalLen|(Arg(Len|Nums)) variables are used to specify how the eval\n# text and function arguments should be formatted when printed.\n\nour %CarpInternal;\nour %Internal;\n\n# disable these by default, so they can live w/o require Carp\n$CarpInternal{Carp}++;\n$CarpInternal{warnings}++;\n$Internal{Exporter}++;\n$Internal{'Exporter::Heavy'}++;\n\n# if the caller specifies verbose usage (\"perl -MCarp=verbose script.pl\")\n# then the following method will be called by the Exporter which knows\n# to do this thanks to @EXPORT_FAIL, above.  $_[1] will contain the word\n# 'verbose'.\n\nsub export_fail { shift; $Verbose = shift if $_[0] eq 'verbose'; @_ }\n\nsub _cgc {\n    no strict 'refs';\n    return \\&{\"CORE::GLOBAL::caller\"} if defined &{\"CORE::GLOBAL::caller\"};\n    return;\n}\n\nsub longmess {\n    local($!, $^E);\n    # Icky backwards compatibility wrapper. :-(\n    #\n    # The story is that the original implementation hard-coded the\n    # number of call levels to go back, so calls to longmess were off\n    # by one.  Other code began calling longmess and expecting this\n    # behaviour, so the replacement has to emulate that behaviour.\n    my $cgc = _cgc();\n    my $call_pack = $cgc ? $cgc->() : caller();\n    if ( $Internal{$call_pack} or $CarpInternal{$call_pack} ) {\n        return longmess_heavy(@_);\n    }\n    else {\n        local $CarpLevel = $CarpLevel + 1;\n        return longmess_heavy(@_);\n    }\n}\n\nour @CARP_NOT;\n\nsub shortmess {\n    local($!, $^E);\n    my $cgc = _cgc();\n\n    # Icky backwards compatibility wrapper. :-(\n    local @CARP_NOT = scalar( $cgc ? $cgc->() : caller() );\n    shortmess_heavy(@_);\n}\n\nsub croak   { die shortmess @_ }\nsub confess { die longmess @_ }\nsub carp    { warn shortmess @_ }\nsub cluck   { warn longmess @_ }\n\nBEGIN {\n    if(\"$]\" >= 5.015002 || (\"$]\" >= 5.014002 && \"$]\" < 5.015) ||\n\t    (\"$]\" >= 5.012005 && \"$]\" < 5.013)) {\n\t*CALLER_OVERRIDE_CHECK_OK = sub () { 1 };\n    } else {\n\t*CALLER_OVERRIDE_CHECK_OK = sub () { 0 };\n    }\n}\n\nsub caller_info {\n    my $i = shift(@_) + 1;\n    my %call_info;\n    my $cgc = _cgc();\n    {\n\t# Some things override caller() but forget to implement the\n\t# @DB::args part of it, which we need.  We check for this by\n\t# pre-populating @DB::args with a sentinel which no-one else\n\t# has the address of, so that we can detect whether @DB::args\n\t# has been properly populated.  However, on earlier versions\n\t# of perl this check tickles a bug in CORE::caller() which\n\t# leaks memory.  So we only check on fixed perls.\n        @DB::args = \\$i if CALLER_OVERRIDE_CHECK_OK;\n        package DB;\n        @call_info{\n            qw(pack file line sub has_args wantarray evaltext is_require) }\n            = $cgc ? $cgc->($i) : caller($i);\n    }\n\n    unless ( defined $call_info{file} ) {\n        return ();\n    }\n\n    my $sub_name = Carp::get_subname( \\%call_info );\n    if ( $call_info{has_args} ) {\n        # Guard our serialization of the stack from stack refcounting bugs\n        # NOTE this is NOT a complete solution, we cannot 100% guard against\n        # these bugs.  However in many cases Perl *is* capable of detecting\n        # them and throws an error when it does.  Unfortunately serializing\n        # the arguments on the stack is a perfect way of finding these bugs,\n        # even when they would not affect normal program flow that did not\n        # poke around inside the stack.  Inside of Carp.pm it makes little\n        # sense reporting these bugs, as Carp's j"..., 8192) = 8192 <0.000057>
00:33:13.435986 brk(0x558a523000)       = 0x558a523000 <0.000071>
00:33:13.437725 read(5, " to all\n        # Perl versions and platforms (such as EBCDIC).  There are other more\n        # compact ways to do this, but may not work everywhere every version.\n        $arg =~ s/([^ !\"#\\$\\%\\&'()*+,\\-.\\/0123456789:;<=>?\\@ABCDEFGHIJKLMNOPQRSTUVWXYZ\\[\\\\\\]^_`abcdefghijklmnopqrstuvwxyz\\{|}~])/sprintf(\"\\\\x{%x}\",ord($1))/eg;\n    }\n    downgrade($arg, 1);\n    return \"\\\"\".$arg.\"\\\"\".$suffix;\n}\n\nsub Regexp::CARP_TRACE {\n    my $arg = \"$_[0]\";\n    downgrade($arg, 1);\n    if(UTF8_REGEXP_PROBLEM && is_utf8($arg)) {\n\tfor(my $i = length($arg); $i--; ) {\n\t    my $o = ord(substr($arg, $i, 1));\n\t    my $x = substr($arg, 0, 0);   # work around bug on Perl 5.8.{1,2}\n\t    substr $arg, $i, 1, sprintf(\"\\\\x{%x}\", $o)\n\t\tunless is_safe_printable_codepoint($o);\n\t}\n    } else {\n        # See comment in format_arg() about this same regex.\n        $arg =~ s/([^ !\"#\\$\\%\\&'()*+,\\-.\\/0123456789:;<=>?\\@ABCDEFGHIJKLMNOPQRSTUVWXYZ\\[\\\\\\]^_`abcdefghijklmnopqrstuvwxyz\\{|}~])/sprintf(\"\\\\x{%x}\",ord($1))/eg;\n    }\n    downgrade($arg, 1);\n    my $suffix = \"\";\n    if($arg =~ /\\A\\(\\?\\^?([a-z]*)(?:-[a-z]*)?:(.*)\\)\\z/s) {\n\t($suffix, $arg) = ($1, $2);\n    }\n    if ( 2 < $MaxArgLen and $MaxArgLen < length($arg) ) {\n        substr ( $arg, $MaxArgLen - 3 ) = \"\";\n\t$suffix = \"...\".$suffix;\n    }\n    return \"qr($arg)$suffix\";\n}\n\n# Takes an inheritance cache and a package and returns\n# an anon hash of known inheritances and anon array of\n# inheritances which consequences have not been figured\n# for.\nsub get_status {\n    my $cache = shift;\n    my $pkg   = shift;\n    $cache->{$pkg} ||= [ { $pkg => $pkg }, [ trusts_directly($pkg) ] ];\n    return @{ $cache->{$pkg} };\n}\n\n# Takes the info from caller() and figures out the name of\n# the sub/require/eval\nsub get_subname {\n    my $info = shift;\n    if ( defined( $info->{evaltext} ) ) {\n        my $eval = $info->{evaltext};\n        if ( $info->{is_require} ) {\n            return \"require $eval\";\n        }\n        else {\n            $eval =~ s/([\\\\\\'])/\\\\$1/g;\n            return \"eval '\" . str_len_trim( $eval, $MaxEvalLen ) . \"'\";\n        }\n    }\n\n    # this can happen on older perls when the sub (or the stash containing it)\n    # has been deleted\n    if ( !defined( $info->{sub} ) ) {\n        return '__ANON__::__ANON__';\n    }\n\n    return ( $info->{sub} eq '(eval)' ) ? 'eval {...}' : $info->{sub};\n}\n\n# Figures out what call (from the point of view of the caller)\n# the long error backtrace should start at.\nsub long_error_loc {\n    my $i;\n    my $lvl = $CarpLevel;\n    {\n        ++$i;\n        my $cgc = _cgc();\n        my @caller = $cgc ? $cgc->($i) : caller($i);\n        my $pkg = $caller[0];\n        unless ( defined($pkg) ) {\n\n            # This *shouldn't* happen.\n            if (%Internal) {\n                local %Internal;\n                $i = long_error_loc();\n                last;\n            }\n            elsif (defined $caller[2]) {\n                # this can happen when the stash has been deleted\n                # in that case, just assume that it's a reasonable place to\n                # stop (the file and line data will still be intact in any\n                # case) - the only issue is that we can't detect if the\n                # deleted package was internal (so don't do that then)\n                # -doy\n                redo unless 0 > --$lvl;\n                last;\n            }\n            else {\n                return 2;\n            }\n        }\n        redo if $CarpInternal{$pkg};\n        redo unless 0 > --$lvl;\n        redo if $Internal{$pkg};\n    }\n    return $i - 1;\n}\n\nsub longmess_heavy {\n    if ( ref( $_[0] ) ) {   # don't break references as exceptions\n        return wantarray ? @_ : $_[0];\n    }\n    my $i = long_error_loc();\n    return ret_backtrace( $i, @_ );\n}\n\nBEGIN {\n    if(\"$]\" >= 5.017004) {\n        # The LAST_FH constant is a reference to the variable.\n        $Carp::{LAST_FH} = \\eval '\\${^LAST_FH}';\n    } else {\n        eval '*LAST_FH = sub () { 0 }';\n    }\n}\n\n# Returns a full stack backtrace starting from where it is\n# told.\nsub ret_backtrace {\n    my ( $i, @error ) = @_;\n    my $mess;\n    my $err = join ''"..., 8192) = 8192 <0.000059>
00:33:13.440609 brk(0x558a545000)       = 0x558a545000 <0.000068>
00:33:13.442899 read(5, "polluting the caller's namespace.\n        if ( $stash->{$var} && ref \\$stash->{$var} eq 'GLOB'\n          && *{$stash->{$var}}{ARRAY} && @{$stash->{$var}} ) {\n           return @{$stash->{$var}}\n        }\n    }\n    return;\n}\n\nif(!defined($warnings::VERSION) ||\n\tdo { no warnings \"numeric\"; $warnings::VERSION < 1.03 }) {\n    # Very old versions of warnings.pm import from Carp.  This can go\n    # wrong due to the circular dependency.  If Carp is invoked before\n    # warnings, then Carp starts by loading warnings, then warnings\n    # tries to import from Carp, and gets nothing because Carp is in\n    # the process of loading and hasn't defined its import method yet.\n    # So we work around that by manually exporting to warnings here.\n    no strict \"refs\";\n    *{\"warnings::$_\"} = \\&$_ foreach @EXPORT;\n}\n\n1;\n\n__END__\n\n", 8192) = 822 <0.000056>
00:33:13.443578 lseek(5, 25397, SEEK_SET) = 25397 <0.000047>
00:33:13.443745 lseek(5, 0, SEEK_CUR)   = 25397 <0.000045>
00:33:13.443901 close(5)                = 0 <0.000052>
00:33:13.444200 getuid()                = 1000 <0.000045>
00:33:13.444353 geteuid()               = 1000 <0.000044>
00:33:13.444505 getgid()                = 1000 <0.000044>
00:33:13.444658 getegid()               = 1000 <0.000044>
00:33:13.445063 newfstatat(AT_FDCWD, "/etc/perl/warnings/register.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000053>
00:33:13.445275 newfstatat(AT_FDCWD, "/etc/perl/warnings/register.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.445453 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/warnings/register.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.445630 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/warnings/register.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.445839 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/warnings/register.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.446014 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/warnings/register.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.446190 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/warnings/register.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000050>
00:33:13.446368 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/warnings/register.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.446543 newfstatat(AT_FDCWD, "/usr/share/perl5/warnings/register.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.446753 newfstatat(AT_FDCWD, "/usr/share/perl5/warnings/register.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.446930 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/warnings/register.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000049>
00:33:13.447106 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/warnings/register.pm", {st_mode=S_IFREG|0644, st_size=488, ...}, 0) = 0 <0.000049>
00:33:13.447298 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/warnings/register.pm", O_RDONLY|O_CLOEXEC) = 5 <0.000063>
00:33:13.447492 ioctl(5, TCGETS, 0x7ff0cc7210) = -1 ENOTTY (Inappropriate ioctl for device) <0.000045>
00:33:13.447656 lseek(5, 0, SEEK_CUR)   = 0 <0.000045>
00:33:13.447838 read(5, "package warnings::register;\n\nour $VERSION = '1.04';\nrequire warnings;\n\n# left here as cruft in case other users were using this undocumented routine\n# -- rjbs, 2010-09-08\nsub mkMask\n{\n    my ($bit) = @_;\n    my $mask = \"\";\n\n    vec($mask, $bit, 1) = 1;\n    return $mask;\n}\n\nsub import\n{\n    shift;\n    my @categories = @_;\n\n    my $package = (caller(0))[0];\n    warnings::register_categories($package);\n\n    warnings::register_categories($package . \"::$_\") for @categories;\n}\n1;\n__END__\n\n", 8192) = 488 <0.000050>
00:33:13.448364 lseek(5, 487, SEEK_SET) = 487 <0.000046>
00:33:13.448523 lseek(5, 0, SEEK_CUR)   = 487 <0.000045>
00:33:13.448678 close(5)                = 0 <0.000050>
00:33:13.450560 brk(0x558a566000)       = 0x558a566000 <0.000097>
00:33:13.450817 read(4, "", 8192)       = 0 <0.000047>
00:33:13.450979 close(4)                = 0 <0.000049>
00:33:13.451189 getuid()                = 1000 <0.000044>
00:33:13.451342 geteuid()               = 1000 <0.000044>
00:33:13.451493 getgid()                = 1000 <0.000040>
00:33:13.451640 getegid()               = 1000 <0.000044>
00:33:13.453826 newfstatat(AT_FDCWD, "/etc/perl/Exporter/Heavy.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000056>
00:33:13.454085 newfstatat(AT_FDCWD, "/etc/perl/Exporter/Heavy.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.454268 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/Exporter/Heavy.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000049>
00:33:13.454445 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/Exporter/Heavy.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.454623 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/Exporter/Heavy.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000050>
00:33:13.454838 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/Exporter/Heavy.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.455016 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/Exporter/Heavy.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000049>
00:33:13.455194 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/Exporter/Heavy.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000046>
00:33:13.455414 newfstatat(AT_FDCWD, "/usr/share/perl5/Exporter/Heavy.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000047>
00:33:13.455590 newfstatat(AT_FDCWD, "/usr/share/perl5/Exporter/Heavy.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000045>
00:33:13.455766 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Exporter/Heavy.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.455944 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Exporter/Heavy.pm", {st_mode=S_IFREG|0644, st_size=6385, ...}, 0) = 0 <0.000049>
00:33:13.456139 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Exporter/Heavy.pm", O_RDONLY|O_CLOEXEC) = 4 <0.000065>
00:33:13.456336 ioctl(4, TCGETS, 0x7ff0cc79e0) = -1 ENOTTY (Inappropriate ioctl for device) <0.000046>
00:33:13.456502 lseek(4, 0, SEEK_CUR)   = 0 <0.000045>
00:33:13.456717 read(4, "package Exporter::Heavy;\n\nuse strict;\nno strict 'refs';\n\n# On one line so MakeMaker will see it.\nour $VERSION = '5.77';\n\n#\n# We go to a lot of trouble not to 'require Carp' at file scope,\n#  because Carp requires Exporter, and something has to give.\n#\n\nsub _rebuild_cache {\n    my ($pkg, $exports, $cache) = @_;\n    s/^&// foreach @$exports;\n    @{$cache}{@$exports} = (1) x @$exports;\n    my $ok = \\@{\"${pkg}::EXPORT_OK\"};\n    if (@$ok) {\n\ts/^&// foreach @$ok;\n\t@{$cache}{@$ok} = (1) x @$ok;\n    }\n}\n\nsub heavy_export {\n\n    # Save the old __WARN__ handler in case it was defined\n    my $oldwarn = $SIG{__WARN__};\n\n    # First make import warnings look like they're coming from the \"use\".\n    local $SIG{__WARN__} = sub {\n\t# restore it back so proper stacking occurs\n\tlocal $SIG{__WARN__} = $oldwarn;\n\tmy $text = shift;\n\tif ($text =~ s/ at \\S*Exporter\\S*.pm line \\d+.*\\n//) {\n\t    require Carp;\n\t    local $Carp::CarpLevel = 1;\t# ignore package calling us too.\n\t    Carp::carp($text);\n\t}\n\telse {\n\t    warn $text;\n\t}\n    };\n    local $SIG{__DIE__} = sub {\n\trequire Carp;\n\tlocal $Carp::CarpLevel = 1;\t# ignore package calling us too.\n\tCarp::croak(\"$_[0]Illegal null symbol in \\@${1}::EXPORT\")\n\t    if $_[0] =~ /^Unable to create sub named \"(.*?)::\"/;\n    };\n\n    my($pkg, $callpkg, @imports) = @_;\n    my($type, $sym, $cache_is_current, $oops);\n    my($exports, $export_cache) = (\\@{\"${pkg}::EXPORT\"},\n                                   $Exporter::Cache{$pkg} ||= {});\n\n    if (@imports) {\n\tif (!%$export_cache) {\n\t    _rebuild_cache ($pkg, $exports, $export_cache);\n\t    $cache_is_current = 1;\n\t}\n\n\tif (grep m{^[/!:]}, @imports) {\n\t    my $tagsref = \\%{\"${pkg}::EXPORT_TAGS\"};\n\t    my $tagdata;\n\t    my %imports;\n\t    my($remove, $spec, @names, @allexports);\n\t    # negated first item implies starting with default set:\n\t    unshift @imports, ':DEFAULT' if $imports[0] =~ m/^!/;\n\t    foreach $spec (@imports){\n\t\t$remove = $spec =~ s/^!//;\n\n\t\tif ($spec =~ s/^://){\n\t\t    if ($spec eq 'DEFAULT'){\n\t\t\t@names = @$exports;\n\t\t    }\n\t\t    elsif ($tagdata = $tagsref->{$spec}) {\n\t\t\t@names = @$tagdata;\n\t\t    }\n\t\t    else {\n\t\t\twarn qq[\"$spec\" is not defined in %${pkg}::EXPORT_TAGS];\n\t\t\t++$oops;\n\t\t\tnext;\n\t\t    }\n\t\t}\n\t\telsif ($spec =~ m:^/(.*)/$:){\n\t\t    my $patn = $1;\n\t\t    @allexports = keys %$export_cache unless @allexports; # only do keys once\n\t\t    @names = grep(/$patn/, @allexports); # not anchored by default\n\t\t}\n\t\telse {\n\t\t    @names = ($spec); # is a normal symbol name\n\t\t}\n\n\t\twarn \"Import \".($remove ? \"del\":\"add\").\": @names \"\n\t\t    if $Exporter::Verbose;\n\n\t\tif ($remove) {\n\t\t   foreach $sym (@names) { delete $imports{$sym} } \n\t\t}\n\t\telse {\n\t\t    @imports{@names} = (1) x @names;\n\t\t}\n\t    }\n\t    @imports = keys %imports;\n\t}\n\n        my @carp;\n\tforeach $sym (@imports) {\n\t    if (!$export_cache->{$sym}) {\n\t\tif ($sym =~ m/^\\d/) {\n\t\t    $pkg->VERSION($sym); # inherit from UNIVERSAL\n\t\t    # If the version number was the only thing specified\n\t\t    # then we should act as if nothing was specified:\n\t\t    if (@imports == 1) {\n\t\t\t@imports = @$exports;\n\t\t\tlast;\n\t\t    }\n\t\t    # We need a way to emulate 'use Foo ()' but still\n\t\t    # allow an easy version check: \"use Foo 1.23, ''\";\n\t\t    if (@imports == 2 and !$imports[1]) {\n\t\t\t@imports = ();\n\t\t\tlast;\n\t\t    }\n\t\t} elsif ($sym !~ s/^&// || !$export_cache->{$sym}) {\n\t\t    # Last chance - see if they've updated EXPORT_OK since we\n\t\t    # cached it.\n\n\t\t    unless ($cache_is_current) {\n\t\t\t%$export_cache = ();\n\t\t\t_rebuild_cache ($pkg, $exports, $export_cache);\n\t\t\t$cache_is_current = 1;\n\t\t    }\n\n\t\t    if (!$export_cache->{$sym}) {\n\t\t\t# accumulate the non-exports\n\t\t\tpush @carp,\n\t\t\t  qq[\"$sym\" is not exported by the $pkg module];\n\t\t\t$oops++;\n\t\t    }\n\t\t}\n\t    }\n\t}\n\tif ($oops) {\n\t    require Carp;\n\t    Carp::croak(join(\"\\n\", @carp, \"Can't continue after import errors\"));\n\t}\n    }\n    else {\n\t@imports = @$exports;\n    }\n\n    my($fail, $fail_cache) = (\\@{\"${pkg}::EXPORT_FAIL\"},\n                              $Exporter::FailCache{$pkg} ||= {});\n\n    if (@$fail) {\n\tif (!%$fail_cache) {\n\t    # Build cache of symbols. Optimise the lookup by addin"..., 8192) = 6385 <0.000067>
00:33:13.458062 brk(0x558a587000)       = 0x558a587000 <0.000070>
00:33:13.461737 read(4, "", 8192)       = 0 <0.000055>
00:33:13.461948 close(4)                = 0 <0.000054>
00:33:13.462921 brk(0x558a5a8000)       = 0x558a5a8000 <0.000069>
00:33:13.465687 newfstatat(AT_FDCWD, "/etc/perl/PgCommon.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000055>
00:33:13.465935 newfstatat(AT_FDCWD, "/etc/perl/PgCommon.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000039>
00:33:13.466079 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/PgCommon.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000030>
00:33:13.466188 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/PgCommon.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.466299 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/PgCommon.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.466406 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/PgCommon.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.466514 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/PgCommon.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000031>
00:33:13.466622 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/PgCommon.pm", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000031>
00:33:13.466757 newfstatat(AT_FDCWD, "/usr/share/perl5/PgCommon.pmc", 0x7ff0cc7c68, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.466864 newfstatat(AT_FDCWD, "/usr/share/perl5/PgCommon.pm", {st_mode=S_IFREG|0644, st_size=45211, ...}, 0) = 0 <0.000030>
00:33:13.466986 openat(AT_FDCWD, "/usr/share/perl5/PgCommon.pm", O_RDONLY|O_CLOEXEC) = 4 <0.000042>
00:33:13.467111 ioctl(4, TCGETS, 0x7ff0cc79e0) = -1 ENOTTY (Inappropriate ioctl for device) <0.000029>
00:33:13.467214 lseek(4, 0, SEEK_CUR)   = 0 <0.000028>
00:33:13.467353 read(4, "=head1 NAME\n\nPgCommon - Common functions for the postgresql-common framework\n\n=head1 COPYRIGHT AND LICENSE\n\n (C) 2008-2009 Martin Pitt <mpitt@debian.org>\n (C) 2012-2024 Christoph Berg <myon@debian.org>\n\nThis program is free software; you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation; either\nL<version 2 of the License|https://www.gnu.org/licenses/old-licenses/gpl-2.0.html>,\nor (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE. See the GNU General Public License for more details.\n\n=cut\n\npackage PgCommon;\nuse strict;\nuse IPC::Open3;\nuse Socket;\nuse POSIX;\n\nuse Exporter;\nour $VERSION = 1.00;\nour @ISA = ('Exporter');\nour @EXPORT = qw/error user_cluster_map get_cluster_port set_cluster_port\n    get_cluster_socketdir set_cluster_socketdir cluster_port_running\n    get_cluster_start_conf set_cluster_start_conf set_cluster_pg_ctl_conf\n    get_program_path cluster_info validate_cluster_owner get_versions get_newest_version version_exists\n    get_version_clusters next_free_port cluster_exists install_file\n    change_ugid system_or_error config_bool replace_v_c\n    get_db_encoding get_db_locales get_cluster_locales get_cluster_controldata\n    get_cluster_databases cluster_conf_filename read_cluster_conf_file\n    read_pg_hba read_pidfile valid_hba_method/;\nour @EXPORT_OK = qw/$confroot $binroot $rpm $have_python2\n    quote_conf_value read_conf_file get_conf_value\n    set_conf_value set_conffile_value disable_conffile_value disable_conf_value\n    replace_conf_value cluster_data_directory get_file_device\n    check_pidfile_running/;\n\n\n=head1 CONTENTS\n\n=head2 error\n\n Print an error message to stderr and die with exit status 1\n\n=cut\n\nsub error {\n    $! = 1; # force exit code 1\n    die \"Error: $_[0]\\n\";\n}\n\nour $confroot = '/etc/postgresql';\nif ($ENV{'PG_CLUSTER_CONF_ROOT'}) {\n    ($confroot) = $ENV{'PG_CLUSTER_CONF_ROOT'} =~ /(.*)/; # untaint\n}\nour $common_confdir = \"/etc/postgresql-common\";\nif ($ENV{'PGSYSCONFDIR'}) {\n    ($common_confdir) = $ENV{'PGSYSCONFDIR'} =~ /(.*)/; # untaint\n}\nmy $mapfile = \"$common_confdir/user_clusters\";\nour $binroot = \"/usr/lib/postgresql/\";\n#redhat# $binroot = \"/usr/pgsql-\";\nour $rpm = 0;\n#redhat# $rpm = 1;\nour $defaultport = 5432;\nour $have_python2 = 0; # python2 removed in bullseye+\n#py2#$have_python2 = 1;\n\n=head2 prepare_exec, restore_exec\n\n Untaint the environment for executing an external program\n\n Optional arguments: list of additional variables\n\n=cut\n\n{\n    my %saved_env;\n\n    # untaint the environment for executing an external program\n    sub prepare_exec {\n\tmy @cleanvars = qw/PATH IFS ENV BASH_ENV CDPATH/;\n\tpush @cleanvars, @_;\n\t%saved_env = ();\n\n\tforeach (@cleanvars) {\n\t    $saved_env{$_} = $ENV{$_};\n\t    delete $ENV{$_};\n\t}\n\n\t$ENV{'PATH'} = '/sbin:/bin:/usr/sbin:/usr/bin';\n    }\n\n    # restore the environment after prepare_exec()\n    sub restore_exec {\n\tforeach (keys %saved_env) {\n\t    if (defined $saved_env{$_}) {\n\t\t$ENV{$_} = $saved_env{$_};\n\t    } else {\n\t\tdelete $ENV{$_};\n\t    }\n\t}\n    }\n}\n\n\n=head2 config_bool\n\n returns '1' if the argument is a configuration file value that stands for\n true (ON, TRUE, YES, or 1, case insensitive), '0' if the argument represents\n a false value (OFF, FALSE, NO, or 0, case insensitive), or undef otherwise.\n\n=cut\n\nsub config_bool {\n    return undef unless defined($_[0]);\n    return 1 if ($_[0] =~ /^(on|true|yes|1)$/i);\n    return 0 if ($_[0] =~ /^(off|false|no|0)$/i);\n    return undef;\n}\n\n\n=head2 quote_conf_value\n\n Quotes a value with single quotes\n\n Arguments: <value>\n Returns: quoted string\n\n=cut\n\nsub quote_conf_value ($) {\n    my $value = shift;\n    return $value if ($value =~ /^-?[\\d.]+$/); # integer or float\n    return $value if ($value =~ /^\\w+$/); # plain word\n    $value =~ s/'/''/g; # else quote it\n    return \"'$value'\";\n}\n\n\n=head2 replace_v_c\n\n Replaces %v and %c placeholders\n\n Arguments: <string> <version> <cl"..., 8192) = 8192 <0.000045>
00:33:13.467664 newfstatat(AT_FDCWD, "/etc/perl/IPC/Open3.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000031>
00:33:13.467778 newfstatat(AT_FDCWD, "/etc/perl/IPC/Open3.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000027>
00:33:13.467886 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/IPC/Open3.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.467993 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/IPC/Open3.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000027>
00:33:13.468118 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/IPC/Open3.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.468224 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/IPC/Open3.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.468331 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/IPC/Open3.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000030>
00:33:13.468438 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/IPC/Open3.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.468545 newfstatat(AT_FDCWD, "/usr/share/perl5/IPC/Open3.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.468649 newfstatat(AT_FDCWD, "/usr/share/perl5/IPC/Open3.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.468756 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/IPC/Open3.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000030>
00:33:13.468863 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/IPC/Open3.pm", {st_mode=S_IFREG|0644, st_size=9013, ...}, 0) = 0 <0.000030>
00:33:13.468979 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/IPC/Open3.pm", O_RDONLY|O_CLOEXEC) = 5 <0.000037>
00:33:13.469104 ioctl(5, TCGETS, 0x7ff0cc7210) = -1 ENOTTY (Inappropriate ioctl for device) <0.000027>
00:33:13.469204 lseek(5, 0, SEEK_CUR)   = 0 <0.000027>
00:33:13.469320 read(5, "package IPC::Open3;\n\nuse strict;\nno strict 'refs'; # because users pass me bareword filehandles\n\nuse Exporter 'import';\n\nuse Carp;\nuse Symbol qw(gensym qualify);\n\nour $VERSION\t= '1.22';\nour @EXPORT\t\t= qw(open3);\n\n# &open3: Marc Horowitz <marc@mit.edu>\n# derived mostly from &open2 by tom christiansen, <tchrist@convex.com>\n# fixed for 5.001 by Ulrich Kunitz <kunitz@mai-koeln.com>\n# ported to Win32 by Ron Schmidt, Merrill Lynch almost ended my career\n# fixed for autovivving FHs, tchrist again\n# allow fd numbers to be used, by Frank Tobin\n# allow '-' as command (c.f. open \"-|\"), by Adam Spiers <perl@adamspiers.org>\n#\n# usage: $pid = open3('wtr', 'rdr', 'err' 'some cmd and args', 'optarg', ...);\n#\n# spawn the given $cmd and connect rdr for\n# reading, wtr for writing, and err for errors.\n# if err is '', or the same as rdr, then stdout and\n# stderr of the child are on the same fh.  returns pid\n# of child (or dies on failure).\n\n# if wtr begins with '<&', then wtr will be closed in the parent, and\n# the child will read from it directly.  if rdr or err begins with\n# '>&', then the child will send output directly to that fd.  In both\n# cases, there will be a dup() instead of a pipe() made.\n\n# WARNING: this is dangerous, as you may block forever\n# unless you are very careful.\n#\n# $wtr is left unbuffered.\n#\n# abort program if\n#   rdr or wtr are null\n#   a system call fails\n\nour $Me = 'open3 (bug)';\t# you should never see this, it's always localized\n\n# Fatal.pm needs to be fixed WRT prototypes.\n\nsub xpipe {\n    pipe $_[0], $_[1] or croak \"$Me: pipe($_[0], $_[1]) failed: $!\";\n}\n\n# I tried using a * prototype character for the filehandle but it still\n# disallows a bareword while compiling under strict subs.\n\nsub xopen {\n    open $_[0], $_[1], @_[2..$#_] and return;\n    local $\" = ', ';\n    carp \"$Me: open(@_) failed: $!\";\n}\n\nsub xclose {\n    $_[0] =~ /\\A=?(\\d+)\\z/\n\t? do { my $fh; open($fh, $_[1] . '&=' . $1) and close($fh); }\n\t: close $_[0]\n\tor croak \"$Me: close($_[0]) failed: $!\";\n}\n\nsub xfileno {\n    return $1 if $_[0] =~ /\\A=?(\\d+)\\z/;  # deal with fh just being an fd\n    return fileno $_[0];\n}\n\nuse constant FORCE_DEBUG_SPAWN => 0;\nuse constant DO_SPAWN => $^O eq 'os2' || $^O eq 'MSWin32' || FORCE_DEBUG_SPAWN;\n\nsub _open3 {\n    local $Me = shift;\n\n    # simulate autovivification of filehandles because\n    # it's too ugly to use @_ throughout to make perl do it for us\n    # tchrist 5-Mar-00\n\n    # Historically, open3(undef...) has silently worked, so keep\n    # it working.\n    splice @_, 0, 1, undef if \\$_[0] == \\undef;\n    splice @_, 1, 1, undef if \\$_[1] == \\undef;\n    unless (eval  {\n\t$_[0] = gensym unless defined $_[0] && length $_[0];\n\t$_[1] = gensym unless defined $_[1] && length $_[1];\n\t1; })\n    {\n\t# must strip crud for croak to add back, or looks ugly\n\t$@ =~ s/(?<=value attempted) at .*//s;\n\tcroak \"$Me: $@\";\n    }\n\n    my @handles = ({ mode => '<', handle => \\*STDIN },\n\t\t   { mode => '>', handle => \\*STDOUT },\n\t\t   { mode => '>', handle => \\*STDERR },\n\t\t  );\n\n    foreach (@handles) {\n\t$_->{parent} = shift;\n\t$_->{open_as} = gensym;\n    }\n\n    if (@_ > 1 and $_[0] eq '-') {\n\tcroak \"Arguments don't make sense when the command is '-'\"\n    }\n\n    $handles[2]{parent} ||= $handles[1]{parent};\n    $handles[2]{dup_of_out} = $handles[1]{parent} eq $handles[2]{parent};\n\n    my $package;\n    foreach (@handles) {\n\t$_->{dup} = ($_->{parent} =~ s/^[<>]&//);\n\n\tif ($_->{parent} !~ /\\A=?(\\d+)\\z/) {\n\t    # force unqualified filehandles into caller's package\n\t    $package //= caller 1;\n\t    $_->{parent} = qualify $_->{parent}, $package;\n\t}\n\n\tnext if $_->{dup} or $_->{dup_of_out};\n\tif ($_->{mode} eq '<') {\n\t    xpipe $_->{open_as}, $_->{parent};\n\t} else {\n\t    xpipe $_->{parent}, $_->{open_as};\n\t}\n    }\n\n    my $kidpid;\n    if (!DO_SPAWN) {\n\t# Used to communicate exec failures.\n\txpipe my $stat_r, my $stat_w;\n\n\t$kidpid = fork;\n\tcroak \"$Me: fork failed: $!\" unless defined $kidpid;\n\tif ($kidpid == 0) {  # Kid\n\t    eval {\n\t\t# A tie in the parent should not be allowed to cause problems.\n\t\tuntie *STDIN;\n\t\tuntie *STDOUT;\n\t\tuntie *STDERR;\n\n\t\tclose $stat_"..., 8192) = 8192 <0.000040>
00:33:13.469495 brk(0x558a5ca000)       = 0x558a5ca000 <0.000042>
00:33:13.469899 newfstatat(AT_FDCWD, "/etc/perl/Symbol.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000032>
00:33:13.470018 newfstatat(AT_FDCWD, "/etc/perl/Symbol.pm", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.470128 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/Symbol.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.470234 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/Symbol.pm", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000027>
00:33:13.470342 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/Symbol.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.470447 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/Symbol.pm", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000027>
00:33:13.470555 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/Symbol.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.470669 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/Symbol.pm", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000030>
00:33:13.470783 newfstatat(AT_FDCWD, "/usr/share/perl5/Symbol.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.470889 newfstatat(AT_FDCWD, "/usr/share/perl5/Symbol.pm", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.470997 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Symbol.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.471102 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Symbol.pm", {st_mode=S_IFREG|0644, st_size=2205, ...}, 0) = 0 <0.000030>
00:33:13.471221 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Symbol.pm", O_RDONLY|O_CLOEXEC) = 6 <0.000038>
00:33:13.471338 ioctl(6, TCGETS, 0x7ff0cc6a40) = -1 ENOTTY (Inappropriate ioctl for device) <0.000028>
00:33:13.471438 lseek(6, 0, SEEK_CUR)   = 0 <0.000027>
00:33:13.471559 read(6, "package Symbol;\n\nuse strict;\nuse warnings;\n\nrequire Exporter;\nour @ISA = qw(Exporter);\nour @EXPORT = qw(gensym ungensym qualify qualify_to_ref);\nour @EXPORT_OK = qw(delete_package geniosym);\n\nour $VERSION = '1.09';\n\nmy $genpkg = \"Symbol::\";\nmy $genseq = 0;\n\nmy %global = map {$_ => 1} qw(ARGV ARGVOUT ENV INC SIG STDERR STDIN STDOUT);\n\n#\n# Note that we never _copy_ the glob; we just make a ref to it.\n# If we did copy it, then SVf_FAKE would be set on the copy, and\n# glob-specific behaviors (e.g. C<*$ref = \\&func>) wouldn't work.\n#\nsub gensym () {\n    my $name = \"GEN\" . $genseq++;\n    no strict 'refs';\n    my $ref = \\*{$genpkg . $name};\n    delete $$genpkg{$name};\n    $ref;\n}\n\nsub geniosym () {\n    my $sym = gensym();\n    # force the IO slot to be filled\n    select(select $sym);\n    *$sym{IO};\n}\n\nsub ungensym ($) {}\n\nsub qualify ($;$) {\n    my ($name) = @_;\n    if (!ref($name) && index($name, '::') == -1 && index($name, \"'\") == -1) {\n\tmy $pkg;\n\t# Global names: special character, \"^xyz\", or other. \n\tif ($name =~ /^(([^a-z])|(\\^[a-z_]+))\\z/i || $global{$name}) {\n\t    # RGS 2001-11-05 : translate leading ^X to control-char\n\t    $name =~ s/^\\^([a-z_])/'qq(\\c'.$1.')'/eei;\n\t    $pkg = \"main\";\n\t}\n\telse {\n\t    $pkg = (@_ > 1) ? $_[1] : caller;\n\t}\n\t$name = $pkg . \"::\" . $name;\n    }\n    $name;\n}\n\nsub qualify_to_ref ($;$) {\n    no strict 'refs';\n    return \\*{ qualify $_[0], @_ > 1 ? $_[1] : caller };\n}\n\n#\n# of Safe.pm lineage\n#\nsub delete_package ($) {\n    my $pkg = shift;\n\n    # expand to full symbol table name if needed\n\n    unless ($pkg =~ /^main::.*::$/) {\n        $pkg = \"main$pkg\"\tif\t$pkg =~ /^::/;\n        $pkg = \"main::$pkg\"\tunless\t$pkg =~ /^main::/;\n        $pkg .= '::'\t\tunless\t$pkg =~ /::$/;\n    }\n\n    my($stem, $leaf) = $pkg =~ m/(.*::)(\\w+::)$/;\n    no strict 'refs';\n    my $stem_symtab = *{$stem}{HASH};\n    return unless defined $stem_symtab and exists $stem_symtab->{$leaf};\n\n    # free all the symbols in the package\n\n    my $leaf_symtab = *{$stem_symtab->{$leaf}}{HASH};\n    foreach my $name (keys %$leaf_symtab) {\n        undef *{$pkg . $name};\n    }\n    use strict 'refs';\n\n    # delete the symbol table\n\n    %$leaf_symtab = ();\n    delete $stem_symtab->{$leaf};\n}\n\n1;\n", 8192) = 2205 <0.000032>
00:33:13.473213 read(6, "", 8192)       = 0 <0.000032>
00:33:13.473348 close(6)                = 0 <0.000034>
00:33:13.473498 getuid()                = 1000 <0.000028>
00:33:13.473593 geteuid()               = 1000 <0.000027>
00:33:13.473686 getgid()                = 1000 <0.000027>
00:33:13.473779 getegid()               = 1000 <0.000027>
00:33:13.474519 newfstatat(AT_FDCWD, "/etc/perl/constant.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000034>
00:33:13.474688 newfstatat(AT_FDCWD, "/etc/perl/constant.pm", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.474807 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/constant.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000030>
00:33:13.474914 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/constant.pm", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.475022 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/constant.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.475128 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/constant.pm", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000027>
00:33:13.475235 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/constant.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000031>
00:33:13.475343 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/constant.pm", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.475450 newfstatat(AT_FDCWD, "/usr/share/perl5/constant.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.475556 newfstatat(AT_FDCWD, "/usr/share/perl5/constant.pm", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.475663 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/constant.pmc", 0x7ff0cc6cc8, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.475792 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/constant.pm", {st_mode=S_IFREG|0644, st_size=5737, ...}, 0) = 0 <0.000030>
00:33:13.475912 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/constant.pm", O_RDONLY|O_CLOEXEC) = 6 <0.000044>
00:33:13.476036 ioctl(6, TCGETS, 0x7ff0cc6a40) = -1 ENOTTY (Inappropriate ioctl for device) <0.000029>
00:33:13.476139 lseek(6, 0, SEEK_CUR)   = 0 <0.000027>
00:33:13.476253 read(6, "package constant;\nuse 5.008;\nuse strict;\nuse warnings::register;\n\nour $VERSION = '1.33';\nour %declared;\n\n#=======================================================================\n\n# Some names are evil choices.\nmy %keywords = map +($_, 1), qw{ BEGIN INIT CHECK END DESTROY AUTOLOAD };\n$keywords{UNITCHECK}++ if $] > 5.009;\n\nmy %forced_into_main = map +($_, 1),\n    qw{ STDIN STDOUT STDERR ARGV ARGVOUT ENV INC SIG };\n\nmy %forbidden = (%keywords, %forced_into_main);\n\nmy $normal_constant_name = qr/^_?[^\\W_0-9]\\w*\\z/;\nmy $tolerable = qr/^[A-Za-z_]\\w*\\z/;\nmy $boolean = qr/^[01]?\\z/;\n\nBEGIN {\n    # We'd like to do use constant _CAN_PCS => $] > 5.009002\n    # but that's a bit tricky before we load the constant module :-)\n    # By doing this, we save several run time checks for *every* call\n    # to import.\n    my $const = $] > 5.009002;\n    my $downgrade = $] < 5.015004; # && $] >= 5.008\n    my $constarray = exists &_make_const;\n    if ($const) {\n\tInternals::SvREADONLY($const, 1);\n\tInternals::SvREADONLY($downgrade, 1);\n\t$constant::{_CAN_PCS}   = \\$const;\n\t$constant::{_DOWNGRADE} = \\$downgrade;\n\t$constant::{_CAN_PCS_FOR_ARRAY} = \\$constarray;\n    }\n    else {\n\tno strict 'refs';\n\t*{\"_CAN_PCS\"}   = sub () {$const};\n\t*{\"_DOWNGRADE\"} = sub () { $downgrade };\n\t*{\"_CAN_PCS_FOR_ARRAY\"} = sub () { $constarray };\n    }\n}\n\n#=======================================================================\n# import() - import symbols into user's namespace\n#\n# What we actually do is define a function in the caller's namespace\n# which returns the value. The function we create will normally\n# be inlined as a constant, thereby avoiding further sub calling \n# overhead.\n#=======================================================================\nsub import {\n    my $class = shift;\n    return unless @_;\t\t\t# Ignore 'use constant;'\n    my $constants;\n    my $multiple  = ref $_[0];\n    my $caller = caller;\n    my $flush_mro;\n    my $symtab;\n\n    if (_CAN_PCS) {\n\tno strict 'refs';\n\t$symtab = \\%{$caller . '::'};\n    };\n\n    if ( $multiple ) {\n\tif (ref $_[0] ne 'HASH') {\n\t    require Carp;\n\t    Carp::croak(\"Invalid reference type '\".ref(shift).\"' not 'HASH'\");\n\t}\n\t$constants = shift;\n    } else {\n\tunless (defined $_[0]) {\n\t    require Carp;\n\t    Carp::croak(\"Can't use undef as constant name\");\n\t}\n\t$constants->{+shift} = undef;\n    }\n\n    foreach my $name ( keys %$constants ) {\n\tmy $pkg;\n\tmy $symtab = $symtab;\n\tmy $orig_name = $name;\n\tif ($name =~ s/(.*)(?:::|')(?=.)//s) {\n\t    $pkg = $1;\n\t    if (_CAN_PCS && $pkg ne $caller) {\n\t\tno strict 'refs';\n\t\t$symtab = \\%{$pkg . '::'};\n\t    }\n\t}\n\telse {\n\t    $pkg = $caller;\n\t}\n\n\t# Normal constant name\n\tif ($name =~ $normal_constant_name and !$forbidden{$name}) {\n\t    # Everything is okay\n\n\t# Name forced into main, but we're not in main. Fatal.\n\t} elsif ($forced_into_main{$name} and $pkg ne 'main') {\n\t    require Carp;\n\t    Carp::croak(\"Constant name '$name' is forced into main::\");\n\n\t# Starts with double underscore. Fatal.\n\t} elsif ($name =~ /^__/) {\n\t    require Carp;\n\t    Carp::croak(\"Constant name '$name' begins with '__'\");\n\n\t# Maybe the name is tolerable\n\t} elsif ($name =~ $tolerable) {\n\t    # Then we'll warn only if you've asked for warnings\n\t    if (warnings::enabled()) {\n\t\tif ($keywords{$name}) {\n\t\t    warnings::warn(\"Constant name '$name' is a Perl keyword\");\n\t\t} elsif ($forced_into_main{$name}) {\n\t\t    warnings::warn(\"Constant name '$name' is \" .\n\t\t\t\"forced into package main::\");\n\t\t}\n\t    }\n\n\t# Looks like a boolean\n\t# use constant FRED == fred;\n\t} elsif ($name =~ $boolean) {\n            require Carp;\n\t    if (@_) {\n\t\tCarp::croak(\"Constant name '$name' is invalid\");\n\t    } else {\n\t\tCarp::croak(\"Constant name looks like boolean value\");\n\t    }\n\n\t} else {\n\t   # Must have bad characters\n            require Carp;\n\t    Carp::croak(\"Constant name '$name' has invalid characters\");\n\t}\n\n\t{\n\t    no strict 'refs';\n\t    my $full_name = \"${pkg}::$name\";\n\t    $declared{$full_name}++;\n\t    if ($multiple || @_ == 1) {\n\t\tmy $scalar = $multiple ? $constants->{$orig_name} : $_[0];\n\n\t\tif (_DOWNGRADE) { # for 5.8 to 5.14\n\t\t    # Work around pe"..., 8192) = 5737 <0.000036>
00:33:13.476816 brk(0x558a5eb000)       = 0x558a5eb000 <0.000046>
00:33:13.478912 lseek(6, 5736, SEEK_SET) = 5736 <0.000030>
00:33:13.479042 lseek(6, 0, SEEK_CUR)   = 5736 <0.000027>
00:33:13.479137 close(6)                = 0 <0.000033>
00:33:13.480265 brk(0x558a60d000)       = 0x558a60d000 <0.000045>
00:33:13.481990 read(5, "d: $!\";\n\t    $pid = fork;\n\t    die \"Fork failed: $!\" unless defined $pid;\n\t    if (!$pid) {\n\t\t{ no warnings; exec @_ }\n\t\tprint $w 0 + $!;\n\t\tclose $w;\n\t\trequire POSIX;\n\t\tPOSIX::_exit(255);\n\t    }\n\t    close $w;\n\t    my $bad = <$r>;\n\t    if (defined $bad) {\n\t\t$! = $bad;\n\t\tundef $pid;\n\t    }\n\t} else {\n\t    $pid = eval { system 1, @_ }; # 1 == P_NOWAIT\n\t}\n\tif($@) {\n\t    push @errs, \"IO::Pipe: Can't spawn-NOWAIT: $@\";\n\t} elsif(!$pid || $pid < 0) {\n\t    push @errs, \"IO::Pipe: Can't spawn-NOWAIT: $!\";\n\t}\n    }\n\n    # Do this in reverse, so that STDERR is restored first:\n    foreach $fd (reverse @$fds) {\n\t$fd->{handle}->fdopen($fd->{tmp_copy}, $fd->{mode});\n    }\n    foreach (values %saved) {\n\t$_->close or croak \"Can't close: $!\";\n    }\n    croak join \"\\n\", @errs if @errs;\n    return $pid;\n}\n\n1; # so require is happy\n", 8192) = 821 <0.000039>
00:33:13.482776 read(5, "", 8192)       = 0 <0.000032>
00:33:13.482908 close(5)                = 0 <0.000034>
00:33:13.483167 newfstatat(AT_FDCWD, "/etc/perl/Socket.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000033>
00:33:13.483305 newfstatat(AT_FDCWD, "/etc/perl/Socket.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.483419 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/Socket.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000030>
00:33:13.483528 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/Socket.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.483636 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/Socket.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.483746 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/Socket.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.483853 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/Socket.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000031>
00:33:13.483964 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/Socket.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.484072 newfstatat(AT_FDCWD, "/usr/share/perl5/Socket.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.484180 newfstatat(AT_FDCWD, "/usr/share/perl5/Socket.pm", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.484288 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Socket.pmc", 0x7ff0cc7498, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.484395 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Socket.pm", {st_mode=S_IFREG|0644, st_size=13828, ...}, 0) = 0 <0.000030>
00:33:13.484517 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/Socket.pm", O_RDONLY|O_CLOEXEC) = 5 <0.000045>
00:33:13.484670 ioctl(5, TCGETS, 0x7ff0cc7210) = -1 ENOTTY (Inappropriate ioctl for device) <0.000029>
00:33:13.484774 lseek(5, 0, SEEK_CUR)   = 0 <0.000027>
00:33:13.484888 read(5, "package Socket;\n\nuse strict;\n{ use v5.6.1; }\n\nour $VERSION = '2.033';\n\n# Still undocumented: SCM_*, SOMAXCONN, IOV_MAX, UIO_MAXIOV\n\nuse Carp;\nuse warnings::register;\n\nrequire Exporter;\nrequire XSLoader;\nour @ISA = qw(Exporter);\n\n# <@Nicholas> you can't change @EXPORT without breaking the implicit API\n# Please put any new constants in @EXPORT_OK!\n\n# List re-ordered to match documentation above. Try to keep the ordering\n# consistent so it's easier to see which ones are or aren't documented.\nour @EXPORT = qw(\n\tPF_802 PF_AAL PF_APPLETALK PF_CCITT PF_CHAOS PF_CTF PF_DATAKIT\n\tPF_DECnet PF_DLI PF_ECMA PF_GOSIP PF_HYLINK PF_IMPLINK PF_INET PF_INET6\n\tPF_ISO PF_KEY PF_LAST PF_LAT PF_LINK PF_MAX PF_NBS PF_NIT PF_NS PF_OSI\n\tPF_OSINET PF_PUP PF_ROUTE PF_SNA PF_UNIX PF_UNSPEC PF_USER PF_WAN\n\tPF_X25\n\n\tAF_802 AF_AAL AF_APPLETALK AF_CCITT AF_CHAOS AF_CTF AF_DATAKIT\n\tAF_DECnet AF_DLI AF_ECMA AF_GOSIP AF_HYLINK AF_IMPLINK AF_INET AF_INET6\n\tAF_ISO AF_KEY AF_LAST AF_LAT AF_LINK AF_MAX AF_NBS AF_NIT AF_NS AF_OSI\n\tAF_OSINET AF_PUP AF_ROUTE AF_SNA AF_UNIX AF_UNSPEC AF_USER AF_WAN\n\tAF_X25\n\n\tSOCK_DGRAM SOCK_RAW SOCK_RDM SOCK_SEQPACKET SOCK_STREAM\n\n\tSOL_SOCKET\n\n\tSO_ACCEPTCONN SO_ATTACH_FILTER SO_BACKLOG SO_BROADCAST SO_CHAMELEON\n\tSO_DEBUG SO_DETACH_FILTER SO_DGRAM_ERRIND SO_DOMAIN SO_DONTLINGER\n\tSO_DONTROUTE SO_ERROR SO_FAMILY SO_KEEPALIVE SO_LINGER SO_OOBINLINE\n\tSO_PASSCRED SO_PASSIFNAME SO_PEERCRED SO_PROTOCOL SO_PROTOTYPE\n\tSO_RCVBUF SO_RCVLOWAT SO_RCVTIMEO SO_REUSEADDR SO_REUSEPORT\n\tSO_SECURITY_AUTHENTICATION SO_SECURITY_ENCRYPTION_NETWORK\n\tSO_SECURITY_ENCRYPTION_TRANSPORT SO_SNDBUF SO_SNDLOWAT SO_SNDTIMEO\n\tSO_STATE SO_TYPE SO_USELOOPBACK SO_XOPEN SO_XSE\n\n\tIP_HDRINCL IP_OPTIONS IP_RECVOPTS IP_RECVRETOPTS IP_RETOPTS IP_TOS\n\tIP_TTL\n\n\tMSG_BCAST MSG_BTAG MSG_CTLFLAGS MSG_CTLIGNORE MSG_CTRUNC MSG_DONTROUTE\n\tMSG_DONTWAIT MSG_EOF MSG_EOR MSG_ERRQUEUE MSG_ETAG MSG_FASTOPEN MSG_FIN\n\tMSG_MAXIOVLEN MSG_MCAST MSG_NOSIGNAL MSG_OOB MSG_PEEK MSG_PROXY MSG_RST\n\tMSG_SYN MSG_TRUNC MSG_URG MSG_WAITALL MSG_WIRE\n\n\tSHUT_RD SHUT_RDWR SHUT_WR\n\n\tINADDR_ANY INADDR_BROADCAST INADDR_LOOPBACK INADDR_NONE\n\n\tSCM_CONNECT SCM_CREDENTIALS SCM_CREDS SCM_RIGHTS SCM_TIMESTAMP\n\n\tSOMAXCONN\n\n\tIOV_MAX\n\tUIO_MAXIOV\n\n\tsockaddr_family\n\tpack_sockaddr_in  unpack_sockaddr_in  sockaddr_in\n\tpack_sockaddr_in6 unpack_sockaddr_in6 sockaddr_in6\n\tpack_sockaddr_un  unpack_sockaddr_un  sockaddr_un \n\n\tinet_aton inet_ntoa\n);\n\n# List re-ordered to match documentation above. Try to keep the ordering\n# consistent so it's easier to see which ones are or aren't documented.\nour @EXPORT_OK = qw(\n\tCR LF CRLF $CR $LF $CRLF\n\n\tSOCK_NONBLOCK SOCK_CLOEXEC\n\n\tIP_ADD_MEMBERSHIP IP_ADD_SOURCE_MEMBERSHIP IP_BIND_ADDRESS_NO_PORT\n\tIP_DROP_MEMBERSHIP IP_DROP_SOURCE_MEMBERSHIP IP_FREEBIND\n\tIP_MULTICAST_ALL IP_MULTICAST_IF IP_MULTICAST_LOOP IP_MULTICAST_TTL\n\tIP_MTU IP_MTU_DISCOVER IP_NODEFRAG IP_RECVERR IP_TRANSPARENT\n\n\tIPPROTO_IP IPPROTO_IPV6 IPPROTO_RAW IPPROTO_ICMP IPPROTO_IGMP\n\tIPPROTO_TCP IPPROTO_UDP IPPROTO_GRE IPPROTO_ESP IPPROTO_AH\n\tIPPROTO_ICMPV6 IPPROTO_SCTP\n\n\tIP_PMTUDISC_DO IP_PMTUDISC_DONT IP_PMTUDISC_PROBE IP_PMTUDISC_WANT\n\n\tIPTOS_LOWDELAY IPTOS_THROUGHPUT IPTOS_RELIABILITY IPTOS_MINCOST\n\n\tTCP_CONGESTION TCP_CONNECTIONTIMEOUT TCP_CORK TCP_DEFER_ACCEPT\n\tTCP_FASTOPEN TCP_INFO TCP_INIT_CWND TCP_KEEPALIVE TCP_KEEPCNT\n\tTCP_KEEPIDLE TCP_KEEPINTVL TCP_LINGER2 TCP_MAXRT TCP_MAXSEG\n\tTCP_MD5SIG TCP_NODELAY TCP_NOOPT TCP_NOPUSH TCP_QUICKACK\n\tTCP_SACK_ENABLE TCP_STDURG TCP_SYNCNT TCP_USER_TIMEOUT\n\tTCP_WINDOW_CLAMP\n\n\tIN6ADDR_ANY IN6ADDR_LOOPBACK\n\n\tIPV6_ADDRFROM IPV6_ADD_MEMBERSHIP IPV6_DROP_MEMBERSHIP IPV6_JOIN_GROUP\n\tIPV6_LEAVE_GROUP IPV6_MTU IPV6_MTU_DISCOVER IPV6_MULTICAST_HOPS\n\tIPV6_MULTICAST_IF IPV6_MULTICAST_LOOP IPV6_RECVERR IPV6_ROUTER_ALERT\n\tIPV6_UNICAST_HOPS IPV6_V6ONLY\n\n\tSO_LOCK_FILTER SO_RCVBUFFORCE SO_SNDBUFFORCE\n\n\tpack_ip_mreq unpack_ip_mreq pack_ip_mreq_source unpack_ip_mreq_source\n\n\tpack_ipv6_mreq unpack_ipv6_mreq\n\n\tinet_pton inet_ntop\n\n\tgetaddrinfo getnameinfo\n\n\tAI_ADDRCONFIG AI_ALL AI_CANONIDN AI_CANONNAME AI_IDN\n\tAI_IDN_ALLOW_UNASSIGNED AI_IDN_USE_STD3_ASCII_RULES AI_NUMERICHOST\n\tAI_NUMERICSERV AI_PASSIVE "..., 8192) = 8192 <0.000035>
00:33:13.486248 brk(0x558a62e000)       = 0x558a62e000 <0.000048>
00:33:13.487111 read(5, "type\",\n    );\n}\n\n# The following functions are used if the system does not have a\n# getaddrinfo(3) function in libc; and are used to emulate it for the AF_INET\n# family\n\n# Borrowed from Regexp::Common::net\nmy $REGEXP_IPv4_DECIMAL = qr/25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}/;\nmy $REGEXP_IPv4_DOTTEDQUAD = qr/$REGEXP_IPv4_DECIMAL\\.$REGEXP_IPv4_DECIMAL\\.$REGEXP_IPv4_DECIMAL\\.$REGEXP_IPv4_DECIMAL/;\n\nsub fake_makeerr\n{\n    my ( $errno ) = @_;\n    my $errstr = $errno == 0 ? \"\" : ( $errstr{$errno} || $errno );\n    return Scalar::Util::dualvar( $errno, $errstr );\n}\n\nsub fake_getaddrinfo\n{\n    my ( $node, $service, $hints ) = @_;\n\n    $node = \"\" unless defined $node;\n\n    $service = \"\" unless defined $service;\n\n    my ( $family, $socktype, $protocol, $flags ) = @$hints{qw( family socktype protocol flags )};\n\n    $family ||= Socket::AF_INET(); # 0 == AF_UNSPEC, which we want too\n    $family == Socket::AF_INET() or return fake_makeerr( EAI_FAMILY() );\n\n    $socktype ||= 0;\n\n    $protocol ||= 0;\n\n    $flags ||= 0;\n\n    my $flag_passive     = $flags & AI_PASSIVE();     $flags &= ~AI_PASSIVE();\n    my $flag_canonname   = $flags & AI_CANONNAME();   $flags &= ~AI_CANONNAME();\n    my $flag_numerichost = $flags & AI_NUMERICHOST(); $flags &= ~AI_NUMERICHOST();\n    my $flag_numericserv = $flags & AI_NUMERICSERV(); $flags &= ~AI_NUMERICSERV();\n\n    # These constants don't apply to AF_INET-only lookups, so we might as well\n    # just ignore them. For AI_ADDRCONFIG we just presume the host has ability\n    # to talk AF_INET. If not we'd have to return no addresses at all. :)\n    $flags &= ~(AI_V4MAPPED()|AI_ALL()|AI_ADDRCONFIG());\n\n    $flags & (AI_IDN()|AI_CANONIDN()) and\n\tcroak \"Socket::getaddrinfo() does not support IDN\";\n\n    $flags == 0 or return fake_makeerr( EAI_BADFLAGS() );\n\n    $node eq \"\" and $service eq \"\" and return fake_makeerr( EAI_NONAME() );\n\n    my $canonname;\n    my @addrs;\n    if( $node ne \"\" ) {\n\treturn fake_makeerr( EAI_NONAME() ) if( $flag_numerichost and $node !~ m/^$REGEXP_IPv4_DOTTEDQUAD$/ );\n\t( $canonname, undef, undef, undef, @addrs ) = gethostbyname( $node );\n\tdefined $canonname or return fake_makeerr( EAI_NONAME() );\n\n\tundef $canonname unless $flag_canonname;\n    }\n    else {\n\t$addrs[0] = $flag_passive ? Socket::inet_aton( \"0.0.0.0\" )\n\t\t\t\t  : Socket::inet_aton( \"127.0.0.1\" );\n    }\n\n    my @ports; # Actually ARRAYrefs of [ socktype, protocol, port ]\n    my $protname = \"\";\n    if( $protocol ) {\n\t$protname = eval { getprotobynumber( $protocol ) };\n    }\n\n    if( $service ne \"\" and $service !~ m/^\\d+$/ ) {\n\treturn fake_makeerr( EAI_NONAME() ) if( $flag_numericserv );\n\tgetservbyname( $service, $protname ) or return fake_makeerr( EAI_SERVICE() );\n    }\n\n    foreach my $this_socktype ( Socket::SOCK_STREAM(), Socket::SOCK_DGRAM(), Socket::SOCK_RAW() ) {\n\tnext if $socktype and $this_socktype != $socktype;\n\n\tmy $this_protname = \"raw\";\n\t$this_socktype == Socket::SOCK_STREAM() and $this_protname = \"tcp\";\n\t$this_socktype == Socket::SOCK_DGRAM()  and $this_protname = \"udp\";\n\n\tnext if $protname and $this_protname ne $protname;\n\n\tmy $port;\n\tif( $service ne \"\" ) {\n\t    if( $service =~ m/^\\d+$/ ) {\n\t\t$port = \"$service\";\n\t    }\n\t    else {\n\t\t( undef, undef, $port, $this_protname ) = getservbyname( $service, $this_protname );\n\t\tnext unless defined $port;\n\t    }\n\t}\n\telse {\n\t    $port = 0;\n\t}\n\n\tpush @ports, [ $this_socktype, eval { scalar getprotobyname( $this_protname ) } || 0, $port ];\n    }\n\n    my @ret;\n    foreach my $addr ( @addrs ) {\n\tforeach my $portspec ( @ports ) {\n\t    my ( $socktype, $protocol, $port ) = @$portspec;\n\t    push @ret, {\n\t\tfamily    => $family,\n\t\tsocktype  => $socktype,\n\t\tprotocol  => $protocol,\n\t\taddr      => Socket::pack_sockaddr_in( $port, $addr ),\n\t\tcanonname => undef,\n\t    };\n\t}\n    }\n\n    # Only supply canonname for the first result\n    if( defined $canonname ) {\n\t$ret[0]->{canonname} = $canonname;\n    }\n\n    return ( fake_makeerr( 0 ), @ret );\n}\n\nsub fake_getnameinfo\n{\n    my ( $addr, $flags, $xflags ) = @_;\n\n    my ( $port, $inetaddr );\n    eval { ( $port, $inetaddr ) = Socket::unpack_sockaddr_in( $addr ) "..., 8192) = 5636 <0.000039>
00:33:13.488695 brk(0x558a64f000)       = 0x558a64f000 <0.000044>
00:33:13.489350 read(5, "", 8192)       = 0 <0.000031>
00:33:13.489456 close(5)                = 0 <0.000033>
00:33:13.489726 getuid()                = 1000 <0.000028>
00:33:13.489822 geteuid()               = 1000 <0.000027>
00:33:13.489915 getgid()                = 1000 <0.000027>
00:33:13.490008 getegid()               = 1000 <0.000027>
00:33:13.490372 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/auto/Socket/Socket.so", {st_mode=S_IFREG|0644, st_size=68080, ...}, 0) = 0 <0.000037>
00:33:13.490522 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/auto/Socket/Socket.bs", 0x558a3704a8, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.490686 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/auto/Socket/Socket.so", O_RDONLY|O_CLOEXEC) = 5 <0.000069>
00:33:13.490841 read(5, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0000\3\1\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\33\0\32\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\350\205\0\0\0\0\0\0\350\205\0\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\330\346\0\0\0\0\0\0\330\346\1\0\0\0\0\0\330\346\1\0\0\0\0\0\320\32\0\0\0\0\0\0\330\32\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\350\375\0\0\0\0\0\0\350\375\1\0\0\0\0\0\350\375\1\0\0\0\0\0\320\1\0\0\0\0\0\0\320\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\0\177\0\0\0\0\0\0\0\177\0\0\0\0\0\0\0\177\0\0\0\0\0\0\354\0\0\0\0\0\0\0\354\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\330\346\0\0\0\0\0\0\330\346\1\0\0\0\0\0\330\346\1\0\0\0\0\0(\31\0\0\0\0\0\0(\31\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\273+\243\261a\\\225$\375\342\375-v\233\tr\177\367\246\367\0\0\0\0\2\0\0\0:\0\0\0\1\0\0\0\6\0\0\0\0 \0\0\2\0\0\0\0\0\0\0:\0\0\0a\3\317\243\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\t\0H+\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\26\0\240\1\2\0\0\0\0\0\0\0\0\0\0\0\0\0\30\1\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\264\0\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\341\0\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\353\1\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\201\2\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\367\2\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0<\2\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0e\1\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0 \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\37\1\0\0\22\0\0\0", 832) = 832 <0.000033>
00:33:13.490964 newfstatat(5, "", {st_mode=S_IFREG|0644, st_size=68080, ...}, AT_EMPTY_PATH) = 0 <0.000029>
00:33:13.491195 mmap(NULL, 197040, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f8ff6f000 <0.000055>
00:33:13.491322 mmap(0x7f8ff70000, 131504, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 5, 0) = 0x7f8ff70000 <0.000082>
00:33:13.491475 munmap(0x7f8ff6f000, 4096) = 0 <0.000033>
00:33:13.491576 munmap(0x7f8ff91000, 57776) = 0 <0.000030>
00:33:13.491674 mprotect(0x7f8ff79000, 86016, PROT_NONE) = 0 <0.000045>
00:33:13.491788 mmap(0x7f8ff8e000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 5, 0xe000) = 0x7f8ff8e000 <0.000059>
00:33:13.491978 close(5)                = 0 <0.000028>
00:33:13.492113 mprotect(0x7f8ff8e000, 8192, PROT_READ) = 0 <0.000040>
00:33:13.496219 brk(0x558a670000)       = 0x558a670000 <0.000052>
00:33:13.498439 brk(0x558a692000)       = 0x558a692000 <0.000043>
00:33:13.498589 brk(0x558a68f000)       = 0x558a68f000 <0.000102>
00:33:13.499373 read(4, "guments: <version> <cluster> <config file name>\nReturns: hash (empty if the file does not exist)\n\n=cut\n\nsub read_cluster_conf_file {\n    my ($version, $cluster, $configfile) = @_;\n    my %conf = read_conf_file(cluster_conf_filename($version, $cluster, $configfile));\n\n    if ($version >= 9.4 and $configfile eq 'postgresql.conf') { # merge settings changed by ALTER SYSTEM\n        # data_directory cannot be changed by ALTER SYSTEM\n        my $data_directory = cluster_data_directory($version, $cluster, \\%conf);\n        my %auto_conf = read_conf_file \"$data_directory/postgresql.auto.conf\";\n        foreach my $guc (keys %auto_conf) {\n            next if ($guc eq 'data_directory'); # defend against pg_upgradecluster bug in 200..202\n            $conf{$guc} = $auto_conf{$guc};\n        }\n    }\n\n    return %conf;\n}\n\n\n=head2 get_conf_value\n\n Return parameter from a PostgreSQL configuration file,\n or undef if the parameter does not exist.\n\n Arguments: <version> <cluster> <config file name> <parameter name>\n\n=cut\n\nsub get_conf_value {\n    my %conf = (read_cluster_conf_file $_[0], $_[1], $_[2]);\n    return $conf{$_[3]};\n}\n\n\n=head2 set_conffile_value\n\n Set parameter of a PostgreSQL configuration file.\n\n Arguments: <config file name> <parameter name> <value>\n\n=cut\n\nsub set_conffile_value {\n    my ($fname, $key, $value) = ($_[0], $_[1], quote_conf_value($_[2]));\n    my @lines;\n\n    # read configuration file lines\n    open (F, $fname) or die \"Error: could not open $fname for reading\";\n    push @lines, $_ while (<F>);\n    close F;\n\n    my $found = 0;\n    # first, search for an uncommented setting\n    for (my $i=0; $i <= $#lines; ++$i) {\n\tif ($lines[$i] =~ /^\\s*($key)(\\s*(?:=|\\s)\\s*)\\w+\\b((?:\\s*#.*)?)/i or\n\t    $lines[$i] =~ /^\\s*($key)(\\s*(?:=|\\s)\\s*)'[^']*'((?:\\s*#.*)?)/i) {\n\t    $lines[$i] = \"$1$2$value$3\\n\";\n\t    $found = 1;\n\t    last;\n\t}\n    }\n\n    # now check if the setting exists as a comment; if so, change that instead\n    # of appending\n    if (!$found) {\n\tfor (my $i=0; $i <= $#lines; ++$i) {\n\t    if ($lines[$i] =~ /^\\s*#\\s*($key)(\\s*(?:=|\\s)\\s*)\\w+\\b((?:\\s*#.*)?)$/i or\n\t\t$lines[$i] =~ /^\\s*#\\s*($key)(\\s*(?:=|\\s)\\s*)'[^']*'((?:\\s*#.*)?)$/i) {\n\t\t$lines[$i] = \"$1$2$value$3\\n\";\n\t\t$found = 1;\n\t\tlast;\n\t    }\n\t}\n    }\n\n    # not found anywhere, append it\n    push (@lines, \"$key = $value\\n\") unless $found;\n\n    # write configuration file lines\n    open (F, \">$fname.new\") or die \"Error: could not open $fname.new for writing\";\n    foreach (@lines) {\n\tprint F $_ or die \"writing $fname.new: $!\";\n    }\n    close F;\n\n    # copy permissions\n    my @st = stat $fname or die \"stat: $!\";\n    chown $st[4], $st[5], \"$fname.new\"; # might fail as non-root\n    chmod $st[2], \"$fname.new\" or die \"chmod: $!\";\n\n    rename \"$fname.new\", \"$fname\" or die \"rename $fname.new $fname: $!\";\n}\n\n\n=head2 set_conf_value\n\n Set parameter of a PostgreSQL cluster configuration file.\n\n Arguments: <version> <cluster> <config file name> <parameter name> <value>\n\n=cut\n\nsub set_conf_value {\n    return set_conffile_value(cluster_conf_filename($_[0], $_[1], $_[2]), $_[3], $_[4]);\n}\n\n\n=head2 disable_conffile_value\n\n Disable a parameter in a PostgreSQL configuration file by prepending it\n with a '#'. Appends an optional explanatory comment <reason> if given.\n\n Arguments: <config file name> <parameter name> <reason>\n\n=cut\n\nsub disable_conffile_value {\n    my ($fname, $key, $reason) = @_;\n    my @lines;\n\n    # read configuration file lines\n    open (F, $fname) or die \"Error: could not open $fname for reading\";\n    push @lines, $_ while (<F>);\n    close F;\n\n    my $changed = 0;\n    for (my $i=0; $i <= $#lines; ++$i) {\n\tif ($lines[$i] =~ /^\\s*$key\\s*(?:=|\\s)/i) {\n            $lines[$i] =~ s/^/#/;\n            $lines[$i] =~ s/$/ #$reason/ if $reason;\n            $changed = 1;\n\t    last;\n\t}\n    }\n\n    # write configuration file lines\n    if ($changed) {\n        open (F, \">$fname.new\") or die \"Error: could not open $fname.new for writing\";\n        foreach (@lines) {\n\t    print F $_ or die \"writing $fname.new: $!\";\n        }\n        close F;\n\n\t# copy permissions\n\tmy @st = stat $fname or die \""..., 8192) = 8192 <0.000044>
00:33:13.501126 brk(0x558a6b1000)       = 0x558a6b1000 <0.000047>
00:33:13.501266 brk(0x558a6ae000)       = 0x558a6ae000 <0.000056>
00:33:13.502412 read(4, "fault\n    # to /var/run/postgresql\n    $socketdir = '/var/run/postgresql';\n    my @socketdirstat = stat $socketdir;\n\n    error \"Cannot stat $socketdir\" unless @socketdirstat;\n\n    if ($_[0] && $_[1]) {\n        my $datadir = cluster_data_directory $_[0], $_[1];\n        error \"Invalid data directory for cluster $_[0] $_[1]\" unless $datadir;\n        my @datadirstat = stat $datadir;\n        unless (@datadirstat) {\n            my @p = split '/', $datadir;\n            my $parent = join '/', @p[0..($#p-1)];\n            error \"$datadir is not accessible; please fix the directory permissions ($parent/ should be world readable)\" unless @datadirstat;\n        }\n\n        $socketdir = '/tmp' if $socketdirstat[4] != $datadirstat[4];\n    }\n\n    return $socketdir;\n}\n\n\n=head2 set_cluster_socketdir\n\n Set the socket directory of a particular cluster.\n\n Arguments: <version> <cluster> <directory>\n\n=cut\n\nsub set_cluster_socketdir {\n    set_conf_value $_[0], $_[1], 'postgresql.conf',\n        $_[0] >= 9.3 ? 'unix_socket_directories' : 'unix_socket_directory',\n        $_[2];\n}\n\n\n=head2 get_program_path\n\n Return the path of a program of a particular version.\n\n Arguments: <program name> [<version>]\n\n=cut\n\nsub get_program_path {\n    my ($program, $version) = @_;\n    return '' unless defined $program;\n    $version //= get_newest_version($program);\n    my $path = \"$binroot$version/bin/$program\";\n    ($path) = $path =~ /(.*)/; #untaint\n    return $path if -x $path;\n    return '';\n}\n\n\n=head2 cluster_port_running\n\n Check whether a postgres server is running at the specified port.\n\n Arguments: <version> <cluster> <port>\n\n=cut\n\nsub cluster_port_running {\n    die \"port_running: invalid port $_[2]\" if $_[2] !~ /\\d+/;\n    my $socketdir = get_cluster_socketdir $_[0], $_[1];\n    my $socketpath = \"$socketdir/.s.PGSQL.$_[2]\";\n    return 0 unless -S $socketpath;\n\n    socket(SRV, PF_UNIX, SOCK_STREAM, 0) or die \"socket: $!\";\n    my $running = connect(SRV, sockaddr_un($socketpath));\n    close SRV;\n    return $running ? 1 : 0;\n}\n\n\n=head2 get_cluster_start_conf\n\n Read, verify, and return the current start.conf setting.\n\n Arguments: <version> <cluster>\n Returns: auto | manual | disabled\n\n=cut\n\nsub get_cluster_start_conf {\n    my $start_conf = \"$confroot/$_[0]/$_[1]/start.conf\";\n    if (-e $start_conf) {\n\topen F, $start_conf or error \"Could not open $start_conf: $!\";\n\twhile (<F>) {\n\t    s/#.*$//;\n\t    s/^\\s*//;\n\t    s/\\s*$//;\n\t    next unless $_;\n            close F;\n            return $1 if (/^(auto|manual|disabled)/);\n            error \"Invalid mode in $start_conf, must be one of auto, manual, disabled\";\n\t}\n\tclose F;\n    }\n    return 'auto'; # default\n}\n\n\n=head2 set_cluster_start_conf\n\n Change start.conf setting.\n\n Arguments: <version> <cluster> <value>\n <value> = auto | manual | disabled\n\n=cut\n\nsub set_cluster_start_conf {\n    my ($v, $c, $val) = @_;\n\n    error \"Invalid mode: '$val'\" unless $val eq 'auto' ||\n\t    $val eq 'manual' || $val eq 'disabled';\n\n    my $perms = 0644;\n\n    # start.conf setting\n    my $start_conf = \"$confroot/$_[0]/$_[1]/start.conf\";\n    my $text;\n    if (-e $start_conf) {\n\topen F, $start_conf or error \"Could not open $start_conf: $!\";\n\twhile (<F>) {\n            if (/^\\s*(?:auto|manual|disabled)\\b(.*$)/) {\n                $text .= $val . $1 . \"\\n\";\n            } else {\n                $text .= $_;\n            }\n\t}\n\n        # preserve permissions if it already exists\n        $perms = (stat F)[2];\n        error \"Could not get permissions of $start_conf: $!\" unless $perms;\n\tclose F;\n    } else {\n        $text = \"# Automatic startup configuration\n#   auto: automatically start the cluster\n#   manual: manual startup with pg_ctlcluster/postgresql@.service only\n#   disabled: refuse to start cluster\n# See pg_createcluster(1) for details. When running from systemd,\n# invoke 'systemctl daemon-reload' after editing this file.\n\n$val\n\";\n    }\n\n    open F, '>' . $start_conf or error \"Could not open $start_conf for writing: $!\";\n    chmod $perms, $start_conf;\n    print F $text;\n    close F;\n}\n\n\n=head2 set_cluster_pg_ctl_conf\n\n Change pg_ctl.conf setting.\n\n Arg"..., 8192) = 8192 <0.000039>
00:33:13.503640 brk(0x558a6cf000)       = 0x558a6cf000 <0.000046>
00:33:13.505313 read(4, "rt_running ($v, $c, $result{'port'});\n    }\n\n    if ($result{'pgdata'}) {\n        ($result{'owneruid'}, $result{'ownergid'}) =\n            (stat $result{'pgdata'})[4,5];\n        if ($v >= 12) {\n            $result{'recovery'} = 1 if (-e \"$result{'pgdata'}/recovery.signal\"\n                                     or -e \"$result{'pgdata'}/standby.signal\");\n        } else {\n            $result{'recovery'} = 1 if (-e \"$result{'pgdata'}/recovery.conf\");\n        }\n        my $waldirname = $v >= 10 ? 'pg_wal' : 'pg_xlog';\n        if (-l \"$result{pgdata}/$waldirname\") { # custom wal directory\n            ($result{waldir}) = readlink(\"$result{pgdata}/$waldirname\") =~ /(.*)/; # untaint\n        }\n    }\n    $result{'start'} = get_cluster_start_conf $v, $c;\n\n    # default log file (possibly used only for early startup messages)\n    my $log_symlink = $result{'configdir'} . \"/log\";\n    if (-l $log_symlink) {\n        ($result{'logfile'}) = readlink ($log_symlink) =~ /(.*)/; # untaint\n    } else {\n        $result{'logfile'} = \"/var/log/postgresql/postgresql-$v-$c.log\";\n    }\n\n    return %result;\n}\n\n\n=head2 validate_cluster_owner\n\n Checks if the owner of a cluster is valid, and the owner of the config matches\n the owner of the data directory.\n\n Arguments: cluster_info hash reference\n\n=cut\n\nsub validate_cluster_owner($) {\n    my $info = shift;\n\n    unless ($info->{pgdata}) {\n        error \"Cluster data directory is unknown\";\n    }\n    unless (-d $info->{pgdata}) {\n        error \"$info->{pgdata} is not accessible or does not exist\";\n    }\n    unless (defined $info->{owneruid}) {\n        error \"Could not determine owner of $info->{pgdata}\";\n    }\n    if ($info->{owneruid} == 0) {\n        error \"Data directory $info->{pgdata} must not be owned by root\";\n    }\n    unless (getpwuid $info->{owneruid}) {\n        error \"The cluster is owned by user id $info->{owneruid} which does not exist\";\n    }\n    unless (getgrgid $info->{ownergid}) {\n        error \"The cluster is owned by group id $info->{ownergid} which does not exist\";\n    }\n    # owneruid and configuid need to match, unless configuid is root\n    if (($< == 0 or $> == 0) and $info->{configuid} != 0 and\n            $info->{configuid} != $info->{owneruid}) {\n        my $configowner = (getpwuid $info->{configuid})[0] || \"(unknown)\";\n        my $dataowner = (getpwuid $info->{owneruid})[0];\n        error \"Config owner ($configowner:$info->{configuid}) and data owner ($dataowner:$info->{owneruid}) do not match, and config owner is not root\";\n    }\n}\n\n\n=head2 get_versions\n\n Return an array of all available versions (by binaries and postgresql.conf files)\n\n Arguments: binary to scan for (optional, defaults to postgres), maximum acceptable version (optional)\n\n=cut\n\nsub get_versions {\n    my $program = shift // 'postgres';\n    my $max_version = shift;\n    my %versions = ();\n\n    # enumerate psql versions from /usr/lib/postgresql/* (or /usr/pgsql-*)\n    my $dir = $binroot;\n    #redhat# $dir = '/usr';\n    if (opendir (D, $dir)) {\n\tmy $entry;\n        while (defined ($entry = readdir D)) {\n            next if $entry eq '.' || $entry eq '..';\n            my $pfx = '';\n            #redhat# $pfx = \"pgsql-\";\n            my $version;\n            ($version) = $entry =~ /^$pfx(\\d+\\.?\\d+)$/; # untaint\n            next if ($max_version and $version > $max_version);\n            $versions{$version} = 1 if $version and get_program_path ($program, $version);\n        }\n        closedir D;\n    }\n\n    # enumerate server versions from /etc/postgresql/*\n    if ($program eq 'postgres' and opendir (D, $confroot)) {\n        my $v;\n        while (defined ($v = readdir D)) {\n            next if $v eq '.' || $v eq '..';\n            ($v) = $v =~ /^(\\d+\\.?\\d+)$/; # untaint\n            next unless ($v);\n            next if ($max_version and $v > $max_version);\n\n            if (opendir (C, \"$confroot/$v\")) {\n                my $c;\n                while (defined ($c = readdir C)) {\n                    if (-e \"$confroot/$v/$c/postgresql.conf\") {\n                        $versions{$v} = 1;\n                        last;\n                    "..., 8192) = 8192 <0.000039>
00:33:13.506293 brk(0x558a6f0000)       = 0x558a6f0000 <0.000045>
00:33:13.508199 read(4, "             next;\n\t    }\n\t    if (!cluster_exists $v, $c and $c !~ /^(\\S+):(\\d*)$/) {\n                print \"Warning: $homemapfile line $.: cluster $v/$c does not exist\\n\";\n                next;\n\t    }\n\t    if ($db) {\n\t\tclose MAP;\n\t\treturn ($v, $c, ($db eq \"*\") ? undef : $db);\n\t    } else {\n\t\tprint  \"Warning: ignoring invalid line $. in $homemapfile\\n\";\n\t\tnext;\n\t    }\n\t}\n\tclose MAP;\n    }\n\n    # check global map file\n    if (open MAP, $mapfile) {\n        while (<MAP>) {\n            s/#.*//;\n            next if /^\\s*$/;\n            my ($u,$g,$v,$c,$db) = split;\n            if (!$db) {\n                print  \"Warning: ignoring invalid line $. in $mapfile\\n\";\n                next;\n            }\n\t    if (!version_exists $v) {\n                print \"Warning: $mapfile line $.: version $v does not exist\\n\";\n                next;\n\t    }\n\t    if (!cluster_exists $v, $c and $c !~ /^(\\S+):(\\d*)$/) {\n                print \"Warning: $mapfile line $.: cluster $v/$c does not exist\\n\";\n                next;\n\t    }\n            if (($u eq \"*\" || $u eq $user) && ($g eq \"*\" || $g eq $group)) {\n                close MAP;\n                return ($v,$c, ($db eq \"*\") ? undef : $db);\n            }\n        }\n        close MAP;\n    }\n\n    # if only one cluster exists, use that\n    my $count = 0;\n    my ($last_version, $last_cluster, $defaultport_version, $defaultport_cluster);\n    for my $v (get_versions) {\n\tfor my $c (get_version_clusters $v) {\n\t    my $port = get_cluster_port ($v, $c);\n            $last_version = $v;\n            $last_cluster = $c;\n\t    if ($port == $defaultport) {\n\t\t$defaultport_version = $v;\n\t\t$defaultport_cluster = $c;\n\t    }\n            ++$count;\n\t}\n    }\n    return ($last_version, $last_cluster, undef) if $count == 1;\n\n    if ($count == 0) {\n\t# if there are no local clusters, use latest clients for accessing\n\t# network clusters\n\treturn (get_newest_version('psql'), undef, undef);\n    }\n\n    # more than one cluster exists, return cluster at default port\n    return ($defaultport_version, $defaultport_cluster, undef);\n}\n\n\n=head2 install_file\n\n Copy a file to a destination and setup permissions\n\n Arguments: <source file> <destination file or dir> <uid> <gid> <permissions>\n\n=cut\n\nsub install_file {\n    my ($source, $dest, $uid, $gid, $perm) = @_;\n\n    if (system 'install', '-o', $uid, '-g', $gid, '-m', $perm, $source, $dest) {\n\terror \"install_file: could not install $source to $dest\";\n    }\n}\n\n\n=head2 change_ugid\n\n Change effective and real user and group id. Also activates all auxiliary\n groups the user is in. Exits with an error message if user/group ID cannot\n be changed.\n\n Arguments: <user id> <group id>\n\n=cut\n\nsub change_ugid {\n    my ($uid, $gid) = @_;\n\n    # auxiliary groups\n    my $uname = (getpwuid $uid)[0];\n    prepare_exec;\n    my $groups = \"$gid \" . `/usr/bin/id -G $uname`;\n    restore_exec;\n\n    $) = $groups;\n    $( = $gid;\n    $> = $< = $uid;\n    error 'Could not change user id' if $< != $uid;\n    error 'Could not change group id' if $( != $gid;\n}\n\n\n=head2 system_or_error\n\n Run a command and error out if it exits with a non-zero status.\n\n Arguments: <command ...>\n\n=cut\n\nsub system_or_error {\n    my $ret = system @_;\n    if ($ret) {\n        my $message = \"@_ failed with exit code $ret\";\n        $message .= \": $!\" if ($!);\n        error $message;\n    }\n}\n\n\n=head2 get_db_encoding\n\n Return the encoding of a particular database in a cluster.\n\n This requires access privileges to that database, so this\n function should be called as the cluster owner.\n\n Arguments: <version> <cluster> <database>\n Returns: Encoding or undef if it cannot be determined.\n\n=cut\n\nsub get_db_encoding {\n    my ($version, $cluster, $db) = @_;\n    my $port = get_cluster_port $version, $cluster;\n    my $socketdir = get_cluster_socketdir $version, $cluster;\n    my $psql = get_program_path 'psql', $version;\n    return undef unless ($port && $socketdir && $psql);\n\n    # try to swich to cluster owner\n    prepare_exec 'LC_ALL';\n    $ENV{'LC_ALL'} = 'C';\n    my $orig_euid = $>;\n    $> = (stat (cluster_data_directory $version, $cluster))[4];\n    open PSQL, '"..., 8192) = 8192 <0.000042>
00:33:13.508763 brk(0x558a714000)       = 0x558a714000 <0.000046>
00:33:13.510986 brk(0x558a737000)       = 0x558a737000 <0.000044>
00:33:13.511470 read(4, " $ENV{'LC_ALL'} = 'C';\n    my $result = open (CTRL, '-|', $pg_controldata, (cluster_data_directory $version, $cluster));\n    restore_exec;\n    return undef unless defined $result;\n    my $data = {};\n    while (<CTRL>) {\n\tif (/^(.+?):\\s*(.*)/) {\n            $data->{$1} = $2;\n\t} else {\n            error \"Invalid pg_controldata output: $_\";\n\t}\n    }\n    close CTRL;\n    return $data;\n}\n\n\n=head2 get_cluster_databases\n\n Return an array with all databases of a cluster.\n\n This requires connection privileges to template1, so\n this function should be called as the cluster owner.\n\n Arguments: <version> <cluster>\n Returns: array of database names or undef on error.\n\n=cut\n\nsub get_cluster_databases {\n    my ($version, $cluster) = @_;\n    my $port = get_cluster_port $version, $cluster;\n    my $socketdir = get_cluster_socketdir $version, $cluster;\n    my $psql = get_program_path 'psql', $version;\n    return undef unless ($port && $socketdir && $psql);\n\n    # try to swich to cluster owner\n    prepare_exec 'LC_ALL';\n    $ENV{'LC_ALL'} = 'C';\n    my $orig_euid = $>;\n    $> = (stat (cluster_data_directory $version, $cluster))[4];\n\n    my @dbs;\n    my @fields;\n    if (open PSQL, '-|', $psql, '-h', $socketdir, '-p', $port, '-AXtl') {\n        while (<PSQL>) {\n            chomp;\n            @fields = split '\\|';\n            next if $#fields < 2; # remove access privs which get line broken\n            push (@dbs, $fields[0]);\n        }\n        close PSQL;\n    }\n\n    $> = $orig_euid;\n    restore_exec;\n\n    return $? ? undef : @dbs;\n}\n\n\n=head2 get_file_device\n\n Return the device name a file is stored at.\n\n Arguments: <file path>\n Returns:  device name, or '' if it cannot be determined.\n\n=cut\n\nsub get_file_device {\n    my $dev = '';\n    prepare_exec;\n    my $pid = open3(\\*CHLD_IN, \\*CHLD_OUT, \\*CHLD_ERR, '/bin/df', $_[0]);\n    waitpid $pid, 0; # we simply ignore exit code and stderr\n    while (<CHLD_OUT>) {\n\tif (/^\\/dev/) {\n\t    $dev = (split)[0];\n\t}\n    }\n    restore_exec;\n    close CHLD_IN;\n    close CHLD_OUT;\n    close CHLD_ERR;\n    return $dev;\n}\n\n\n=head2 parse_hba_line\n\n Parse a single pg_hba.conf line.\n\n Arguments: <line>\n Returns: Hash reference (or only line and type==undef for invalid lines)\n\n=over 4\n\n=item *\n\nline -> the verbatim pg_hba line\n\n=item *\n\ntype -> comment, local, host, hostssl, hostnossl, undef\n\n=item *\n\ndb -> database name\n\n=item *\n\nuser -> user name\n\n=item *\n\nmethod -> trust, reject, md5, crypt, password, krb5, ident, pam\n\n=item *\n\nip -> ip address\n\n=item *\n\nmask -> network mask (either a single number as number of bits, or bit mask)\n\n=back\n\n=cut\n\nsub parse_hba_line {\n    my $l = $_[0];\n    chomp $l;\n\n    # comment line?\n    return { 'type' => 'comment', 'line' => $l } if ($l =~ /^\\s*($|#)/);\n\n    my $res = { 'line' => $l };\n    my @tok = split /\\s+/, $l;\n    goto error if $#tok < 3;\n\n    $$res{'type'} = shift @tok;\n    $$res{'db'} = shift @tok;\n    $$res{'user'} = shift @tok;\n\n    # local connection?\n    if ($$res{'type'} eq 'local') {\n\tgoto error if $#tok > 1;\n\tgoto error unless valid_hba_method($tok[0]);\n\t$$res{'method'} = join (' ', @tok);\n\treturn $res;\n    }\n\n    # host connection?\n    if ($$res{'type'} =~ /^host((no)?ssl)?$/) {\n\tmy ($i, $c) = split '/', (shift @tok);\n\tgoto error unless $i;\n\t$$res{'ip'} = $i;\n\n\t# CIDR mask given?\n\tif (defined $c) {\n\t    goto error if $c !~ /^(\\d+)$/;\n\t    $$res{'mask'} = $c;\n\t} else {\n\t    $$res{'mask'} = shift @tok;\n\t}\n\n\tgoto error if $#tok > 1;\n\tgoto error unless valid_hba_method($tok[0]);\n\t$$res{'method'} = join (' ', @tok);\n\treturn $res;\n    }\n\nerror:\n    $$res{'type'} = undef;\n    return $res;\n}\n\n\n=head2 read_pg_hba\n\n Parse given pg_hba.conf file.\n\n Arguments: <pg_hba.conf path>\n Returns: Array with hash refs; for hash contents, see parse_hba_line().\n\n=cut\n\nsub read_pg_hba {\n    open HBA, $_[0] or return undef;\n    my @hba;\n    while (<HBA>) {\n\tmy $r = parse_hba_line $_;\n\tpush @hba, $r;\n    }\n    close HBA;\n    return @hba;\n}\n\n\n=head2 valid_hba_method\n\n Check if hba method is known\n\n Argument: hba method\n Returns: True if method is valid\n\n=cut\n\nsub valid_hba_method {\n    my $metho"..., 8192) = 4251 <0.000037>
00:33:13.511747 brk(0x558a736000)       = 0x558a736000 <0.000068>
00:33:13.513253 read(4, "", 8192)       = 0 <0.000030>
00:33:13.513366 close(4)                = 0 <0.000032>
00:33:13.513602 getuid()                = 1000 <0.000026>
00:33:13.513696 geteuid()               = 1000 <0.000025>
00:33:13.513786 getgid()                = 1000 <0.000025>
00:33:13.513876 getegid()               = 1000 <0.000025>
00:33:13.514961 brk(0x558a758000)       = 0x558a758000 <0.000054>
00:33:13.515128 brk(0x558a755000)       = 0x558a755000 <0.000068>
00:33:13.516265 newfstatat(AT_FDCWD, "/etc/perl/File/Glob.pmc", 0x7ff0cc7ab8, 0) = -1 ENOENT (No such file or directory) <0.000035>
00:33:13.516430 newfstatat(AT_FDCWD, "/etc/perl/File/Glob.pm", 0x7ff0cc7ab8, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.516542 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/File/Glob.pmc", 0x7ff0cc7ab8, 0) = -1 ENOENT (No such file or directory) <0.000031>
00:33:13.516655 newfstatat(AT_FDCWD, "/usr/local/lib/aarch64-linux-gnu/perl/5.36.0/File/Glob.pm", 0x7ff0cc7ab8, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.516765 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/File/Glob.pmc", 0x7ff0cc7ab8, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.516873 newfstatat(AT_FDCWD, "/usr/local/share/perl/5.36.0/File/Glob.pm", 0x7ff0cc7ab8, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.516982 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/File/Glob.pmc", 0x7ff0cc7ab8, 0) = -1 ENOENT (No such file or directory) <0.000032>
00:33:13.517092 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl5/5.36/File/Glob.pm", 0x7ff0cc7ab8, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.517201 newfstatat(AT_FDCWD, "/usr/share/perl5/File/Glob.pmc", 0x7ff0cc7ab8, 0) = -1 ENOENT (No such file or directory) <0.000030>
00:33:13.517310 newfstatat(AT_FDCWD, "/usr/share/perl5/File/Glob.pm", 0x7ff0cc7ab8, 0) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.517443 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/File/Glob.pmc", 0x7ff0cc7ab8, 0) = -1 ENOENT (No such file or directory) <0.000030>
00:33:13.517553 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/File/Glob.pm", {st_mode=S_IFREG|0644, st_size=1540, ...}, 0) = 0 <0.000030>
00:33:13.517675 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/File/Glob.pm", O_RDONLY|O_CLOEXEC) = 4 <0.000045>
00:33:13.517803 ioctl(4, TCGETS, 0x7ff0cc7830) = -1 ENOTTY (Inappropriate ioctl for device) <0.000028>
00:33:13.517908 lseek(4, 0, SEEK_CUR)   = 0 <0.000027>
00:33:13.518025 read(4, "package File::Glob;\n\nuse strict;\nour($DEFAULT_FLAGS);\n\nrequire XSLoader;\n\n# NOTE: The glob() export is only here for compatibility with 5.6.0.\n# csh_glob() should not be used directly, unless you know what you're doing.\n\nour %EXPORT_TAGS = (\n    'glob' => [ qw(\n        GLOB_ABEND\n        GLOB_ALPHASORT\n        GLOB_ALTDIRFUNC\n        GLOB_BRACE\n        GLOB_CSH\n        GLOB_ERR\n        GLOB_ERROR\n        GLOB_LIMIT\n        GLOB_MARK\n        GLOB_NOCASE\n        GLOB_NOCHECK\n        GLOB_NOMAGIC\n        GLOB_NOSORT\n        GLOB_NOSPACE\n        GLOB_QUOTE\n        GLOB_TILDE\n        bsd_glob\n    ) ],\n);\n$EXPORT_TAGS{bsd_glob} = [@{$EXPORT_TAGS{glob}}];\n\nour @EXPORT_OK   = (@{$EXPORT_TAGS{'glob'}}, 'csh_glob');\n\nour $VERSION = '1.37';\n\nsub import {\n    require Exporter;\n    local $Exporter::ExportLevel = $Exporter::ExportLevel + 1;\n    Exporter::import(grep {\n        my $passthrough;\n        if ($_ eq ':case') {\n            $DEFAULT_FLAGS &= ~GLOB_NOCASE()\n        }\n        elsif ($_ eq ':nocase') {\n            $DEFAULT_FLAGS |= GLOB_NOCASE();\n        }\n        elsif ($_ eq ':globally') {\n\t    no warnings 'redefine';\n\t    *CORE::GLOBAL::glob = \\&File::Glob::csh_glob;\n\t}\n        elsif ($_ eq ':bsd_glob') {\n\t    no strict; *{caller.\"::glob\"} = \\&bsd_glob_override;\n            $passthrough = 1;\n\t}\n\telse {\n            $passthrough = 1;\n        }\n        $passthrough;\n    } @_);\n}\n\nXSLoader::load();\n\n$DEFAULT_FLAGS = GLOB_CSH();\nif ($^O =~ /^(?:MSWin32|VMS|os2|riscos)$/) {\n    $DEFAULT_FLAGS |= GLOB_NOCASE();\n}\n\n1;\n__END__\n\n", 8192) = 1540 <0.000034>
00:33:13.518903 lseek(4, 1539, SEEK_SET) = 1539 <0.000029>
00:33:13.519021 lseek(4, 0, SEEK_CUR)   = 1539 <0.000025>
00:33:13.519113 close(4)                = 0 <0.000032>
00:33:13.519336 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/auto/File/Glob/Glob.so", {st_mode=S_IFREG|0644, st_size=68232, ...}, 0) = 0 <0.000035>
00:33:13.519469 newfstatat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/auto/File/Glob/Glob.bs", 0x558a3704a8, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.519606 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/perl-base/auto/File/Glob/Glob.so", O_RDONLY|O_CLOEXEC) = 4 <0.000041>
00:33:13.519724 read(4, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\310\3\1\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\33\0\32\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0DX\0\0\0\0\0\0DX\0\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0 \374\0\0\0\0\0\0 \374\1\0\0\0\0\0 \374\1\0\0\0\0\0$\6\0\0\0\0\0\0(\6\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\260\375\0\0\0\0\0\0\260\375\1\0\0\0\0\0\260\375\1\0\0\0\0\0\360\1\0\0\0\0\0\0\360\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\310P\0\0\0\0\0\0\310P\0\0\0\0\0\0\310P\0\0\0\0\0\0\4\1\0\0\0\0\0\0\4\1\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0 \374\0\0\0\0\0\0 \374\1\0\0\0\0\0 \374\1\0\0\0\0\0\340\3\0\0\0\0\0\0\340\3\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\312-K\200\261-\300\231'\273V\266\3262\244\350\300\3554\230\0\0\0\0\3\0\0\0L\0\0\0\1\0\0\0\6\0\0\0\n\0\0\0\22\0\0\f\0\0\0\0L\0\0\0M\0\0\0C\270\342^:\251 \262\301^\205q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\t\0\30\30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\26\08\2\2\0\0\0\0\0\0\0\0\0\0\0\0\0\347\1\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0=\3\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\204\1\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\261\2\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0 \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\352\2\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0F\0\0\0\"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\302\1\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\1\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 832) = 832 <0.000031>
00:33:13.519861 newfstatat(4, "", {st_mode=S_IFREG|0644, st_size=68232, ...}, AT_EMPTY_PATH) = 0 <0.000028>
00:33:13.519984 mmap(NULL, 197192, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f8ff3f000 <0.000052>
00:33:13.520107 mmap(0x7f8ff40000, 131656, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 4, 0) = 0x7f8ff40000 <0.000072>
00:33:13.520249 munmap(0x7f8ff3f000, 4096) = 0 <0.000033>
00:33:13.520348 munmap(0x7f8ff61000, 57928) = 0 <0.000032>
00:33:13.520446 mprotect(0x7f8ff46000, 102400, PROT_NONE) = 0 <0.000042>
00:33:13.520554 mmap(0x7f8ff5f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 4, 0xf000) = 0x7f8ff5f000 <0.000042>
00:33:13.520700 close(4)                = 0 <0.000026>
00:33:13.520825 mprotect(0x7f8ff5f000, 4096, PROT_READ) = 0 <0.000039>
00:33:13.522304 openat(AT_FDCWD, "/usr/lib/postgresql/", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = 4 <0.000051>
00:33:13.522513 newfstatat(4, "", {st_mode=S_IFDIR|0755, st_size=4096, ...}, AT_EMPTY_PATH) = 0 <0.000029>
00:33:13.522769 getdents64(4, 0x558a73ed10 /* 3 entries */, 32768) = 72 <0.000048>
00:33:13.523016 newfstatat(AT_FDCWD, "/usr/lib/postgresql/16/bin/psql", {st_mode=S_IFREG|0755, st_size=855408, ...}, 0) = 0 <0.000034>
00:33:13.523140 geteuid()               = 1000 <0.000027>
00:33:13.523234 geteuid()               = 1000 <0.000027>
00:33:13.523328 getegid()               = 1000 <0.000027>
00:33:13.523424 getgroups(0, NULL)      = 16 <0.000027>
00:33:13.523566 getgroups(16, [4, 20, 24, 27, 29, 44, 46, 60, 100, 102, 105, 106, 993, 994, 995, 1000]) = 16 <0.000025>
00:33:13.523682 getdents64(4, 0x558a73ed10 /* 0 entries */, 32768) = 0 <0.000027>
00:33:13.523782 close(4)                = 0 <0.000030>
00:33:13.523908 newfstatat(AT_FDCWD, "/usr/lib/postgresql/16", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0 <0.000029>
00:33:13.524050 newfstatat(AT_FDCWD, "/usr/lib/postgresql/16/bin/psql", {st_mode=S_IFREG|0755, st_size=855408, ...}, 0) = 0 <0.000029>
00:33:13.524162 geteuid()               = 1000 <0.000025>
00:33:13.524252 geteuid()               = 1000 <0.000025>
00:33:13.524342 getegid()               = 1000 <0.000025>
00:33:13.524431 getgroups(0, NULL)      = 16 <0.000025>
00:33:13.524522 getgroups(16, [4, 20, 24, 27, 29, 44, 46, 60, 100, 102, 105, 106, 993, 994, 995, 1000]) = 16 <0.000025>
00:33:13.524638 lseek(3, 6444, SEEK_SET) = 6444 <0.000027>
00:33:13.524732 lseek(3, 0, SEEK_CUR)   = 6444 <0.000025>
00:33:13.524830 rt_sigaction(SIGFPE, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, {sa_handler=SIG_IGN, sa_mask=[FPE], sa_flags=SA_RESTART}, 8) = 0 <0.000027>
00:33:13.524943 execve("/usr/lib/postgresql/16/bin/psql", ["/usr/lib/postgresql/16/bin/psql", "-h", "localhost", "-U", "postgres", "-p", "5432", "-d", "sprocketbot", "-c", "select 1"], 0x558a38ca00 /* 22 vars */) = 0 <0.001170>
00:33:13.526334 brk(NULL)               = 0x55ab4d6000 <0.000027>
00:33:13.526501 mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa1ecb000 <0.000037>
00:33:13.526618 faccessat(AT_FDCWD, "/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory) <0.000061>
00:33:13.526819 openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3 <0.000037>
00:33:13.526937 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=65875, ...}, AT_EMPTY_PATH) = 0 <0.000028>
00:33:13.527051 mmap(NULL, 65875, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fa1eba000 <0.000067>
00:33:13.527188 close(3)                = 0 <0.000026>
00:33:13.527318 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libpq.so.5", O_RDONLY|O_CLOEXEC) = 3 <0.000037>
00:33:13.527432 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0X\1\6\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\31\0\30\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\354\362\4\0\0\0\0\0\354\362\4\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0`\314\5\0\0\0\0\0`\314\5\0\0\0\0\0`\314\5\0\0\0\0\0\3343\0\0\0\0\0\0\3605\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\10\364\5\0\0\0\0\0\10\364\5\0\0\0\0\0\10\364\5\0\0\0\0\0P\2\0\0\0\0\0\0P\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\360\205\4\0\0\0\0\0\360\205\4\0\0\0\0\0\360\205\4\0\0\0\0\0\304\17\0\0\0\0\0\0\304\17\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0`\314\5\0\0\0\0\0`\314\5\0\0\0\0\0`\314\5\0\0\0\0\0\2403\0\0\0\0\0\0\2403\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0Qh\336\311?\352\10\361\302x\207\211ztDm\235\\\"\f\0\0\0\0\203\0\0\0\360\0\0\0\20\0\0\0\n\0\0\0\220\334!\1\2\320\21\202\200X\252@\205\220SJ\3\0 \2(f\10\212\2131z\2440\20\2\"\322\0\0\16\200\t4HY\341\324\240+\23(\205!\\X\302\16\f\27\"\35\0p\27\20\2150\0\222z Z-\303\310+\"\22\n&\2428 \1\2320!J\10\26\200\243\20\203eB\342,3G\2\"\22\200@a @\5H$\21\271\25\21\n!K\20\4@\270,\6\2\326P\0\200`\270D\360\0\0\0\361\0\0\0\362\0\0\0\364\0\0\0\366\0\0\0\367\0\0\0\372\0\0\0\0\0\0\0\373\0\0\0\374\0\0\0\376\0\0\0\0\1\0\0\1\1\0\0\2\1\0\0\3\1\0\0\5\1\0\0\0\0\0\0\7\1\0\0\0\0\0\0\n\1\0\0\f\1\0\0\16\1\0\0\0\0\0\0\20\1\0\0\21\1\0\0\22\1\0\0\24\1\0\0\25\1\0\0\27\1\0\0\32\1\0\0\0\0\0\0\33\1\0\0\0\0\0\0\34\1\0\0\37\1\0\0\"\1\0\0%\1\0\0)\1\0\0*\1\0\0\0\0\0\0+\1\0\0,\1\0\0-\1\0\0\0\0\0\0.\1\0\0/\1\0\0000\1\0\0001\1\0\0", 832) = 832 <0.000034>
00:33:13.527553 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=395160, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.527664 mmap(NULL, 459344, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa1e21000 <0.000037>
00:33:13.527769 mmap(0x7fa1e30000, 393808, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa1e30000 <0.000080>
00:33:13.527918 munmap(0x7fa1e21000, 61440) = 0 <0.000032>
00:33:13.528015 munmap(0x7fa1e91000, 592) = 0 <0.000031>
00:33:13.528111 mprotect(0x7fa1e80000, 49152, PROT_NONE) = 0 <0.000066>
00:33:13.528244 mmap(0x7fa1e8c000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x5c000) = 0x7fa1e8c000 <0.000042>
00:33:13.528386 close(3)                = 0 <0.000025>
00:33:13.528483 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libreadline.so.8", O_RDONLY|O_CLOEXEC) = 3 <0.000052>
00:33:13.528610 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\240b\6\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\32\0\31\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0D\t\5\0\0\0\0\0D\t\5\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\0\343\5\0\0\0\0\0\0\343\6\0\0\0\0\0\0\343\6\0\0\0\0\0x~\0\0\0\0\0\0\340\224\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\0\365\5\0\0\0\0\0\0\365\6\0\0\0\0\0\0\365\6\0\0\0\0\0\360\1\0\0\0\0\0\0\360\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\244~\4\0\0\0\0\0\244~\4\0\0\0\0\0\244~\4\0\0\0\0\0L\23\0\0\0\0\0\0L\23\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\0\343\5\0\0\0\0\0\0\343\6\0\0\0\0\0\0\343\6\0\0\0\0\0\0\35\0\0\0\0\0\0\0\35\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\343*\37\0-\226\6\302\3302\274\222\237\23\255\235\212_\1\\\0\0\0\0\t\2\0\0v\0\0\0@\0\0\0\f\0\0\0,0!\0%\0\f@\10  \10A\21f`r\00143Fs\212\v\210!\6D\21Dj\240\2 (FJ\210\3026\240\310\2\210\"\205\236\257\0C\224C\1\1i\n\204\1\200I\333\270\3644\215/\201\4\10\2\0\r\30\6\2,R\211\376\204G\306\244X\214P \316A!1[\3\0&iL`\373\250\22\10\202\7\24\0\2250\322\23646\24\0\2\n\226\26\200\10\0\1,\0!\7,\f\204\35\372\300\331\1\4\3 \220\215\333\5\201\4e$\244\1(\23\3 \0\253\t\266\362\340p\0!\0a\303\"\0\0Q\r#\4\10\256\236\0\222\304\1\10\f\4\201:u\1\250\354j\307z\32a\5\4\6\1\240\200\220\0h\343\n)(4\216\223\20\f\f\202\5N%\n\242\0160\0MC\1\200\21a \0003\f\5\21X\276Ai;Q\314&\0\311&b\201\303\300\0\f\26\204\202@D\3016\261\240\360\231x\260|\0\21\332*\316(\244\210\25a\2\200\200\200\300\r\0016\30\304\3111\4J0  \260z\5FH\260\10\253Q\6\34\316(\320A\21\4\340 \0\0\202DB@R#\n '\204", 832) = 832 <0.000028>
00:33:13.528738 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=420128, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.528848 mmap(NULL, 554976, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa1da8000 <0.000071>
00:33:13.528987 mmap(0x7fa1db0000, 489440, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa1db0000 <0.000058>
00:33:13.529113 munmap(0x7fa1da8000, 32768) = 0 <0.000034>
00:33:13.529212 munmap(0x7fa1e28000, 30688) = 0 <0.000075>
00:33:13.529353 mprotect(0x7fa1e01000, 118784, PROT_NONE) = 0 <0.000041>
00:33:13.529459 mmap(0x7fa1e1e000, 36864, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x5e000) = 0x7fa1e1e000 <0.000056>
00:33:13.529594 mmap(0x7fa1e27000, 2016, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fa1e27000 <0.000098>
00:33:13.529786 close(3)                = 0 <0.000025>
00:33:13.529881 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libm.so.6", O_RDONLY|O_CLOEXEC) = 3 <0.000032>
00:33:13.529988 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\230\1\t\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\33\0\32\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0X\376\7\0\0\0\0\0X\376\7\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0x\375\10\0\0\0\0\0x\375\10\0\0\0\0\0x\375\10\0\0\0\0\0\354\2\0\0\0\0\0\0\370\2\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\210\375\10\0\0\0\0\0\210\375\10\0\0\0\0\0\210\375\10\0\0\0\0\0\0\2\0\0\0\0\0\0\0\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0D\0\0\0\0\0\0\0D\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\340q\7\0\0\0\0\0\340q\7\0\0\0\0\0\340q\7\0\0\0\0\0\274\22\0\0\0\0\0\0\274\22\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0x\375\10\0\0\0\0\0x\375\10\0\0\0\0\0x\375\10\0\0\0\0\0\210\2\0\0\0\0\0\0\210\2\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\270\206\246\1U\221\236=\274\226\371D\324S\314\305\362VGi\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\7\0\0\0\0\0\0\0\0\0\0\0\342\3\0\0\22\0\0\0\200\0\0\0\r\0\0\0\245@\0@AH\20\4*T\4N\2\17u\0J\350\200\"\0a\10\312H`\0\200\0006J@\24\204&\20PA\337\300P\21\2) \20x\202\24\10\0\222\22\0\200(\252\4%@\212`\30\0\2#\0E \20*\2\20\244\tf\215Q\6\212\21\0\0\0\4!\22@\5\01000\324J: \320\0\10\22\1\204iJG\211\f\20\200H \0`(\220\24\n\5\22\2\2\210\0\6\0\10\2@@\10\203\30 \204\5A0E\4 \210#\t\0@B\20@\203!A\0\4`\0\0J\1\t\224\1\200\200\10\0000H2\2\210\10\1\10 D\20\1!\254\r\n\20 \f\2\0\310S\"\320\210\206\0 \0D@\0\20\1\200\200\202\221\0!\206I\2\10\22\0\0)\0R\10\4\202\20\0 \10\t\200d\2\0 \0\0222\1\0\"\0@\4\1V\0\"\10\201R\10\246\34\2\240\200\0J (\206\20\250\24c\35\210\351\21\0\300\20\204\4\1\30\10\0\0\0\4\0\0\0\10\20\0\20H P@\24", 832) = 832 <0.000151>
00:33:13.530225 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=591960, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.530341 mmap(NULL, 655472, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa1d0f000 <0.000038>
00:33:13.530446 mmap(0x7fa1d10000, 589936, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa1d10000 <0.000157>
00:33:13.530701 munmap(0x7fa1d0f000, 4096) = 0 <0.000036>
00:33:13.530807 munmap(0x7fa1da1000, 57456) = 0 <0.000032>
00:33:13.530982 mprotect(0x7fa1d90000, 61440, PROT_NONE) = 0 <0.000049>
00:33:13.531098 mmap(0x7fa1d9f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x8f000) = 0x7fa1d9f000 <0.000049>
00:33:13.531242 close(3)                = 0 <0.000026>
00:33:13.531361 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3 <0.000033>
00:33:13.531471 read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0py\2\0\0\0\0\0@\0\0\0\0\0\0\0P#\31\0\0\0\0\0\0\0\0\0@\08\0\n\0@\0?\0>\0\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0000\2\0\0\0\0\0\0000\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0(\206\25\0\0\0\0\0(\206\25\0\0\0\0\0(\206\25\0\0\0\0\0\33\0\0\0\0\0\0\0\33\0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0|h\30\0\0\0\0\0|h\30\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\300\315\30\0\0\0\0\0\300\315\31\0\0\0\0\0\300\315\31\0\0\0\0\0HI\0\0\0\0\0\0\340\22\1\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\260\373\30\0\0\0\0\0\260\373\31\0\0\0\0\0\260\373\31\0\0\0\0\0\260\1\0\0\0\0\0\0\260\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0p\2\0\0\0\0\0\0p\2\0\0\0\0\0\0p\2\0\0\0\0\0\0D\0\0\0\0\0\0\0D\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0\7\0\0\0\4\0\0\0\300\315\30\0\0\0\0\0\300\315\31\0\0\0\0\0\300\315\31\0\0\0\0\0\20\0\0\0\0\0\0\0\220\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0P\345td\4\0\0\0D\206\25\0\0\0\0\0D\206\25\0\0\0\0\0D\206\25\0\0\0\0\0lh\0\0\0\0\0\0lh\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\300\315\30\0\0\0\0\0\300\315\31\0\0\0\0\0\300\315\31\0\0\0\0\0@2\0\0\0\0\0\0@2\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\088\365\24\327]\2047Z`\322\252\200\257\6\fMf\\\217\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\7\0\0\0\0\0\0\0\0\0\0\0\361\3\0\0\26\0\0\0\0\1\0\0\16\0\0\0@0\22\\\250 \23\1\210\3\346\220\305E\214\0\304\0X\0\7\204 p\302\200\1\r\212\34\301\24\21\200\310D2\10*@\210V<- N\262H&\204\320\216\4\f\0\3\2\16\261\254:\17f\310\200\3003\0\300\fP\t \201\t\224\v$ ($\0\204$Z0\20X\200\312DB(\0\6\200\20\32C\0\250T\200\0IP\4Q\212P\22\4\0$\0\10  \21\20", 832) = 832 <0.000028>
00:33:13.531583 newfstatat(3, "", {st_mode=S_IFREG|0755, st_size=1651472, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.531692 mmap(NULL, 1826976, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa1b51000 <0.000040>
00:33:13.531799 mmap(0x7fa1b60000, 1761440, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa1b60000 <0.000060>
00:33:13.531927 munmap(0x7fa1b51000, 61440) = 0 <0.000031>
00:33:13.532023 munmap(0x7fa1d0f000, 160) = 0 <0.000029>
00:33:13.532117 mprotect(0x7fa1ce7000, 86016, PROT_NONE) = 0 <0.000041>
00:33:13.532265 mmap(0x7fa1cfc000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18c000) = 0x7fa1cfc000 <0.000053>
00:33:13.532399 mmap(0x7fa1d02000, 49312, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fa1d02000 <0.000042>
00:33:13.532535 close(3)                = 0 <0.000119>
00:33:13.532736 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libssl.so.3", O_RDONLY|O_CLOEXEC) = 3 <0.000033>
00:33:13.532843 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0(9\v\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\32\0\31\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\354\254\t\0\0\0\0\0\354\254\t\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\270f\n\0\0\0\0\0\270f\n\0\0\0\0\0\270f\n\0\0\0\0\0@\321\0\0\0\0\0\0\200\321\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0 \347\n\0\0\0\0\0 \347\n\0\0\0\0\0 \347\n\0\0\0\0\0000\2\0\0\0\0\0\0000\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0H\236\10\0\0\0\0\0H\236\10\0\0\0\0\0H\236\10\0\0\0\0\0t(\0\0\0\0\0\0t(\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\270f\n\0\0\0\0\0\270f\n\0\0\0\0\0\270f\n\0\0\0\0\0H\231\0\0\0\0\0\0H\231\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0f,\t\261\307A1\337W1\311eUl\24d\212\377\0L\0\0\0\0\7\1\0\0\r\2\0\0@\0\0\0\f\0\0\0\0\30\221`\224L1\3\4\221 $\2\0E \4\0\10\0\3\n\0\0\210\241H\0\2(8@\21\229\0 @\20 \1\1\2\0\0\6\22\4\26\0\7\0\0\1 h\20\10\200\217E\" \0\30X\1\20\0\2A\0\20\f\4\0\0@H\10&\0\7l`\22`B\0\10\360\200\0011 \200\200E\214\200\242@\4\205H\32\10\200\3\202\200\0\200`\0020N\2\t\10\240\264\t\10\242\302\0\2\20\202\1\1\300\f\304\300Q\200 \232\0\2 \200\4\18T\204@]\"\242`\353@\0\1\340\n\10\0020\20B\262Q`\0\5\20R\0\4\31\3\2\200\t\0 \nw\0b \nA\5$\0\"@\0\244\r\20\2B\2\0\210\0\3H\20\"\0\"@D\21\2327\300\0BA\1\1\300\0F\22\"\0x\300((\30R\2246\210\0`\200\0\301\220\210\200\0@\10\30\5!\22\200H\"`\210 fD\2\0/q T\0D\10 \4\0\200\260\24\4\21\240$\r\2\200\341\340q \10\10\5\36\3\0\4\2\10\0@\201\0020(\2\0\0\300!\10` J\f\0\21T6AB\"\n\311\25\303", 832) = 832 <0.000028>
00:33:13.532970 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=737192, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.533080 mmap(NULL, 800824, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa1a9c000 <0.000035>
00:33:13.533182 mmap(0x7fa1aa0000, 735288, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa1aa0000 <0.000070>
00:33:13.533319 munmap(0x7fa1a9c000, 16384) = 0 <0.000038>
00:33:13.533422 munmap(0x7fa1b54000, 47160) = 0 <0.000039>
00:33:13.533525 mprotect(0x7fa1b3b000, 45056, PROT_NONE) = 0 <0.000044>
00:33:13.533635 mmap(0x7fa1b46000, 57344, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xa6000) = 0x7fa1b46000 <0.000048>
00:33:13.533782 close(3)                = 0 <0.000025>
00:33:13.533878 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libcrypto.so.3", O_RDONLY|O_CLOEXEC) = 3 <0.000032>
00:33:13.533983 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0(\"E\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\32\0\31\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0hV>\0\0\0\0\0hV>\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\360R?\0\0\0\0\0\360R?\0\0\0\0\0\360R?\0\0\0\0\0\10\316\5\0\0\0\0\0\270\377\5\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0P\222D\0\0\0\0\0P\222D\0\0\0\0\0P\222D\0\0\0\0\0 \2\0\0\0\0\0\0 \2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\03066\0\0\0\0\0\03066\0\0\0\0\0\03066\0\0\0\0\0|H\1\0\0\0\0\0|H\1\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\360R?\0\0\0\0\0\360R?\0\0\0\0\0\360R?\0\0\0\0\0\20\255\5\0\0\0\0\0\20\255\5\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\265/\233\31\356\217\224|y1\257i\f\205\322T\v\227\251\v\0\0\0\0\3\20\0\0\230\0\0\0\0\2\0\0\17\0\0\0Y\32X\305M\4\241\300a\0\0\1\0 \5\250\201\0\0\10\30\206\4\240\0\1\0\300\231\0\301\0\201\204\3\21\204\244a\0V\10\254\310\0\213\200\24\203\0\2124\31\3\351\204\10\0$\30\0\2\0050\n\0\1\214\0\0\0\200\2574\364\301\22\10\326\4\211bDE\213R\212\0\34\224>\0@W\0\300%\t\330\\(\fAC\10D\211\20\0\34\0\0\300\2\22\250\21An\230\205\205\1D\10\350\"\36\3\20\0\0\4D\10\4H\16\260\16A\0(\35\3@\22\4\341\262\222\28\200\20P\00043\34\0\200Y\2\350\20 \t\1\1\5\252Dk(\n\16\200M\201\3!B\2013G@\237E\2*@\240`I\4\34\1\0E\314\6@\310\21\304@\"!\20\2)\255\324 \2\1\260a\10\0@\240\200\253$U0\201\204\21 a\10\302\5\34\0\240\21\215\2@\5$\20\4\24\0\2\204\220\1\31\200\2049\5\3002\240\2\200\206\320a\4\204A \7\244\2\20M\2PBLN\240\2403 3d\354\2D&\270\10\20\0\3I H$\0\0C\204\10\4\254\21p\200 2@\4\16d\0\0\20\31\321", 832) = 832 <0.000028>
00:33:13.534096 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=4532392, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.534203 mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa1e2e000 <0.000042>
00:33:13.534319 mmap(NULL, 4608680, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa163a000 <0.000039>
00:33:13.534425 mmap(0x7fa1640000, 4543144, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa1640000 <0.000070>
00:33:13.534563 munmap(0x7fa163a000, 24576) = 0 <0.000038>
00:33:13.534695 munmap(0x7fa1a96000, 37544) = 0 <0.000040>
00:33:13.534804 mprotect(0x7fa1a26000, 61440, PROT_NONE) = 0 <0.000049>
00:33:13.534919 mmap(0x7fa1a35000, 385024, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x3f5000) = 0x7fa1a35000 <0.000048>
00:33:13.535057 mmap(0x7fa1a93000, 8872, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fa1a93000 <0.000037>
00:33:13.535189 close(3)                = 0 <0.000025>
00:33:13.535294 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libgssapi_krb5.so.2", O_RDONLY|O_CLOEXEC) = 3 <0.000036>
00:33:13.535406 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0x\25\5\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\33\0\32\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0h\267\4\0\0\0\0\0h\267\4\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\10\354\4\0\0\0\0\0\10\354\5\0\0\0\0\0\10\354\5\0\0\0\0\08(\0\0\0\0\0\0\20*\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\250\371\4\0\0\0\0\0\250\371\5\0\0\0\0\0\250\371\5\0\0\0\0\0@\2\0\0\0\0\0\0@\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\310%\4\0\0\0\0\0\310%\4\0\0\0\0\0\310%\4\0\0\0\0\0\264\17\0\0\0\0\0\0\264\17\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\10\354\4\0\0\0\0\0\10\354\5\0\0\0\0\0\10\354\5\0\0\0\0\0\370\23\0\0\0\0\0\0\370\23\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\273Kqm\262Y\34\224\327\236^\352\23?2\376N\354=\223\0\0\0\0\203\0\0\0+\1\0\0\20\0\0\0\n\0\0\0\244\0\227I\30\30\0 f\204\300\0\6P \16\4\0\240\2 P\200!\2425\243q\2603D \202\204\31A \7\1\10\230\31 \7\254`@\306\22@\300\1\1\n\"\206`\10\360\0\32\26h\240\202\330\210\0J\0\240\210\31\206\220\1\22M:\"\2\324\200H\254\30P\48\241\3\242<d@I\332\22\202I@\0\210!\0\200\4\f\244\21\23\0\250\214\222\275\1\354N H\324O\2\300- \316+\1\0\0,\1\0\0\0\0\0\0\0\0\0\0-\1\0\0.\1\0\0000\1\0\0003\1\0\0004\1\0\0006\1\0\08\1\0\0\0\0\0\09\1\0\0\0\0\0\0\0\0\0\0:\1\0\0\0\0\0\0<\1\0\0@\1\0\0\0\0\0\0A\1\0\0\0\0\0\0B\1\0\0\0\0\0\0\0\0\0\0C\1\0\0\0\0\0\0D\1\0\0F\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0G\1\0\0H\1\0\0J\1\0\0K\1\0\0L\1\0\0N\1\0\0R\1\0\0T\1\0\0W\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0Y\1\0\0\\\1\0\0]\1\0\0_\1\0\0", 832) = 832 <0.000028>
00:33:13.535518 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=334904, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.535627 mmap(NULL, 464408, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa15ce000 <0.000032>
00:33:13.535726 mmap(0x7fa15d0000, 398872, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa15d0000 <0.000060>
00:33:13.535853 munmap(0x7fa15ce000, 8192) = 0 <0.000033>
00:33:13.535951 munmap(0x7fa1632000, 54808) = 0 <0.000031>
00:33:13.536047 mprotect(0x7fa161c000, 73728, PROT_NONE) = 0 <0.000042>
00:33:13.536154 mmap(0x7fa162e000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4e000) = 0x7fa162e000 <0.000044>
00:33:13.536299 close(3)                = 0 <0.000025>
00:33:13.536395 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libldap-2.5.so.0", O_RDONLY|O_CLOEXEC) = 3 <0.000034>
00:33:13.536502 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\360\6\6\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\32\0\31\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\340\226\5\0\0\0\0\0\340\226\5\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\350\342\5\0\0\0\0\0\350\342\6\0\0\0\0\0\350\342\6\0\0\0\0\0\330\"\0\0\0\0\0\0\210G\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0h\353\5\0\0\0\0\0h\353\6\0\0\0\0\0h\353\6\0\0\0\0\0P\2\0\0\0\0\0\0P\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\230\360\4\0\0\0\0\0\230\360\4\0\0\0\0\0\230\360\4\0\0\0\0\0$\25\0\0\0\0\0\0$\25\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\350\342\5\0\0\0\0\0\350\342\6\0\0\0\0\0\350\342\6\0\0\0\0\0\30\35\0\0\0\0\0\0\30\35\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0eM\337|\267\3338\345\251!\3434\212X\336B-\316T\226\0\0\0\0\t\2\0\0\r\1\0\0@\0\0\0\f\0\0\0P\6\r)\4@\24B\2020\0\300\304\226\252\330\0\200\30\0\201\0@\212\0 \0\232\4\241\340\3\2400\311\"|\3R\270\1\204\0052\n\341\231F\0\1 \2\0 (\10\260\261\0\222\20J\273\10\0D\t\4\10H\4\240\32@\34\244@\"\0\10\305\",\30\224D\212\t&\4 \202\0a\21\0\"H\"H\10\351\251D(\30\"\0\302\0\0\nA\21@J\0@\203\27@I\313H\1\2\222\23\10\202$T\22D@\"\t\"\240\200H\224%b\"@A\0\1\220\0\0 @\200\300\2\1\201\"\4H`@\20\240\0\0\10\32\200%\225\0\306L\305\232\4H\20\2\331\222\1\20D\7\200@\35\20\200\1\"\241P\10X\f\3424\224\0\n\"d\227\203!a\6\0\1\0002\20\302\37\21L\0@.A\227U\20#\10\2>J\0D\3FD\250\20\203\2\200\7\204@@\242\20\2a\200\4h@fI\\\tB\10\200\10\212\4\26\n\6\300\0F`\16{\10R\"\202!h\301\250\0\10\200\10\4H\201J\nB\0\20\20@\0H\10\201B\0X`$\2744[\24&\t\261\0\2\244\0\300@\n\0", 832) = 832 <0.000028>
00:33:13.536628 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=396656, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.536741 mmap(NULL, 535152, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa154d000 <0.000040>
00:33:13.536847 mmap(0x7fa1550000, 469616, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa1550000 <0.000053>
00:33:13.536968 munmap(0x7fa154d000, 12288) = 0 <0.000031>
00:33:13.537065 munmap(0x7fa15c3000, 51824) = 0 <0.000029>
00:33:13.537158 mprotect(0x7fa15aa000, 81920, PROT_NONE) = 0 <0.000035>
00:33:13.537258 mmap(0x7fa15be000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x5e000) = 0x7fa15be000 <0.000048>
00:33:13.537385 mmap(0x7fa15c1000, 6768, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fa15c1000 <0.000042>
00:33:13.537515 close(3)                = 0 <0.000025>
00:33:13.537612 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libtinfo.so.6", O_RDONLY|O_CLOEXEC) = 3 <0.000033>
00:33:13.537720 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\30\6\3\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\33\0\32\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0h\277\2\0\0\0\0\0h\277\2\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0h\310\2\0\0\0\0\0h\310\3\0\0\0\0\0h\310\3\0\0\0\0\0$<\0\0\0\0\0\0X@\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\270\367\2\0\0\0\0\0\270\367\3\0\0\0\0\0\270\367\3\0\0\0\0\0 \2\0\0\0\0\0\0 \2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\320\215\2\0\0\0\0\0\320\215\2\0\0\0\0\0\320\215\2\0\0\0\0\0\364\7\0\0\0\0\0\0\364\7\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0h\310\2\0\0\0\0\0h\310\3\0\0\0\0\0h\310\3\0\0\0\0\0\2307\0\0\0\0\0\0\2307\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\254\212\367\300\260:a\370\266\223\177\224~yY/a\256\303\t\0\0\0\0\7\1\0\0F\0\0\0 \0\0\0\v\0\0\0`\20@ P\304@\200\340EB\204r H\36\0\0\2\0\0\222!\10\215#\4\30B\0\205\202<\222`\304\22\4\n\0\2\200@\10\0\0  ` ( \10\t\22\201\09F\0\20\2\0\20a\0\24\4@\250\200\222XHAP\361\341\220$H\0\32\20\23\300\25@\0\210\200\210\n\261\200\0\0\304\0\0\21@3\0\220\250\20\n\200\rK\304 \0\0\0\2\200A!4\20 a\346\36\256\203\32 \0\200\267\10\0\6\1\0\320\210)\250\0041A@\2\0\34@\202@\3\200\24!@@\4\240\4\300\7\5\10D\265 \200A\0\20\320\320hr@\6(\f\21\301\20\10\3\200\0\0\6\240\5\35\0\324\10\341-N\0050\207\0\240A\200\202@\5\r\3\202\0\10\10\362\4\0\200\10\4 T\4\0<B@a\370\6\225*\200\2\f\2\0JH\1\31\264\304\0\t\0301A\0%\1\0\0\252\260\1F\0\0\0\0\0\0\0\0\0\0\0G\0\0\0I\0\0\0K\0\0\0L\0\0\0M\0\0\0\0\0\0\0\0\0\0\0P\0\0\0R\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0S\0\0\0", 832) = 832 <0.000028>
00:33:13.537832 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=199896, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.537941 mmap(NULL, 329920, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa14ff000 <0.000035>
00:33:13.538042 mmap(0x7fa1500000, 264384, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa1500000 <0.000053>
00:33:13.538163 munmap(0x7fa14ff000, 4096) = 0 <0.000031>
00:33:13.538259 munmap(0x7fa1541000, 59584) = 0 <0.000029>
00:33:13.538365 mprotect(0x7fa152c000, 65536, PROT_NONE) = 0 <0.000039>
00:33:13.538471 mmap(0x7fa153c000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2c000) = 0x7fa153c000 <0.000041>
00:33:13.538610 close(3)                = 0 <0.000031>
00:33:13.538723 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libkrb5.so.3", O_RDONLY|O_CLOEXEC) = 3 <0.000034>
00:33:13.538834 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0 %\16\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\33\0\32\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\30\203\f\0\0\0\0\0\30\203\f\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\320N\r\0\0\0\0\0\320N\r\0\0\0\0\0\320N\r\0\0\0\0\0\30\325\0\0\0\0\0\0\260\327\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\310\370\r\0\0\0\0\0\310\370\r\0\0\0\0\0\310\370\r\0\0\0\0\0P\2\0\0\0\0\0\0P\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\2604\v\0\0\0\0\0\2604\v\0\0\0\0\0\2604\v\0\0\0\0\0L/\0\0\0\0\0\0L/\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\320N\r\0\0\0\0\0\320N\r\0\0\0\0\0\320N\r\0\0\0\0\0000\261\0\0\0\0\0\0000\261\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\361ss9as\300|\263\374\2101\t\17f\7>>.G\0\0\0\0\t\2\0\0\7\1\0\0@\0\0\0\f\0\0\0\342\1\220\20\0\300\321EH\302\0000\243\23Hp\301\24\323\205\5\5\270f!Z\214\30\324$\34\200\240\200\3C\24C(\4L\230\202$\204ZI\211\2\f\0\240\200\0iJC\201\4\10\200 \1\215\10\0C\200\t\2\0!D\200\211\303\0\212\1\22-j0\304\240\25\200\4#\344\2\226\220\20\0\224\t1\326\320\0@\203\263%\6\260Y\211`\10\342\20\3\21\344\25\2+\24c\16\217\4\0\0103\201\1\22\4E\0\24\21\0\0\301 \22\20\202\0\34 db\3`\1 `\0011\7!\221\16\231 \211Aq0\09nR@\0\16@\4\240\0D\4H`\n/j\300pd\262\202 \200 `\222\200\4\372q\250G[r\240\4\20\240\1@E\20\0222\365e\235\230\35\262\201\1\300\10\4\310\200\21C\0BHP\0\2\245\0216\4@:Z\0\4\34\22\202\0`\314\6\2620@\204\0\222FA\0`p\3\251\204P\266%$\20(\245\214B\214p\09@\24\0\0\0\16P#\2204\26\2024 `\0\202\2Q\0\30\224\2\270B\21\0\200\3038\204\25DKp\4\f%\16\10\26\24\301R\0\2", 832) = 832 <0.000028>
00:33:13.538947 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=928736, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.539056 mmap(NULL, 992896, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa140d000 <0.000035>
00:33:13.539158 mmap(0x7fa1410000, 927360, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa1410000 <0.000059>
00:33:13.539284 munmap(0x7fa140d000, 12288) = 0 <0.000033>
00:33:13.539382 munmap(0x7fa14f3000, 50816) = 0 <0.000031>
00:33:13.539478 mprotect(0x7fa14d9000, 45056, PROT_NONE) = 0 <0.000041>
00:33:13.539585 mmap(0x7fa14e4000, 61440, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd4000) = 0x7fa14e4000 <0.000045>
00:33:13.539728 close(3)                = 0 <0.000025>
00:33:13.539823 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libk5crypto.so.3", O_RDONLY|O_CLOEXEC) = 3 <0.000033>
00:33:13.539929 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\370\3\3\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\33\0\32\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\274\263\2\0\0\0\0\0\274\263\2\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0 \361\2\0\0\0\0\0 \361\3\0\0\0\0\0 \361\3\0\0\0\0\0\240\21\0\0\0\0\0\0\250\21\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\10\375\2\0\0\0\0\0\10\375\3\0\0\0\0\0\10\375\3\0\0\0\0\0\20\2\0\0\0\0\0\0\20\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\0{\2\0\0\0\0\0\0{\2\0\0\0\0\0\0{\2\0\0\0\0\0d\7\0\0\0\0\0\0d\7\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0 \361\2\0\0\0\0\0 \361\3\0\0\0\0\0 \361\3\0\0\0\0\0\340\16\0\0\0\0\0\0\340\16\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\370\275\257H\352\250\341?KI\20\335\270J\230\311\365\317\"\267\0\0\0\0a\0\0\0\"\0\0\0\20\0\0\0\n\0\0\0005\4 \0AX2\1 \25i\0\1@\6\322\222F\0@\222\0B\230\204D$\343*S\0\220\2\0\200\220\32\215\0\0\1\200\0\2\0\0020\241\200\0\0\5\2\2@\210\26$\1\201 \0\0\200H\n$@\f\20Q\0\2\"( \"\32\206\20 \v\2\20\25\200\204\305\0Sb\22\"\222\10\5\0\0\2 `\25\0\211\200A\0\4\1` \0\200`\1\2\0\0\10\10@\0B@\0\0\10\r\"\0\0\0#\0\0\0$\0\0\0%\0\0\0\0\0\0\0&\0\0\0*\0\0\0+\0\0\0\0\0\0\0.\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0/\0\0\0\0\0\0\0000\0\0\0002\0\0\0003\0\0\0007\0\0\08\0\0\09\0\0\0;\0\0\0=\0\0\0>\0\0\0?\0\0\0@\0\0\0A\0\0\0B\0\0\0\0\0\0\0E\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0F\0\0\0\0\0\0\0H\0\0\0I\0\0\0J\0\0\0\0\0\0\0\0\0\0\0K\0\0\0L\0\0\0N\0\0\0P\0\0\0\0\0\0\0Q\0\0\0S\0\0\0\0\0\0\0", 832) = 832 <0.000028>
00:33:13.540053 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=199352, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.540161 mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa1e2c000 <0.000041>
00:33:13.540280 mmap(NULL, 328392, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa13bf000 <0.000036>
00:33:13.540382 mmap(0x7fa13c0000, 262856, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa13c0000 <0.000075>
00:33:13.540525 munmap(0x7fa13bf000, 4096) = 0 <0.000032>
00:33:13.540622 munmap(0x7fa1401000, 58056) = 0 <0.000029>
00:33:13.540715 mprotect(0x7fa13ec000, 77824, PROT_NONE) = 0 <0.000037>
00:33:13.540817 mmap(0x7fa13ff000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2f000) = 0x7fa13ff000 <0.000036>
00:33:13.540950 close(3)                = 0 <0.000025>
00:33:13.541047 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libcom_err.so.2", O_RDONLY|O_CLOEXEC) = 3 <0.000033>
00:33:13.541154 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0(\1\1\0\0\0\0\0\0\0\0\0@\08\0\10\0@\0\31\0\30\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0p$\0\0\0\0\0\0p$\0\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0P\374\0\0\0\0\0\0P\374\1\0\0\0\0\0P\374\1\0\0\0\0\0\300\3\0\0\0\0\0\0\370\3\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0`\374\0\0\0\0\0\0`\374\1\0\0\0\0\0`\374\1\0\0\0\0\0\0\2\0\0\0\0\0\0\0\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\0\2\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\2\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0\7\0\0\0\4\0\0\0P\374\0\0\0\0\0\0P\374\1\0\0\0\0\0P\374\1\0\0\0\0\0\0\0\0\0\0\0\0\0\31\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0P\345td\4\0\0\0T \0\0\0\0\0\0T \0\0\0\0\0\0T \0\0\0\0\0\0\304\0\0\0\0\0\0\0\304\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0P\374\0\0\0\0\0\0P\374\1\0\0\0\0\0P\374\1\0\0\0\0\0\260\3\0\0\0\0\0\0\260\3\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\314\210\27sN+]K\f\335\304\337\214A\302\217u\301t#\0\0\0\0\21\0\0\0&\0\0\0\2\0\0\0\7\0\0\0\33\20\5P\0\vD\334\216\10$\t\10\0\214i&\0\0\0)\0\0\0*\0\0\0+\0\0\0\0\0\0\0-\0\0\0.\0\0\0/\0\0\0001\0\0\0\0\0\0\0\0\0\0\0004\0\0\0005\0\0\0007\0\0\0\0\0\0\08\0\0\0\0\0\0\0\23452\36\0\324\272\243\333=\370T\5\246\25\205Y\311e\234\266\301k0\303E\205d?\210l\257\301\2767\33b?,\5)\251\261>\0\177\10L<[\346\232wy\235\23\307\n|4\262\177\"\310\37=)\313\363A\26\364\214\375[\323\371\361\345>\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\t\0\210\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\25\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\0\0g\0\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 832) = 832 <0.000028>
00:33:13.541265 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=67432, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.541373 mmap(NULL, 196680, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa138f000 <0.000031>
00:33:13.541472 mmap(0x7fa1390000, 131144, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa1390000 <0.000052>
00:33:13.541591 munmap(0x7fa138f000, 4096) = 0 <0.000031>
00:33:13.541688 munmap(0x7fa13b1000, 57416) = 0 <0.000029>
00:33:13.541782 mprotect(0x7fa1393000, 114688, PROT_NONE) = 0 <0.000035>
00:33:13.541882 mmap(0x7fa13af000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xf000) = 0x7fa13af000 <0.000038>
00:33:13.542022 close(3)                = 0 <0.000025>
00:33:13.542117 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libkrb5support.so.0", O_RDONLY|O_CLOEXEC) = 3 <0.000033>
00:33:13.542223 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0 \5\1\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\33\0\32\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\274\304\0\0\0\0\0\0\274\304\0\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\370\374\0\0\0\0\0\0\370\374\1\0\0\0\0\0\370\374\1\0\0\0\0\0\360\6\0\0\0\0\0\0\20\10\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0(\375\0\0\0\0\0\0(\375\1\0\0\0\0\0(\375\1\0\0\0\0\0\0\2\0\0\0\0\0\0\0\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\350\247\0\0\0\0\0\0\350\247\0\0\0\0\0\0\350\247\0\0\0\0\0\0t\4\0\0\0\0\0\0t\4\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\370\374\0\0\0\0\0\0\370\374\1\0\0\0\0\0\370\374\1\0\0\0\0\0\10\3\0\0\0\0\0\0\10\3\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\22\274\335\320\2110\5\254\361\245\337\25\215\32$\230\345\22\223c\0\0\0\0a\0\0\0?\0\0\0\20\0\0\0\n\0\0\0A\312\301\2403\32()\200$\10H\4\2\0\0\0\0M\20\5\201\200\22\0\0\0\24\0\4\0@\4\10\v\0\2\214\0\311\200\0\0@\200\10@\1\0\2\2\0\t\240\212%\0\0\0\0\0\0\0\0\306\6Q\21\350\4\0\0\10\277\1\0\1\306\0\320\301\0\0\30\0 <\0\0\0\200\300\2214\30J\1\0\2\20\10\34\0A\1\0\0@(\25\0\34\232\34\20\0\"\2\5\0\0\"\206#0\321\6\26?\0\0\0@\0\0\0\0\0\0\0B\0\0\0\0\0\0\0\0\0\0\0E\0\0\0F\0\0\0G\0\0\0H\0\0\0I\0\0\0\0\0\0\0J\0\0\0L\0\0\0\0\0\0\0N\0\0\0\0\0\0\0P\0\0\0Q\0\0\0\0\0\0\0S\0\0\0T\0\0\0\0\0\0\0V\0\0\0\0\0\0\0W\0\0\0X\0\0\0\0\0\0\0[\0\0\0_\0\0\0`\0\0\0a\0\0\0\0\0\0\0b\0\0\0c\0\0\0\0\0\0\0f\0\0\0\0\0\0\0g\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0h\0\0\0i\0\0\0k\0\0\0l\0\0\0o\0\0\0\0\0\0\0", 832) = 832 <0.000027>
00:33:13.542334 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=68576, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.542447 mmap(NULL, 197896, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa135f000 <0.000032>
00:33:13.542546 mmap(0x7fa1360000, 132360, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa1360000 <0.000060>
00:33:13.542714 munmap(0x7fa135f000, 4096) = 0 <0.000036>
00:33:13.542818 munmap(0x7fa1381000, 58632) = 0 <0.000034>
00:33:13.542917 mprotect(0x7fa136d000, 73728, PROT_NONE) = 0 <0.000044>
00:33:13.543026 mmap(0x7fa137f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xf000) = 0x7fa137f000 <0.000042>
00:33:13.543165 close(3)                = 0 <0.000025>
00:33:13.543263 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/liblber-2.5.so.0", O_RDONLY|O_CLOEXEC) = 3 <0.000037>
00:33:13.543375 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0P\2\1\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\32\0\31\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\360\344\0\0\0\0\0\0\360\344\0\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0(\372\0\0\0\0\0\0(\372\1\0\0\0\0\0(\372\1\0\0\0\0\0\250\6\0\0\0\0\0\0\10\7\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\08\372\0\0\0\0\0\08\372\1\0\0\0\0\08\372\1\0\0\0\0\0 \2\0\0\0\0\0\0 \2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\224\305\0\0\0\0\0\0\224\305\0\0\0\0\0\0\224\305\0\0\0\0\0\0\344\4\0\0\0\0\0\0\344\4\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0(\372\0\0\0\0\0\0(\372\1\0\0\0\0\0(\372\1\0\0\0\0\0\330\5\0\0\0\0\0\0\330\5\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\312r\321\347k\2|\276\302\332!r\343\6/\235\210t\3328\0\0\0\0\203\0\0\0\"\0\0\0\20\0\0\0\n\0\0\0D\31\4\224B\21\210\0\5\10\300@\0\20(\340\205\4 :R\v\22\277\325@\"\240@\300\20\0010(A\30`)\233@\0DH\0\200\204\0\1\1\f\2\22B\31\2RM\n\0P\3\16\n\220\"\24\1\10\1\1(AA\20 r:\340AP\0\0\0\0\0\0\0\0\301!6\4\1\200\320\f\240\0\22\0 \1\tq`\t\32\240\204\r(t\3$\217\0\212a\20P\"@\0\240=@!\0\"\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0'\0\0\0)\0\0\0*\0\0\0,\0\0\0.\0\0\0\0\0\0\0000\0\0\0001\0\0\0002\0\0\0\0\0\0\0004\0\0\0006\0\0\0\0\0\0\0007\0\0\09\0\0\0:\0\0\0<\0\0\0=\0\0\0\0\0\0\0?\0\0\0B\0\0\0D\0\0\0E\0\0\0\0\0\0\0F\0\0\0\0\0\0\0G\0\0\0I\0\0\0J\0\0\0L\0\0\0\0\0\0\0\0\0\0\0P\0\0\0S\0\0\0T\0\0\0U\0\0\0V\0\0\0X\0\0\0Y\0\0\0", 832) = 832 <0.000027>
00:33:13.543498 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=67792, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.543607 mmap(NULL, 196912, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa132f000 <0.000037>
00:33:13.543711 mmap(0x7fa1330000, 131376, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa1330000 <0.000056>
00:33:13.543835 munmap(0x7fa132f000, 4096) = 0 <0.000033>
00:33:13.543932 munmap(0x7fa1351000, 57648) = 0 <0.000034>
00:33:13.544031 mprotect(0x7fa133f000, 65536, PROT_NONE) = 0 <0.000040>
00:33:13.544136 mmap(0x7fa134f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xf000) = 0x7fa134f000 <0.000046>
00:33:13.544278 close(3)                = 0 <0.000025>
00:33:13.544373 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libsasl2.so.2", O_RDONLY|O_CLOEXEC) = 3 <0.000032>
00:33:13.544478 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0x\4\2\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\32\0\31\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\324\243\1\0\0\0\0\0\324\243\1\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\320\370\1\0\0\0\0\0\320\370\2\0\0\0\0\0\320\370\2\0\0\0\0\0x\n\0\0\0\0\0\0X\v\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\370\370\1\0\0\0\0\0\370\370\2\0\0\0\0\0\370\370\2\0\0\0\0\0 \2\0\0\0\0\0\0 \2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\310k\1\0\0\0\0\0\310k\1\0\0\0\0\0\310k\1\0\0\0\0\0\4\6\0\0\0\0\0\0\4\6\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\320\370\1\0\0\0\0\0\320\370\2\0\0\0\0\0\320\370\2\0\0\0\0\0000\7\0\0\0\0\0\0000\7\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\347u\344\321\21\22\211\3565E\300\217N;\20\2318\261\262w\0\0\0\0C\0\0\0M\0\0\0\10\0\0\0\t\0\0\0\345\300h\4$\200\0\3218\22I9\0PB&\23\2*\214\0\1K\232\0@\220$\300\\\244\200\21\10\3\0 @\17@\3603\"l\24\200\0\26\341`\3\0\10\326@\342\22\200\362\20\1\200\6\200M\0\0\0\0\0\0\0N\0\0\0P\0\0\0R\0\0\0S\0\0\0U\0\0\0V\0\0\0W\0\0\0X\0\0\0\0\0\0\0Y\0\0\0[\0\0\0\0\0\0\0^\0\0\0_\0\0\0a\0\0\0b\0\0\0\0\0\0\0e\0\0\0f\0\0\0j\0\0\0\0\0\0\0l\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0q\0\0\0\0\0\0\0v\0\0\0\0\0\0\0y\0\0\0\0\0\0\0z\0\0\0}\0\0\0\0\0\0\0\0\0\0\0\177\0\0\0\0\0\0\0\201\0\0\0\0\0\0\0\203\0\0\0\204\0\0\0\206\0\0\0\210\0\0\0\0\0\0\0\211\0\0\0\0\0\0\0\212\0\0\0\214\0\0\0\215\0\0\0\216\0\0\0\0\0\0\0\220\0\0\0\0\0\0\0\222\0\0\0\0\0\0\0\223\0\0\0\0\0\0\0\224\0\0\0\225\0\0\0\0\0\0\0", 832) = 832 <0.000027>
00:33:13.544588 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=133880, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.544695 mmap(NULL, 263208, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa12ef000 <0.000038>
00:33:13.544801 mmap(0x7fa12f0000, 197672, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa12f0000 <0.000061>
00:33:13.544930 munmap(0x7fa12ef000, 4096) = 0 <0.000034>
00:33:13.545029 munmap(0x7fa1321000, 58408) = 0 <0.000034>
00:33:13.545127 mprotect(0x7fa130b000, 81920, PROT_NONE) = 0 <0.000044>
00:33:13.545237 mmap(0x7fa131f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1f000) = 0x7fa131f000 <0.000049>
00:33:13.545381 close(3)                = 0 <0.000025>
00:33:13.545475 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libgnutls.so.30", O_RDONLY|O_CLOEXEC) = 3 <0.000033>
00:33:13.545581 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\37#\0\0\0\0\0\0\0\0\0@\08\0\10\0@\0\33\0\32\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\374.!\0\0\0\0\0\374.!\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\370\364!\0\0\0\0\0\370\364\"\0\0\0\0\0\370\364\"\0\0\0\0\0\350(\1\0\0\0\0\0HZ\1\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\370\324\"\0\0\0\0\0\370\324#\0\0\0\0\0\370\324#\0\0\0\0\0\220\2\0\0\0\0\0\0\220\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\0\2\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\2\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0\7\0\0\0\4\0\0\0\370\364!\0\0\0\0\0\370\364\"\0\0\0\0\0\370\364\"\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\10\0\0\0\0\0\0\0P\345td\4\0\0\0\360X\36\0\0\0\0\0\360X\36\0\0\0\0\0\360X\36\0\0\0\0\0<W\0\0\0\0\0\0<W\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\370\364!\0\0\0\0\0\370\364\"\0\0\0\0\0\370\364\"\0\0\0\0\0\10\v\1\0\0\0\0\0\10\v\1\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0i0'\356\177\23\250\261\355[d\274\22\257\266\20!6\17\251\0\0\0\0\7\4\0\0\3\2\0\0\200\0\0\0\r\0\0\0)\3\21\2440\220\250\212$\v\240\275\311F\204i\22\0\f\206\344\202\304\21\375\2\10l7\200\343[\0\31X\200\200\1\240&\344\33\1\224\266@\3\316\255 \234\250\4,\v\t\23\0\225\2`\214\0\"v\3\213\200\250\0\20\311\f\211\0$P\214\244&&\311\30\5\32\0\2/\0\204\30h+\205\0\326%\2J\240\22\201\4.$+\2\21\4\200\245\1[R\340\4\0\4\241\0\202\0\200\0@r\204\16J\1M1\301*)gLh@!\24p\0\270\210\2460\0\201h\19b\2149@\223D\1\1\240\300\0`A\242\0\211!\205\20\202\24\321n\0$\2i\354\3\206\20\220$h\342D\314\2\202d!\200\"\205\350\3\271\200\3\24\20X\0\212\300b\26I(\4\200\16\271@\20\302\340\244\306\48\221\5\4$\2\10\200\10\4\ta\233\300@\301\32\22\271~\0\1\24\200\230\202\0231\35\345RrB\360\204 \240\240\n0\352\316", 832) = 832 <0.000028>
00:33:13.545709 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=2303440, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.545816 mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa1e2a000 <0.000043>
00:33:13.545932 mmap(NULL, 2445120, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa109b000 <0.000042>
00:33:13.546040 mmap(0x7fa10a0000, 2379584, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa10a0000 <0.000057>
00:33:13.546165 munmap(0x7fa109b000, 20480) = 0 <0.000033>
00:33:13.546263 munmap(0x7fa12e5000, 44864) = 0 <0.000032>
00:33:13.546359 mprotect(0x7fa12b3000, 114688, PROT_NONE) = 0 <0.000041>
00:33:13.546465 mmap(0x7fa12cf000, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x21f000) = 0x7fa12cf000 <0.000048>
00:33:13.546590 mmap(0x7fa12e2000, 12096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fa12e2000 <0.000056>
00:33:13.546745 close(3)                = 0 <0.000025>
00:33:13.546859 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libkeyutils.so.1", O_RDONLY|O_CLOEXEC) = 3 <0.000035>
00:33:13.546970 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0(\1\1\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\31\0\30\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0|5\0\0\0\0\0\0|5\0\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0X\374\0\0\0\0\0\0X\374\1\0\0\0\0\0X\374\1\0\0\0\0\0\260\3\0\0\0\0\0\0\270\3\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0h\374\0\0\0\0\0\0h\374\1\0\0\0\0\0h\374\1\0\0\0\0\0 \2\0\0\0\0\0\0 \2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\270,\0\0\0\0\0\0\270,\0\0\0\0\0\0\270,\0\0\0\0\0\0\224\1\0\0\0\0\0\0\224\1\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0X\374\0\0\0\0\0\0X\374\1\0\0\0\0\0X\374\1\0\0\0\0\0\250\3\0\0\0\0\0\0\250\3\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\352\0264\2611\200\340\22o7\343(\225\10\1:\31\246\23\323\0\0\0\0%\0\0\0\32\0\0\0\10\0\0\0\t\0\0\0\0\0\0\200\0\20@\2\1\0\202\22\4\4@\0\200\0@\10\0\0@\0\10\0\0\10\270@\0020Z\210\201'\4\2\220R\10\341\377\30\0\340\2YQP\22\200 \0\t\0P\200\0\10@\221\0d\32\0\0\0\34\0\0\0\0\0\0\0\35\0\0\0\36\0\0\0 \0\0\0\0\0\0\0\0\0\0\0!\0\0\0#\0\0\0(\0\0\0*\0\0\0+\0\0\0,\0\0\0/\0\0\0002\0\0\0005\0\0\0006\0\0\08\0\0\0:\0\0\0\0\0\0\0\0\0\0\0=\0\0\0\0\0\0\0?\0\0\0\0\0\0\0\0\0\0\0@\0\0\0C\0\0\0E\0\0\0G\0\0\0I\0\0\0\0\0\0\0J\0\0\0K\0\0\0N\0\0\0P\0\0\0\266,F\277\5i$ \177\37\274\315\215\211\343\221b\256\376\16#\241?\220m\337\16\201(yRU\345\306\232\217L\21:\347\206\266\20m6\3621\30\30s2\210\333\6*\312\16/G\315\207\235\26?m\35\361\230Q\21:\347P\21:\347P\271\336\10\0013\206\360v\0\34\37\0\237\224\240S\21:\347R\21:\347\236#\307\2q\257\351\\", 832) = 832 <0.000028>
00:33:13.547095 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=67432, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.547204 mmap(NULL, 196624, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa106f000 <0.000043>
00:33:13.547315 mmap(0x7fa1070000, 131088, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa1070000 <0.000058>
00:33:13.547441 munmap(0x7fa106f000, 4096) = 0 <0.000033>
00:33:13.547540 munmap(0x7fa1091000, 57360) = 0 <0.000034>
00:33:13.547638 mprotect(0x7fa1074000, 110592, PROT_NONE) = 0 <0.000047>
00:33:13.547751 mmap(0x7fa108f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xf000) = 0x7fa108f000 <0.000048>
00:33:13.547889 close(3)                = 0 <0.000025>
00:33:13.547987 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libresolv.so.2", O_RDONLY|O_CLOEXEC) = 3 <0.000033>
00:33:13.548093 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\210\3\1\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\34\0\33\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\34\305\0\0\0\0\0\0\34\305\0\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\10\366\0\0\0\0\0\0\10\366\1\0\0\0\0\0\10\366\1\0\0\0\0\08\f\0\0\0\0\0\0\3603\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\200\375\0\0\0\0\0\0\200\375\1\0\0\0\0\0\200\375\1\0\0\0\0\0\0\2\0\0\0\0\0\0\0\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0D\0\0\0\0\0\0\0D\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\270\261\0\0\0\0\0\0\270\261\0\0\0\0\0\0\270\261\0\0\0\0\0\0\214\2\0\0\0\0\0\0\214\2\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\10\366\0\0\0\0\0\0\10\366\1\0\0\0\0\0\10\366\1\0\0\0\0\0\370\t\0\0\0\0\0\0\370\t\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\271\357CQ\vt/j\330%2\222\322\30I\306\374(\370]\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\7\0\0\0\0\0\0\0\0\0\0\0\207\0\0\0A\0\0\0\10\0\0\0\t\0\0\0\10\0\310\240,R \10\201\0\22\225\201\5\344\222\202\300\200\0B\1 \1\4 \230\0000\220\25T\0\302\200B\200\204\20\10\0X\10\26\7\23\4\3\2\fD\0010\222\0\2\2E\4\f$\235:\34\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0A\0\0\0B\0\0\0\0\0\0\0\0\0\0\0D\0\0\0E\0\0\0\0\0\0\0F\0\0\0G\0\0\0H\0\0\0J\0\0\0\0\0\0\0K\0\0\0\0\0\0\0L\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0M\0\0\0N\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0O\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0P\0\0\0Q\0\0\0\0\0\0\0R\0\0\0T\0\0\0\0\0\0\0U\0\0\0\0\0\0\0V\0\0\0W\0\0\0X\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Z\0\0\0\0\0\0\0\\\0\0\0]\0\0\0", 832) = 832 <0.000028>
00:33:13.548203 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=68232, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.548316 mmap(NULL, 207352, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa103d000 <0.000038>
00:33:13.548421 mmap(0x7fa1040000, 141816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa1040000 <0.000066>
00:33:13.548554 munmap(0x7fa103d000, 12288) = 0 <0.000034>
00:33:13.548653 munmap(0x7fa1063000, 51704) = 0 <0.000032>
00:33:13.548749 mprotect(0x7fa104d000, 73728, PROT_NONE) = 0 <0.000045>
00:33:13.548860 mmap(0x7fa105f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xf000) = 0x7fa105f000 <0.000050>
00:33:13.548988 mmap(0x7fa1061000, 6648, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fa1061000 <0.000037>
00:33:13.549124 close(3)                = 0 <0.000025>
00:33:13.549230 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libp11-kit.so.0", O_RDONLY|O_CLOEXEC) = 3 <0.000033>
00:33:13.549337 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\240\227\24\0\0\0\0\0\0\0\0\0@\08\0\10\0@\0\33\0\32\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\320a\22\0\0\0\0\0\320a\22\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\20]\23\0\0\0\0\0\20]\23\0\0\0\0\0\20]\23\0\0\0\0\0`9\1\0\0\0\0\0\330>\1\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\210\367\23\0\0\0\0\0\210\367\23\0\0\0\0\0\210\367\23\0\0\0\0\0000\2\0\0\0\0\0\0000\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\0\2\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\2\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0\7\0\0\0\4\0\0\0\20]\23\0\0\0\0\0\20]\23\0\0\0\0\0\20]\23\0\0\0\0\0\0\0\0\0\0\0\0\0\20\2\0\0\0\0\0\0\20\0\0\0\0\0\0\0P\345td\4\0\0\0X\0\17\0\0\0\0\0X\0\17\0\0\0\0\0X\0\17\0\0\0\0\0\304\236\0\0\0\0\0\0\304\236\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\20]\23\0\0\0\0\0\20]\23\0\0\0\0\0\20]\23\0\0\0\0\0\360\242\0\0\0\0\0\0\360\242\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\203t\275\347\243H\242\311\377\370\211E\27\267\236\212\2061\350\t\0\0\0\0a\0\0\0n\0\0\0\20\0\0\0\n\0\0\0\0D0\320\10\0\3\214\203 \202\0\0\2\4R\6\1\fE\2\0\204\21 \1\1\f\0\0\0\1(\0 0\220@! \3\226\24\4@\0E $\210@ \t$ \4U\10\201 .\"A\n)\300\22\2\0\0@\0\200\f\0\10\0@\0\0004\0\24\210\0\0\0\0\0& !\f\2\200\2!\33D  \2 T\10`\0040\0\210\0\222(\0\252\t\0\0H\2EB \210\1\n\240\1n\0\0\0\0\0\0\0\0\0\0\0q\0\0\0s\0\0\0\0\0\0\0u\0\0\0\0\0\0\0\0\0\0\0w\0\0\0y\0\0\0z\0\0\0\0\0\0\0\0\0\0\0}\0\0\0\177\0\0\0\201\0\0\0\0\0\0\0\202\0\0\0\203\0\0\0\204\0\0\0\205\0\0\0\0\0\0\0\207\0\0\0\210\0\0\0\212\0\0\0\214\0\0\0\220\0\0\0\0\0\0\0\222\0\0\0\0\0\0\0\225\0\0\0\226\0\0\0\227\0\0\0", 832) = 832 <0.000028>
00:33:13.549449 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=1351264, ...}, AT_EMPTY_PATH) = 0 <0.000028>
00:33:13.549558 mmap(NULL, 1416168, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa0ee6000 <0.000034>
00:33:13.549660 mmap(0x7fa0ef0000, 1350632, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa0ef0000 <0.000060>
00:33:13.549787 munmap(0x7fa0ee6000, 40960) = 0 <0.000034>
00:33:13.549887 munmap(0x7fa103a000, 23528) = 0 <0.000033>
00:33:13.549985 mprotect(0x7fa1017000, 57344, PROT_NONE) = 0 <0.000043>
00:33:13.550095 mmap(0x7fa1025000, 86016, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x135000) = 0x7fa1025000 <0.000041>
00:33:13.550241 close(3)                = 0 <0.000025>
00:33:13.550339 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libidn2.so.0", O_RDONLY|O_CLOEXEC) = 3 <0.000035>
00:33:13.550448 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\210\1\3\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\32\0\31\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\320\334\2\0\0\0\0\0\320\334\2\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\0\373\2\0\0\0\0\0\0\373\3\0\0\0\0\0\0\373\3\0\0\0\0\0X\5\0\0\0\0\0\0h\5\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0h\373\2\0\0\0\0\0h\373\3\0\0\0\0\0h\373\3\0\0\0\0\0000\2\0\0\0\0\0\0000\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\30\306\2\0\0\0\0\0\30\306\2\0\0\0\0\0\30\306\2\0\0\0\0\0,\3\0\0\0\0\0\0,\3\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\0\373\2\0\0\0\0\0\0\373\3\0\0\0\0\0\0\373\3\0\0\0\0\0\0\5\0\0\0\0\0\0\0\5\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\270]f?\357d\224$$F\204i,\254(\370\265Y\343\332\0\0\0\0\21\0\0\0A\0\0\0\2\0\0\0\7\0\0\0:\4\340fC\200\32\2 \10\22%<\246\0HA\0\0\0\0\0\0\0B\0\0\0C\0\0\0D\0\0\0E\0\0\0F\0\0\0H\0\0\0J\0\0\0L\0\0\0M\0\0\0O\0\0\0P\0\0\0Q\0\0\0\0\0\0\0T\0\0\0V\0\0\0\213<O.\227B\36\347\313B\36\347\343r\340\22\27s\340\22\204wi\30\205\314\321\362\320H\265\362\335\267\3063\34B\265\362\241\30\255\30\355\21\255\30\264@a\200!\355\3523\325\345\376\331\231A\265\362j\377qdh\21\255\30Y\21\255\30\324\375p\20[rq\25\24\20\263\3623\17\367\221\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\n\0\270\31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\26\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\5\1\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\16\3\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\227\1\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 832) = 832 <0.000027>
00:33:13.550570 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=198664, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.550754 mmap(NULL, 327784, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa0e9f000 <0.000039>
00:33:13.550866 mmap(0x7fa0ea0000, 262248, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa0ea0000 <0.000063>
00:33:13.550999 munmap(0x7fa0e9f000, 4096) = 0 <0.000035>
00:33:13.551100 munmap(0x7fa0ee1000, 57448) = 0 <0.000033>
00:33:13.551199 mprotect(0x7fa0ece000, 69632, PROT_NONE) = 0 <0.000042>
00:33:13.551308 mmap(0x7fa0edf000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2f000) = 0x7fa0edf000 <0.000047>
00:33:13.551452 close(3)                = 0 <0.000027>
00:33:13.551554 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libunistring.so.2", O_RDONLY|O_CLOEXEC) = 3 <0.000035>
00:33:13.551664 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0x\1\33\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\31\0\30\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\310\212\32\0\0\0\0\0\310\212\32\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0p\307\32\0\0\0\0\0p\307\33\0\0\0\0\0p\307\33\0\0\0\0\0\3508\0\0\0\0\0\08A\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\310\360\32\0\0\0\0\0\310\360\33\0\0\0\0\0\310\360\33\0\0\0\0\0\0\2\0\0\0\0\0\0\0\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\344\f\32\0\0\0\0\0\344\f\32\0\0\0\0\0\344\f\32\0\0\0\0\0\204\22\0\0\0\0\0\0\204\22\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0p\307\32\0\0\0\0\0p\307\33\0\0\0\0\0p\307\33\0\0\0\0\0\2208\0\0\0\0\0\0\2208\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0v:\303Q\215\2o\202Z\356\270\200\221NA]\262\22f\273\0\0\0\0\t\2\0\0C\0\0\0@\0\0\0\f\0\0\0\354\17\2\3111@\f(\340\1L\312\20\224\2\24\340C\200\324\0\0\0\204I\200\26@\f\30@\30\"\210&P\1\10\202`\201\0$\200\310\1\0\2p\26 \0\0\f4\20\204!A\1;\204\304\200L\20\2\20@;\21\203\26^\345A\0T@\f\210\6}NJ\24\203\0\204\213\5@\0101\08D\0\200\342\2a,\fB\200K\25\301 \t\211\f\220@\0A\245\"\10Yc\212\30\0\200\200PDdI\0011+\201\"\200\10\0iB\24A\23\31\0071\5\34\303V@\242\362\240\304\5J\n\254H B\2\200\5@\4\0p\230\4X\10\340\3\"a\0062\27\235E\240\204\236\4d\2444\1C\323\242P\0\30\260\20\21\320\260\205\20\0`\1\20ha\0\202K\3/\23d\201XH\221\4\2767\316:xQBNy\320C\10\21\24`\374\204Q\2\300\321\"A\211\242\264\0\210\243\n\3434`\200\2tP\v\n\303\23\t \20\0\200\2\0   kd\202\201?\n\250H#G\240\221\f\241\2\225\202\0\1Y&\332&\224 \31\" \200\0\1@\312H\n$\200\2x\264\t@0\342S\t\201", 832) = 832 <0.000030>
00:33:13.551781 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=1771448, ...}, AT_EMPTY_PATH) = 0 <0.000028>
00:33:13.551892 mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa1e28000 <0.000041>
00:33:13.552008 mmap(NULL, 1902760, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa0ccf000 <0.000039>
00:33:13.552115 mmap(0x7fa0cd0000, 1837224, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa0cd0000 <0.000062>
00:33:13.552246 munmap(0x7fa0ccf000, 4096) = 0 <0.000031>
00:33:13.552343 munmap(0x7fa0e91000, 59560) = 0 <0.000030>
00:33:13.552439 mprotect(0x7fa0e79000, 77824, PROT_NONE) = 0 <0.000036>
00:33:13.552542 mmap(0x7fa0e8c000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1ac000) = 0x7fa0e8c000 <0.000036>
00:33:13.552692 close(3)                = 0 <0.000027>
00:33:13.552793 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libtasn1.so.6", O_RDONLY|O_CLOEXEC) = 3 <0.000036>
00:33:13.552906 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\08\1\2\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\32\0\31\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\220\25\1\0\0\0\0\0\220\25\1\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\360\362\1\0\0\0\0\0\360\362\2\0\0\0\0\0\360\362\2\0\0\0\0\0\34\r\0\0\0\0\0\0\310\16\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\270\373\1\0\0\0\0\0\270\373\2\0\0\0\0\0\270\373\2\0\0\0\0\0 \2\0\0\0\0\0\0 \2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\250\371\0\0\0\0\0\0\250\371\0\0\0\0\0\0\250\371\0\0\0\0\0\0L\3\0\0\0\0\0\0L\3\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\360\362\1\0\0\0\0\0\360\362\2\0\0\0\0\0\360\362\2\0\0\0\0\0\20\r\0\0\0\0\0\0\20\r\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0l\270:\16\271'\21\252j\251\356}\240#+\343\232\263(;\0\0\0\0%\0\0\0,\0\0\0\4\0\0\0\10\0\0\0\10\4\245|D\230\331$\201AQ\0 \0\22\f\304\201\211b\331K\212\0020\n\35!\0020@\10,\0\0\0-\0\0\0.\0\0\0/\0\0\0000\0\0\0002\0\0\0005\0\0\08\0\0\0\0\0\0\09\0\0\0:\0\0\0;\0\0\0<\0\0\0>\0\0\0\0\0\0\0\0\0\0\0?\0\0\0\0\0\0\0A\0\0\0\0\0\0\0B\0\0\0D\0\0\0F\0\0\0G\0\0\0H\0\0\0I\0\0\0J\0\0\0K\0\0\0M\0\0\0N\0\0\0O\0\0\0\0\0\0\0R\0\0\0T\0\0\0U\0\0\0\0\0\0\0V\0\0\0\207\347\321p3\322\275\303\217\351\210J\305{\246O,]\215\10\323\235(\302\210\371j\313.\233\211\2621W\326gz\207\225f\324a5\250\323\311\215H\37w\254l\355vF9e{HJ\321\213y\3536\312\306)\221dj\367OH\361H\236\302\262\312+C|q\25bE\230\234`\376\212\23p@A\34\272\262\312\247\7\34\326\227\331\4\202\241\331.\303u\2616$\221g@A/\346@\353\330\220y\361\305mW\327\253\250\227\211\33\275<\227", 832) = 832 <0.000029>
00:33:13.553020 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=133048, ...}, AT_EMPTY_PATH) = 0 <0.000028>
00:33:13.553131 mmap(NULL, 262584, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa0c8f000 <0.000037>
00:33:13.553238 mmap(0x7fa0c90000, 197048, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa0c90000 <0.000060>
00:33:13.553366 munmap(0x7fa0c8f000, 4096) = 0 <0.000034>
00:33:13.553467 munmap(0x7fa0cc1000, 57784) = 0 <0.000035>
00:33:13.553568 mprotect(0x7fa0ca2000, 118784, PROT_NONE) = 0 <0.000043>
00:33:13.553679 mmap(0x7fa0cbf000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1f000) = 0x7fa0cbf000 <0.000042>
00:33:13.553817 close(3)                = 0 <0.000027>
00:33:13.553918 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libnettle.so.8", O_RDONLY|O_CLOEXEC) = 3 <0.000035>
00:33:13.554028 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\210\1\5\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\32\0\31\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260z\4\0\0\0\0\0\260z\4\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0\370\344\4\0\0\0\0\0\370\344\5\0\0\0\0\0\370\344\5\0\0\0\0\0`\33\0\0\0\0\0\0h\33\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\20\365\4\0\0\0\0\0\20\365\5\0\0\0\0\0\20\365\5\0\0\0\0\0 \2\0\0\0\0\0\0 \2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\f\35\4\0\0\0\0\0\f\35\4\0\0\0\0\0\f\35\4\0\0\0\0\0\234\20\0\0\0\0\0\0\234\20\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\370\344\4\0\0\0\0\0\370\344\5\0\0\0\0\0\370\344\5\0\0\0\0\0\10\33\0\0\0\0\0\0\10\33\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\313\356\253\30!\376\310\375\304\27\256\323R\362\232! \221\230.\0\0\0\0\t\2\0\0\32\0\0\0@\0\0\0\f\0\0\0\1\f\1\0\20\0\1\211\0\0\r\250\f\0\20H\16\20\21\6\205\1\200\225\20\0*\10\220\210\10\f \0\201\0P\1\t\200P\t\211\7\201@\214\240\"K!,z\30D\202\n@h\0\v\3\20\22\0\0\1\0\202\0\0\20F\5\1\0\3K\310\300!1\240\0%\0\0HX\f\341\f\0@\109H\np\0C\303 \10 \0\5\23#d\v\"F(B !(@\220\2L,\203\20\2\330\321\24\0\4\20\36\30m\312\0\304\22\20\10\0`\200\0\23\2\24\10\10i\22\251\231\200\2\31\1\272\201\20\251h@\f\2b\10H\32\205\25\"@\0\222P\244\2\244  l\240\2\4\4\22\206B)\212\220\3\210\356\4\26\16HI\1i\4!\221\204P\2\n\1\0\10\205\2@\0\4@\25\0\30\0\210\0\202\0P\220\f!\4\10\230\4\0\0\6\1$@`f\202\0H\220A\2$\"\2\10(\211\0\1\23\0\240\36\201\0\4\0\n\4\2J\0\0 \24@\320\240b\0\0T\10B\0L\362`\30JA(\310\20\0\10$Ix\0\0A\214`\31\0\v\0\16\0\0B\10*\10\30\212\3B\6\204\0", 832) = 832 <0.000029>
00:33:13.554156 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=329736, ...}, AT_EMPTY_PATH) = 0 <0.000028>
00:33:13.554268 mmap(NULL, 458848, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa0c1f000 <0.000037>
00:33:13.554373 mmap(0x7fa0c20000, 393312, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa0c20000 <0.000067>
00:33:13.554509 munmap(0x7fa0c1f000, 4096) = 0 <0.000039>
00:33:13.554614 munmap(0x7fa0c81000, 57440) = 0 <0.000086>
00:33:13.554769 mprotect(0x7fa0c68000, 90112, PROT_NONE) = 0 <0.000041>
00:33:13.554877 mmap(0x7fa0c7e000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4e000) = 0x7fa0c7e000 <0.000041>
00:33:13.555015 close(3)                = 0 <0.000025>
00:33:13.555118 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libhogweed.so.6", O_RDONLY|O_CLOEXEC) = 3 <0.000035>
00:33:13.555228 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\08\1\5\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\32\0\31\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0pf\4\0\0\0\0\0pf\4\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0`\352\4\0\0\0\0\0`\352\5\0\0\0\0\0`\352\5\0\0\0\0\0\250\25\0\0\0\0\0\0\260\25\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\200\365\4\0\0\0\0\0\200\365\5\0\0\0\0\0\200\365\5\0\0\0\0\0@\2\0\0\0\0\0\0@\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\204\36\4\0\0\0\0\0\204\36\4\0\0\0\0\0\204\36\4\0\0\0\0\0\334\t\0\0\0\0\0\0\334\t\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0`\352\4\0\0\0\0\0`\352\5\0\0\0\0\0`\352\5\0\0\0\0\0\240\25\0\0\0\0\0\0\240\25\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\330;.cosX\345\"\241\5$i^9\331i\364\242\"\0\0\0\0\7\1\0\0o\0\0\0 \0\0\0\v\0\0\0H \20\4\2100\0Ip\324\1%\0\26\20\20\23\301@*\10H\0\242\245\202\352\320\r\v\222!\1\0X\254\0N \21 AY\10\24\0\0\4\24j\202q\214\212\22\221D\244`E$\t\240\0\200p. \302b\10'(\0H\321\3\0\201\215\4\0\10\0ht\250\206\0\31\250*\7\225\31\206J\32h\0\332\0\0(\300\24\210\10\1L`\"$\0(\2(@\300\4C\305\10B\221\6\3 \20\0\0000\224\0B\0\21\0@P\10\202a\303\10@\20\22\4\0Q\2\20B C2\215 @B\370\1\r\23\00050\211\31\200\0b\30\v\201@4\24b\21\f\222$\1\204\24\0\4\240\0@\10\300+\0030\4\22\200\4\6\256\25\203\0\0\24\0 \4\1\0\221\200\240\250\0001\22\2H`:\2\1\200(\0\0\4\0\f\0053*\24\"\220A\2\2B\24@\0@\t\201@5@\0205\0,o\0\0\0\0\0\0\0p\0\0\0\0\0\0\0r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0t\0\0\0v\0\0\0y\0\0\0z\0\0\0\0\0\0\0{\0\0\0\0\0\0\0", 832) = 832 <0.000028>
00:33:13.555341 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=329656, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.555451 mmap(NULL, 458768, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa0baf000 <0.000038>
00:33:13.555556 mmap(0x7fa0bb0000, 393232, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa0bb0000 <0.000056>
00:33:13.555679 munmap(0x7fa0baf000, 4096) = 0 <0.000030>
00:33:13.555775 munmap(0x7fa0c11000, 57360) = 0 <0.000028>
00:33:13.555868 mprotect(0x7fa0bf7000, 94208, PROT_NONE) = 0 <0.000035>
00:33:13.555968 mmap(0x7fa0c0e000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4e000) = 0x7fa0c0e000 <0.000040>
00:33:13.556105 close(3)                = 0 <0.000025>
00:33:13.556202 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libgmp.so.10", O_RDONLY|O_CLOEXEC) = 3 <0.000032>
00:33:13.556320 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\240\f\10\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\32\0\31\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0pM\7\0\0\0\0\0pM\7\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0p\371\7\0\0\0\0\0p\371\10\0\0\0\0\0p\371\10\0\0\0\0\0\10\22\0\0\0\0\0\0@\22\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\320\374\7\0\0\0\0\0\320\374\10\0\0\0\0\0\320\374\10\0\0\0\0\0\340\1\0\0\0\0\0\0\340\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0p\257\6\0\0\0\0\0p\257\6\0\0\0\0\0p\257\6\0\0\0\0\0\254\23\0\0\0\0\0\0\254\23\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0p\371\7\0\0\0\0\0p\371\10\0\0\0\0\0p\371\10\0\0\0\0\0\220\6\0\0\0\0\0\0\220\6\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\32/\355\2\330\25\23\262\30|$\344Z\355\0\333R\223@\f\0\0\0\0\t\2\0\0-\0\0\0@\0\0\0\f\0\0\0\224I\1\21\310\0p\5\206\1\"\1\\\0@\5`\30F\300\370\34\2B\0\220\1\201\10\0\344\n \0\20\16\4\20\10\n$\0$\1!\4\"@l+\204\22\201\3@\22\320\6\220\0302 b\2\08\20 \202\1\0@\t\n\10B@D\1\10\2\t\200\0\266\20\2\3h\"\0\21442 G\1\336\200U\214\204 \276(\310EA\202\220(N\3000\254\r\345\270m\10`\0\300\324\2642\350\371\4V\f\25\210)A\0\320\201\10@\22\3d2\2!\200@\230\226\4\240\3041AH\226\210\302\240\323\\\5H\200\4\213<\1\2\200\6\222!\0 \6PXC\20\241X\304\326t*Y\200B\20\20K3\31\230\4\0\272\200\0\6\1\t\301B$\20P\250\10\0\3\n\"\0\261\221Z$\315\2\201\222\20\1\0\21\202\200\0\1\0\f\30\0 \0\244\0@#\10\0\2`\20\23\224\201\4\221\261\26\0\21\5\200\32 \22\10\200\20\2\311\30\4\30\204\21\31\0\10\0\0\20@0\20\0\211\n\370\25\0`\3@\305fP`\t\270\200\5N\32\213!h4D\1\254\304%\313@\240\213\10\2116\3\1\4\200\201", 832) = 832 <0.000028>
00:33:13.556433 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=529184, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.556542 mmap(NULL, 658352, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa0b0f000 <0.000037>
00:33:13.556646 mmap(0x7fa0b10000, 592816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa0b10000 <0.000070>
00:33:13.556783 munmap(0x7fa0b0f000, 4096) = 0 <0.000037>
00:33:13.556885 munmap(0x7fa0ba1000, 60336) = 0 <0.000037>
00:33:13.556987 mprotect(0x7fa0b85000, 106496, PROT_NONE) = 0 <0.000049>
00:33:13.557102 mmap(0x7fa0b9f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7f000) = 0x7fa0b9f000 <0.000048>
00:33:13.557246 close(3)                = 0 <0.000025>
00:33:13.557346 openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libffi.so.8", O_RDONLY|O_CLOEXEC) = 3 <0.000032>
00:33:13.557452 read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\340\2\1\0\0\0\0\0\0\0\0\0@\08\0\7\0@\0\33\0\32\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\340v\0\0\0\0\0\0\340v\0\0\0\0\0\0\0\0\1\0\0\0\0\0\1\0\0\0\6\0\0\0x\374\0\0\0\0\0\0x\374\1\0\0\0\0\0x\374\1\0\0\0\0\0004\5\0\0\0\0\0\0\320\t\0\0\0\0\0\0\0\0\1\0\0\0\0\0\2\0\0\0\6\0\0\0\250\375\0\0\0\0\0\0\250\375\1\0\0\0\0\0\250\375\1\0\0\0\0\0\0\2\0\0\0\0\0\0\0\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0\310\1\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0 j\0\0\0\0\0\0 j\0\0\0\0\0\0 j\0\0\0\0\0\0\f\2\0\0\0\0\0\0\f\2\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0x\374\0\0\0\0\0\0x\374\1\0\0\0\0\0x\374\1\0\0\0\0\0\210\3\0\0\0\0\0\0\210\3\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0e-\234\2336\375\322\3558*\5G\327br=p\f7\10\0\0\0\0%\0\0\0(\0\0\0\4\0\0\0\10\0\0\0\21\1B\266\0\0\354\n\241\0\302\"\206\6IV\243\20\"\220\200\24@\6dc\5P\201X`F(\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0)\0\0\0+\0\0\0,\0\0\0.\0\0\0/\0\0\0001\0\0\0\0\0\0\0002\0\0\0004\0\0\0005\0\0\0006\0\0\0007\0\0\08\0\0\0=\0\0\0>\0\0\0?\0\0\0A\0\0\0B\0\0\0C\0\0\0\0\0\0\0\0\0\0\0D\0\0\0\0\0\0\0G\0\0\0J\0\0\0L\0\0\0M\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0N\0\0\0Q\0\0\0\215\247P\324\36\266\257#\311\305\3654\255\21\243<\4\10Z(\253@\361\314s\251\333\353\310\371!\26\273gB\366E\252\367s\322MP^W\31\317\344\37u{\3559\31%\35\2016'\354\377^\204\355@6u\3446\32(\244p\205B]\236\7Z(\177g\264[\321\34,^\373\210;\24\302\266\257#]Q\275[\225\34\4rab\3w;\26Z\3002Qp\331\364\6\177E\35\263T\224\34\0\302>\266E\3531\341\236T~\224y\"\1", 832) = 832 <0.000027>
00:33:13.557575 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=68000, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.557683 mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa1dae000 <0.000039>
00:33:13.557797 mmap(NULL, 198216, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa0adf000 <0.000041>
00:33:13.557904 mmap(0x7fa0ae0000, 132680, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0x7fa0ae0000 <0.000059>
00:33:13.558031 munmap(0x7fa0adf000, 4096) = 0 <0.000036>
00:33:13.558132 munmap(0x7fa0b01000, 58952) = 0 <0.000035>
00:33:13.558232 mprotect(0x7fa0ae8000, 94208, PROT_NONE) = 0 <0.000046>
00:33:13.558343 mmap(0x7fa0aff000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xf000) = 0x7fa0aff000 <0.000047>
00:33:13.558487 close(3)                = 0 <0.000025>
00:33:13.558666 mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa1dac000 <0.000044>
00:33:13.558807 set_tid_address(0x7fa1dacc50) = 5273 <0.000025>
00:33:13.558897 set_robust_list(0x7fa1dacc60, 24) = 0 <0.000025>
00:33:13.558988 rseq(0x7fa1dad2a0, 0x20, 0, 0xd428bc00) = 0 <0.000025>
00:33:13.559197 mprotect(0x7fa1cfc000, 16384, PROT_READ) = 0 <0.000047>
00:33:13.559331 mprotect(0x7fa0aff000, 4096, PROT_READ) = 0 <0.000036>
00:33:13.559503 mprotect(0x7fa0b9f000, 4096, PROT_READ) = 0 <0.000036>
00:33:13.560075 mprotect(0x7fa0c7e000, 8192, PROT_READ) = 0 <0.000039>
00:33:13.560491 mprotect(0x7fa0c0e000, 8192, PROT_READ) = 0 <0.000040>
00:33:13.560641 mprotect(0x7fa0cbf000, 4096, PROT_READ) = 0 <0.000041>
00:33:13.561205 mprotect(0x7fa0e8c000, 16384, PROT_READ) = 0 <0.000047>
00:33:13.561368 mprotect(0x7fa0edf000, 4096, PROT_READ) = 0 <0.000039>
00:33:13.561799 mprotect(0x7fa1025000, 45056, PROT_READ) = 0 <0.000049>
00:33:13.561940 mprotect(0x7fa105f000, 4096, PROT_READ) = 0 <0.000046>
00:33:13.562084 mprotect(0x7fa108f000, 4096, PROT_READ) = 0 <0.000044>
00:33:13.563664 mprotect(0x7fa12cf000, 69632, PROT_READ) = 0 <0.000159>
00:33:13.564046 mprotect(0x7fa131f000, 4096, PROT_READ) = 0 <0.000045>
00:33:13.564234 mprotect(0x7fa134f000, 4096, PROT_READ) = 0 <0.000048>
00:33:13.564370 mprotect(0x7fa137f000, 4096, PROT_READ) = 0 <0.000040>
00:33:13.564502 mprotect(0x7fa13af000, 4096, PROT_READ) = 0 <0.000043>
00:33:13.564633 mprotect(0x7fa13ff000, 4096, PROT_READ) = 0 <0.000044>
00:33:13.564928 mprotect(0x7fa14e4000, 49152, PROT_READ) = 0 <0.000048>
00:33:13.565267 mprotect(0x7fa153c000, 16384, PROT_READ) = 0 <0.000038>
00:33:13.565756 mprotect(0x7fa15be000, 8192, PROT_READ) = 0 <0.000039>
00:33:13.565965 mprotect(0x7fa162e000, 8192, PROT_READ) = 0 <0.000049>
00:33:13.569071 mprotect(0x7fa1a35000, 372736, PROT_READ) = 0 <0.000077>
00:33:13.569855 mprotect(0x7fa1b46000, 40960, PROT_READ) = 0 <0.000055>
00:33:13.570009 mprotect(0x7fa1d9f000, 4096, PROT_READ) = 0 <0.000077>
00:33:13.570351 mprotect(0x7fa1e1e000, 8192, PROT_READ) = 0 <0.000037>
00:33:13.570772 mprotect(0x7fa1e8c000, 16384, PROT_READ) = 0 <0.000047>
00:33:13.571201 mprotect(0x557d5e5000, 45056, PROT_READ) = 0 <0.000044>
00:33:13.571327 mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fa1daa000 <0.000048>
00:33:13.571471 mprotect(0x7fa1ed0000, 8192, PROT_READ) = 0 <0.000125>
00:33:13.571701 prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0 <0.000029>
00:33:13.571840 munmap(0x7fa1eba000, 65875) = 0 <0.000068>
00:33:13.572128 getrandom("\x3d\x74\xa3\x47\x5a\x8d\x17\x92", 8, GRND_NONBLOCK) = 8 <0.000031>
00:33:13.572244 brk(NULL)               = 0x55ab4d6000 <0.000029>
00:33:13.572365 brk(0x55ab4f7000)       = 0x55ab4f7000 <0.000045>
00:33:13.573073 getrandom("\x94", 1, GRND_NONBLOCK) = 1 <0.000030>
00:33:13.573270 newfstatat(AT_FDCWD, "/etc/gnutls/config", 0x7fdc0d5f80, 0) = -1 ENOENT (No such file or directory) <0.000032>
00:33:13.573446 rt_sigprocmask(SIG_SETMASK, ~[ILL TRAP BUS FPE SEGV RTMIN RT_1], [], 8) = 0 <0.000029>
00:33:13.573562 rt_sigaction(SIGILL, {sa_handler=0x7fa1842210, sa_mask=~[ILL TRAP BUS FPE SEGV RTMIN RT_1], sa_flags=0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0 <0.000028>
00:33:13.573682 rt_sigaction(SIGILL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, NULL, 8) = 0 <0.000028>
00:33:13.573788 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0 <0.000028>
00:33:13.573966 ioctl(2, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHO|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000034>
00:33:13.574114 openat(AT_FDCWD, "/usr/lib/locale/locale-archive", O_RDONLY|O_CLOEXEC) = 3 <0.000046>
00:33:13.574243 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=3048976, ...}, AT_EMPTY_PATH) = 0 <0.000029>
00:33:13.574362 mmap(NULL, 3048976, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fa07f7000 <0.000061>
00:33:13.574505 close(3)                = 0 <0.000027>
00:33:13.574716 newfstatat(AT_FDCWD, "/usr/lib/postgresql/16/bin/psql", {st_mode=S_IFREG|0755, st_size=855408, ...}, 0) = 0 <0.000034>
00:33:13.574841 faccessat(AT_FDCWD, "/usr/lib/postgresql/16/bin/psql", R_OK) = 0 <0.000036>
00:33:13.574952 faccessat(AT_FDCWD, "/usr/lib/postgresql/16/bin/psql", X_OK) = 0 <0.000030>
00:33:13.575058 readlinkat(AT_FDCWD, "/usr", 0x7fdc0d64e0, 1023) = -1 EINVAL (Invalid argument) <0.000028>
00:33:13.575170 readlinkat(AT_FDCWD, "/usr/lib", 0x7fdc0d64e0, 1023) = -1 EINVAL (Invalid argument) <0.000028>
00:33:13.575276 readlinkat(AT_FDCWD, "/usr/lib/postgresql", 0x7fdc0d64e0, 1023) = -1 EINVAL (Invalid argument) <0.000028>
00:33:13.575382 readlinkat(AT_FDCWD, "/usr/lib/postgresql/16", 0x7fdc0d64e0, 1023) = -1 EINVAL (Invalid argument) <0.000028>
00:33:13.575487 readlinkat(AT_FDCWD, "/usr/lib/postgresql/16/bin", 0x7fdc0d64e0, 1023) = -1 EINVAL (Invalid argument) <0.000028>
00:33:13.575593 readlinkat(AT_FDCWD, "/usr/lib/postgresql/16/bin/psql", 0x7fdc0d64e0, 1023) = -1 EINVAL (Invalid argument) <0.000028>
00:33:13.575743 ioctl(0, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHO|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000031>
00:33:13.575856 ioctl(1, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHO|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000027>
00:33:13.576035 brk(0x55ab518000)       = 0x55ab518000 <0.000038>
00:33:13.576204 newfstatat(AT_FDCWD, "/home/mumblepi/.pgpass", 0x7fdc0d6c38, 0) = -1 ENOENT (No such file or directory) <0.000031>
00:33:13.576353 socket(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0) = 3 <0.000046>
00:33:13.576470 connect(3, {sa_family=AF_UNIX, sun_path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory) <0.000060>
00:33:13.576614 close(3)                = 0 <0.000042>
00:33:13.576725 socket(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0) = 3 <0.000030>
00:33:13.576823 connect(3, {sa_family=AF_UNIX, sun_path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory) <0.000038>
00:33:13.576940 close(3)                = 0 <0.000034>
00:33:13.577052 newfstatat(AT_FDCWD, "/etc/nsswitch.conf", {st_mode=S_IFREG|0644, st_size=526, ...}, 0) = 0 <0.000030>
00:33:13.577168 newfstatat(AT_FDCWD, "/", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0 <0.000028>
00:33:13.577283 openat(AT_FDCWD, "/etc/nsswitch.conf", O_RDONLY|O_CLOEXEC) = 3 <0.000035>
00:33:13.577397 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=526, ...}, AT_EMPTY_PATH) = 0 <0.000029>
00:33:13.577518 read(3, "# /etc/nsswitch.conf\n#\n# Example configuration of GNU Name Service Switch functionality.\n# If you have the `glibc-doc-reference' and `info' packages installed, try:\n# `info libc \"Name Service Switch\"' for information about this file.\n\npasswd:         files\ngroup:          files\nshadow:         files\ngshadow:        files\n\nhosts:          files mdns4_minimal [NOTFOUND=return] dns\nnetworks:       files\n\nprotocols:      db files\nservices:       db files\nethers:         db files\nrpc:            db files\n\nnetgroup:       nis\n", 4096) = 526 <0.000033>
00:33:13.577676 read(3, "", 4096)       = 0 <0.000027>
00:33:13.577775 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=526, ...}, AT_EMPTY_PATH) = 0 <0.000028>
00:33:13.577887 close(3)                = 0 <0.000029>
00:33:13.577988 newfstatat(AT_FDCWD, "/etc/resolv.conf", {st_mode=S_IFREG|0644, st_size=53, ...}, 0) = 0 <0.000030>
00:33:13.578112 openat(AT_FDCWD, "/etc/host.conf", O_RDONLY|O_CLOEXEC) = 3 <0.000033>
00:33:13.578222 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=9, ...}, AT_EMPTY_PATH) = 0 <0.000028>
00:33:13.578337 read(3, "multi on\n", 4096) = 9 <0.000029>
00:33:13.578442 read(3, "", 4096)       = 0 <0.000027>
00:33:13.578538 close(3)                = 0 <0.000028>
00:33:13.578634 futex(0x7fa1d08620, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000029>
00:33:13.578752 openat(AT_FDCWD, "/etc/resolv.conf", O_RDONLY|O_CLOEXEC) = 3 <0.000030>
00:33:13.578858 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=53, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.578967 read(3, "# Generated by NetworkManager\nnameserver 192.168.0.1\n", 4096) = 53 <0.000027>
00:33:13.579070 read(3, "", 4096)       = 0 <0.000026>
00:33:13.579163 uname({sysname="Linux", nodename="mumblepi", ...}) = 0 <0.000026>
00:33:13.579262 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=53, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.579372 close(3)                = 0 <0.000027>
00:33:13.579474 openat(AT_FDCWD, "/etc/hosts", O_RDONLY|O_CLOEXEC) = 3 <0.000031>
00:33:13.579579 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=128, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.579688 lseek(3, 0, SEEK_SET)   = 0 <0.000025>
00:33:13.579782 read(3, "127.0.0.1\tlocalhost\n::1\t\tlocalhost ip6-localhost ip6-loopback\nff02::1\t\tip6-allnodes\nff02::2\t\tip6-allrouters\n\n127.0.1.1\tmumblepi\n", 4096) = 128 <0.000027>
00:33:13.579889 read(3, "", 4096)       = 0 <0.000025>
00:33:13.579981 close(3)                = 0 <0.000027>
00:33:13.580078 openat(AT_FDCWD, "/etc/gai.conf", O_RDONLY|O_CLOEXEC) = 3 <0.000033>
00:33:13.580185 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=2584, ...}, AT_EMPTY_PATH) = 0 <0.000027>
00:33:13.580293 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=2584, ...}, AT_EMPTY_PATH) = 0 <0.000026>
00:33:13.580400 read(3, "# Configuration for getaddrinfo(3).\n#\n# So far only configuration for the destination address sorting is needed.\n# RFC 3484 governs the sorting.  But the RFC also says that system\n# administrators should be able to overwrite the defaults.  This can be\n# achieved here.\n#\n# All lines have an initial identifier specifying the option followed by\n# up to two values.  Information specified in this file replaces the\n# default information.  Complete absence of data of one kind causes the\n# appropriate default information to be used.  The supported commands include:\n#\n# reload  <yes|no>\n#    If set to yes, each getaddrinfo(3) call will check whether this file\n#    changed and if necessary reload.  This option should not really be\n#    used.  There are possible runtime problems.  The default is no.\n#\n# label   <mask>   <value>\n#    Add another rule to the RFC 3484 label table.  See section 2.1 in\n#    RFC 3484.  The default is:\n#\n#label ::1/128       0\n#label ::/0          1\n#label 2002::/16     2\n#label ::/96         3\n#label ::ffff:0:0/96 4\n#label fec0::/10     5\n#label fc00::/7      6\n#label 2001:0::/32   7\n#\n#    This default differs from the tables given in RFC 3484 by handling\n#    (now obsolete) site-local IPv6 addresses and Unique Local Addresses.\n#    The reason for this difference is that these addresses are never\n#    NATed while IPv4 site-local addresses most probably are.  Given\n#    the precedence of IPv6 over IPv4 (see below) on machines having only\n#    site-local IPv4 and IPv6 addresses a lookup for a global address would\n#    see the IPv6 be preferred.  The result is a long delay because the\n#    site-local IPv6 addresses cannot be used while the IPv4 address is\n#    (at least for the foreseeable future) NATed.  We also treat Teredo\n#    tunnels special.\n#\n# precedence  <mask>   <value>\n#    Add another rule to the RFC 3484 precedence table.  See section 2.1\n#    and 10.3 in RFC 3484.  The default is:\n#\n#precedence  ::1/128       50\n#precedence  ::/0          40\n#precedence  2002::/16     30\n#precedence ::/96          20\n#precedence ::ffff:0:0/96  10\n#\n#    For sites which prefer IPv4 connections change the last line to\n#\n#precedence ::ffff:0:0/96  100\n\n#\n# scopev4  <mask>  <value>\n#    Add another rule to the RFC 6724 scope table for IPv4 addresses.\n#    By default the scope IDs described in section 3.2 in RFC 6724 are\n#    used.  Changing these defaults should hardly ever be necessary.\n#    The defaults are equivalent to:\n#\n#scopev4 ::ffff:169.254.0.0/112  2\n#scopev4 ::ffff:127.0.0.0/104    2\n#scopev4 ::ffff:0.0.0.0/96       14\n", 4096) = 2584 <0.000028>
00:33:13.580543 read(3, "", 4096)       = 0 <0.000025>
00:33:13.580636 close(3)                = 0 <0.000027>
00:33:13.580730 futex(0x7fa1d07750, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000025>
00:33:13.580822 socket(AF_NETLINK, SOCK_RAW|SOCK_CLOEXEC, NETLINK_ROUTE) = 3 <0.000039>
00:33:13.580929 bind(3, {sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, 12) = 0 <0.000034>
00:33:13.581040 getsockname(3, {sa_family=AF_NETLINK, nl_pid=5273, nl_groups=00000000}, [12]) = 0 <0.000028>
00:33:13.581159 sendto(3, [{nlmsg_len=20, nlmsg_type=0x16 /* NLMSG_??? */, nlmsg_flags=NLM_F_REQUEST|0x300, nlmsg_seq=1722497593, nlmsg_pid=0}, "\x00\x00\x00\x00"], 20, 0, {sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, 12) = 20 <0.000062>
00:33:13.586966 recvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=[[{nlmsg_len=76, nlmsg_type=0x14 /* NLMSG_??? */, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1722497593, nlmsg_pid=5273}, "\x02\x08\x80\xfe\x01\x00\x00\x00\x08\x00\x01\x00\x7f\x00\x00\x01\x08\x00\x02\x00\x7f\x00\x00\x01\x07\x00\x03\x00\x6c\x6f\x00\x00\x08\x00\x08\x00\x80\x00\x00\x00\x14\x00\x06\x00\xff\xff\xff\xff\xff\xff\xff\xff\x75\x01\x00\x00\x75\x01\x00\x00"], [{nlmsg_len=88, nlmsg_type=0x14 /* NLMSG_??? */, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1722497593, nlmsg_pid=5273}, "\x02\x18\x80\x00\x02\x00\x00\x00\x08\x00\x01\x00\xc0\xa8\x00\xbc\x08\x00\x02\x00\xc0\xa8\x00\xbc\x08\x00\x04\x00\xc0\xa8\x00\xff\x09\x00\x03\x00\x65\x74\x68\x30\x00\x00\x00\x00\x08\x00\x08\x00\x80\x02\x00\x00\x14\x00\x06\x00\xff\xff\xff\xff\xff\xff\xff\xff\x82\x05\x00\x00\x82\x05\x00\x00"]], iov_len=4096}], msg_iovlen=1, msg_controllen=0, msg_flags=0}, 0) = 164 <0.000043>
00:33:13.593651 recvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=[[{nlmsg_len=72, nlmsg_type=0x14 /* NLMSG_??? */, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1722497593, nlmsg_pid=5273}, "\x0a\x80\x80\xfe\x01\x00\x00\x00\x14\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x14\x00\x06\x00\xff\xff\xff\xff\xff\xff\xff\xff\x75\x01\x00\x00\x75\x01\x00\x00\x08\x00\x08\x00\x80\x02\x00\x00"], [{nlmsg_len=72, nlmsg_type=0x14 /* NLMSG_??? */, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1722497593, nlmsg_pid=5273}, "\x0a\x40\x80\xfd\x02\x00\x00\x00\x14\x00\x01\x00\xfe\x80\x00\x00\x00\x00\x00\x00\x87\xee\xe2\x8a\xb4\xa2\xca\x7d\x14\x00\x06\x00\xff\xff\xff\xff\xff\xff\xff\xff\x80\x05\x00\x00\x80\x05\x00\x00\x08\x00\x08\x00\x80\x02\x00\x00"]], iov_len=4096}], msg_iovlen=1, msg_controllen=0, msg_flags=0}, 0) = 144 <0.000040>
00:33:13.599273 recvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=[{nlmsg_len=20, nlmsg_type=NLMSG_DONE, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1722497593, nlmsg_pid=5273}, 0], iov_len=4096}], msg_iovlen=1, msg_controllen=0, msg_flags=0}, 0) = 20 <0.000031>
00:33:13.604787 close(3)                = 0 <0.000043>
00:33:13.604918 socket(AF_INET, SOCK_DGRAM|SOCK_CLOEXEC, IPPROTO_IP) = 3 <0.000040>
00:33:13.605028 connect(3, {sa_family=AF_INET, sin_port=htons(5432), sin_addr=inet_addr("127.0.0.1")}, 16) = 0 <0.000050>
00:33:13.605176 getsockname(3, {sa_family=AF_INET, sin_port=htons(49891), sin_addr=inet_addr("127.0.0.1")}, [28 => 16]) = 0 <0.000027>
00:33:13.605289 close(3)                = 0 <0.000038>
00:33:13.605392 socket(AF_INET6, SOCK_DGRAM|SOCK_CLOEXEC, IPPROTO_IP) = 3 <0.000036>
00:33:13.605495 connect(3, {sa_family=AF_INET6, sin6_port=htons(5432), sin6_flowinfo=htonl(0), inet_pton(AF_INET6, "::1", &sin6_addr), sin6_scope_id=0}, 28) = 0 <0.000054>
00:33:13.605628 getsockname(3, {sa_family=AF_INET6, sin6_port=htons(39971), sin6_flowinfo=htonl(0), inet_pton(AF_INET6, "::1", &sin6_addr), sin6_scope_id=0}, [28]) = 0 <0.000027>
00:33:13.605738 close(3)                = 0 <0.000036>
00:33:13.605858 socket(AF_INET6, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, IPPROTO_IP) = 3 <0.000035>
00:33:13.605975 openat(AT_FDCWD, "/usr/share/locale/locale.alias", O_RDONLY|O_CLOEXEC) = 4 <0.000038>
00:33:13.606105 newfstatat(4, "", {st_mode=S_IFREG|0644, st_size=2996, ...}, AT_EMPTY_PATH) = 0 <0.000028>
00:33:13.606223 read(4, "# Locale name alias data base.\n# Copyright (C) 1996-2022 Free Software Foundation, Inc.\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2, or (at your option)\n# any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, see <https://www.gnu.org/licenses/>.\n\n# The format of this file is the same as for the corresponding file of\n# the X Window System, which normally can be found in\n#\t/usr/lib/X11/locale/locale.alias\n# A single line contains two fields: an alias and a substitution value.\n# All entries are case independent.\n\n# Note: This file is obsolete and is kept around for the time being for\n# backward compatibility.  Nobody should rely on the names defined here.\n# Locales should always be specified by their full name.\n\n# Note: This file used to contain the following lines:\n#\tbokmaal\t\tnb_NO.ISO-8859-1\n#\tfranc,ais\tfr_FR.ISO-8859-1\n# except that the \"aa\" was actually the byte '\\0xE5' (the Latin-1\n# encoding for U+00E5 LATIN SMALL LETTER A WITH RING ABOVE) and the\n# \"c,\" was actually the byte '\\xE7' (the Latin-1 encoding for U+00E7\n# LATIN SMALL LETTER C WITH CEDILLA).  These lines were removed\n# because they caused 'locale -a' to output text encoded in Latin-1,\n# which broke applications in UTF-8 locales.  See:\n# https://sourceware.org/bugzilla/show_bug.cgi?id=18412\n\nbokmal\t\tnb_NO.ISO-8859-1\ncatalan\t\tca_ES.ISO-8859-1\ncroatian\thr_HR.ISO-8859-2\nczech\t\tcs_CZ.ISO-8859-2\ndanish          da_DK.ISO-8859-1\ndansk\t\tda_DK.ISO-8859-1\ndeutsch\t\tde_DE.ISO-8859-1\ndutch\t\tnl_NL.ISO-8859-1\neesti\t\tet_EE.ISO-8859-15\nestonian\tet_EE.ISO-8859-15\nfinnish         fi_FI.ISO-8859-1\nfrench\t\tfr_FR.ISO-8859-1\ngalego\t\tgl_ES.ISO-8859-1\ngalician\tgl_ES.ISO-8859-1\ngerman\t\tde_DE.ISO-8859-1\ngreek           el_GR.ISO-8859-7\nhebrew          he_IL.ISO-8859-8\nhrvatski\thr_HR.ISO-8859-2\nhungarian       hu_HU.ISO-8859-2\nicelandic       is_IS.ISO-8859-1\nitalian         it_IT.ISO-8859-1\njapanese\tja_JP.eucJP\njapanese.euc\tja_JP.eucJP\nja_JP\t\tja_JP.eucJP\nja_JP.ujis\tja_JP.eucJP\njapanese.sjis\tja_JP.SJIS\nkorean\t\tko_KR.eucKR\nkorean.euc \tko_KR.eucKR\nko_KR\t\tko_KR.eucKR\nlithuanian      lt_LT.ISO-8859-13\nno_NO\t\tnb_NO.ISO-8859-1\nno_NO.ISO-8859-1 nb_NO.ISO-8859-1\nnorwegian       nb_NO.ISO-8859-1\nnynorsk\t\tnn_NO.ISO-8859-1\npolish          pl_PL.ISO-8859-2\nportuguese      pt_PT.ISO-8859-1\nromanian        ro_RO.ISO-8859-2\nrussian         ru_RU.KOI8-R\nslovak          sk_SK.ISO-8859-2\nslovene         sl_SI.ISO-8859-2\nslovenian       sl_SI.ISO-8859-2\nspanish         es_ES.ISO-8859-1\nswedish         sv_SE.ISO-8859-1\nthai\t\tth_TH.TIS-620\nturkish         tr_TR.ISO-8859-9\n", 4096) = 2996 <0.000032>
00:33:13.606392 read(4, "", 4096)       = 0 <0.000025>
00:33:13.606485 close(4)                = 0 <0.000027>
00:33:13.606597 openat(AT_FDCWD, "/usr/share/locale/en_GB.UTF-8/LC_MESSAGES/libpq5-16.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.606827 openat(AT_FDCWD, "/usr/share/locale/en_GB.utf8/LC_MESSAGES/libpq5-16.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000031>
00:33:13.606939 openat(AT_FDCWD, "/usr/share/locale/en_GB/LC_MESSAGES/libpq5-16.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000031>
00:33:13.607046 openat(AT_FDCWD, "/usr/share/locale/en.UTF-8/LC_MESSAGES/libpq5-16.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.607150 openat(AT_FDCWD, "/usr/share/locale/en.utf8/LC_MESSAGES/libpq5-16.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.607254 openat(AT_FDCWD, "/usr/share/locale/en/LC_MESSAGES/libpq5-16.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000031>
00:33:13.607365 setsockopt(3, SOL_TCP, TCP_NODELAY, [1], 4) = 0 <0.000031>
00:33:13.607549 setsockopt(3, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0 <0.000029>
00:33:13.607652 connect(3, {sa_family=AF_INET6, sin6_port=htons(5432), sin6_flowinfo=htonl(0), inet_pton(AF_INET6, "::1", &sin6_addr), sin6_scope_id=0}, 28) = -1 EINPROGRESS (Operation now in progress) <0.000196>
00:33:13.607940 ppoll([{fd=3, events=POLLOUT|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLOUT}]) <0.000032>
00:33:13.608068 getsockopt(3, SOL_SOCKET, SO_ERROR, [0], [4]) = 0 <0.000027>
00:33:13.608179 getsockname(3, {sa_family=AF_INET6, sin6_port=htons(49628), sin6_flowinfo=htonl(0), inet_pton(AF_INET6, "::1", &sin6_addr), sin6_scope_id=0}, [128 => 28]) = 0 <0.000028>
00:33:13.608301 ppoll([{fd=3, events=POLLOUT|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLOUT}]) <0.000029>
00:33:13.608462 futex(0x7fa1380400, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000028>
00:33:13.608588 futex(0x7fa1380340, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000026>
00:33:13.608730 futex(0x7fa1630d28, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000029>
00:33:13.608844 newfstatat(AT_FDCWD, "/etc/gss/mech", 0x7fdc0d64e8, AT_SYMLINK_NOFOLLOW) = -1 ENOENT (No such file or directory) <0.000036>
00:33:13.608991 openat(AT_FDCWD, "/etc/gss/mech.d", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = 4 <0.000036>
00:33:13.609109 newfstatat(4, "", {st_mode=S_IFDIR|0755, st_size=4096, ...}, AT_EMPTY_PATH) = 0 <0.000029>
00:33:13.609244 getdents64(4, 0x55ab4fffd0 /* 2 entries */, 32768) = 48 <0.000051>
00:33:13.609395 openat(AT_FDCWD, "/usr/lib/aarch64-linux-gnu/gconv/gconv-modules.cache", O_RDONLY) = 5 <0.000043>
00:33:13.609522 newfstatat(5, "", {st_mode=S_IFREG|0644, st_size=27028, ...}, AT_EMPTY_PATH) = 0 <0.000029>
00:33:13.609639 mmap(NULL, 27028, PROT_READ, MAP_SHARED, 5, 0) = 0x7fa1ec4000 <0.000060>
00:33:13.609772 close(5)                = 0 <0.000025>
00:33:13.609873 futex(0x7fa1d018cc, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000073>
00:33:13.610035 getdents64(4, 0x55ab4fffd0 /* 0 entries */, 32768) = 0 <0.000028>
00:33:13.610133 close(4)                = 0 <0.000030>
00:33:13.610410 futex(0x7fa14f1408, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000027>
00:33:13.610571 futex(0x7fa14f23d0, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000025>
00:33:13.610708 newfstatat(AT_FDCWD, "/etc/krb5.conf", 0x7fdc0d42c8, 0) = -1 ENOENT (No such file or directory) <0.000057>
00:33:13.610957 geteuid()               = 1000 <0.000025>
00:33:13.611089 openat(AT_FDCWD, "/etc/krb5/user/1000/client.keytab", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000048>
00:33:13.611235 openat(AT_FDCWD, "/usr/share/locale/en_GB.UTF-8/LC_MESSAGES/mit-krb5.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000032>
00:33:13.611381 openat(AT_FDCWD, "/usr/share/locale/en_GB.utf8/LC_MESSAGES/mit-krb5.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.611488 openat(AT_FDCWD, "/usr/share/locale/en_GB/LC_MESSAGES/mit-krb5.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000042>
00:33:13.611607 openat(AT_FDCWD, "/usr/share/locale/en.UTF-8/LC_MESSAGES/mit-krb5.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.611712 openat(AT_FDCWD, "/usr/share/locale/en.utf8/LC_MESSAGES/mit-krb5.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.611816 openat(AT_FDCWD, "/usr/share/locale/en/LC_MESSAGES/mit-krb5.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000041>
00:33:13.611966 getuid()                = 1000 <0.000025>
00:33:13.612067 newfstatat(AT_FDCWD, "/tmp/krb5cc_1000", 0x7fdc0d63d8, 0) = -1 ENOENT (No such file or directory) <0.000039>
00:33:13.612278 newfstatat(AT_FDCWD, "/etc/krb5.conf", 0x7fdc0d3f38, 0) = -1 ENOENT (No such file or directory) <0.000028>
00:33:13.612393 geteuid()               = 1000 <0.000025>
00:33:13.612502 openat(AT_FDCWD, "/etc/krb5/user/1000/client.keytab", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000032>
00:33:13.612621 getuid()                = 1000 <0.000026>
00:33:13.612717 newfstatat(AT_FDCWD, "/tmp/krb5cc_1000", 0x7fdc0d6048, 0) = -1 ENOENT (No such file or directory) <0.000027>
00:33:13.612843 sendto(3, "\0\0\0\10\4\322\26/", 8, MSG_NOSIGNAL, NULL, 0) = 8 <0.000130>
00:33:13.613082 ppoll([{fd=3, events=POLLIN|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLIN}]) <0.000035>
00:33:13.613213 recvfrom(3, "S", 16384, 0, NULL, NULL) = 1 <0.000029>
00:33:13.613447 futex(0x7fa1a92b58, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000028>
00:33:13.613561 futex(0x7fa1a92b5c, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000025>
00:33:13.613653 futex(0x7fa1a92b60, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000025>
00:33:13.613773 futex(0x7fa1a92c44, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000025>
00:33:13.614073 futex(0x7fa1a92b68, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000101>
00:33:13.614309 futex(0x7fa1a92b6c, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000026>
00:33:13.614439 futex(0x7fa1a9285c, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000026>
00:33:13.614540 futex(0x7fa1a92400, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000025>
00:33:13.614632 futex(0x7fa1a92b8c, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000027>
00:33:13.614766 futex(0x7fa1a922f0, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000100>
00:33:13.615586 futex(0x7fa1a92b64, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000027>
00:33:13.615698 openat(AT_FDCWD, "/usr/lib/ssl/openssl.cnf", O_RDONLY) = 4 <0.000045>
00:33:13.615853 newfstatat(4, "", {st_mode=S_IFREG|0644, st_size=12332, ...}, AT_EMPTY_PATH) = 0 <0.000028>
00:33:13.615978 read(4, "#\n# OpenSSL example configuration file.\n# See doc/man5/config.pod for more info.\n#\n# This is mostly being used for generation of certificate requests,\n# but may be used for auto loading of providers\n\n# Note that you can include other files from the main configuration\n# file using the .include directive.\n#.include filename\n\n# This definition stops the following lines choking if HOME isn't\n# defined.\nHOME\t\t\t= .\n\n # Use this in order to automatically load providers.\nopenssl_conf = openssl_init\n\n# Comment out the next line to ignore configuration errors\nconfig_diagnostics = 1\n\n# Extra OBJECT IDENTIFIER info:\n# oid_file       = $ENV::HOME/.oid\noid_section = new_oids\n\n# To use this configuration file with the \"-extfile\" option of the\n# \"openssl x509\" utility, name here the section containing the\n# X.509v3 extensions to use:\n# extensions\t\t=\n# (Alternatively, use a configuration file that has only\n# X.509v3 extensions in its main [= default] section.)\n\n[ new_oids ]\n# We can add new OIDs in here for use by 'ca', 'req' and 'ts'.\n# Add a simple OID like this:\n# testoid1=1.2.3.4\n# Or use config file substitution like this:\n# testoid2=${testoid1}.5.6\n\n# Policies used by the TSA examples.\ntsa_policy1 = 1.2.3.4.1\ntsa_policy2 = 1.2.3.4.5.6\ntsa_policy3 = 1.2.3.4.5.7\n\n# For FIPS\n# Optionally include a file that is generated by the OpenSSL fipsinstall\n# application. This file contains configuration data required by the OpenSSL\n# fips provider. It contains a named section e.g. [fips_sect] which is\n# referenced from the [provider_sect] below.\n# Refer to the OpenSSL security policy for more information.\n# .include fipsmodule.cnf\n\n[openssl_init]\n# providers = provider_sect\n\n# List of providers to load\n# [provider_sect]\n# default = default_sect\n# The fips section name should match the section name inside the\n# included fipsmodule.cnf.\n# fips = fips_sect\n\n# If no providers are activated explicitly, the default one is activated implicitly.\n# See man 7 OSSL_PROVIDER-default for more details.\n#\n# If you add a section explicitly activating any other provider(s), you most\n# probably need to explicitly activate the default provider, otherwise it\n# becomes unavailable in openssl.  As a consequence applications depending on\n# OpenSSL may not work correctly which could lead to significant system\n# problems including inability to remotely access the system.\n# [default_sect]\n# activate = 1\n\n\n####################################################################\n[ ca ]\ndefault_ca\t= CA_default\t\t# The default ca section\n\n####################################################################\n[ CA_default ]\n\ndir\t\t= ./demoCA\t\t# Where everything is kept\ncerts\t\t= $dir/certs\t\t# Where the issued certs are kept\ncrl_dir\t\t= $dir/crl\t\t# Where the issued crl are kept\ndatabase\t= $dir/index.txt\t# database index file.\n#unique_subject\t= no\t\t\t# Set to 'no' to allow creation of\n\t\t\t\t\t# several certs with same subject.\nnew_certs_dir\t= $dir/newcerts\t\t# default place for new certs.\n\ncertificate\t= $dir/cacert.pem \t# The CA certificate\nserial\t\t= $dir/serial \t\t# The current serial number\ncrlnumber\t= $dir/crlnumber\t# the current crl number\n\t\t\t\t\t# must be commented out to leave a V1 CRL\ncrl\t\t= $dir/crl.pem \t\t# The current CRL\nprivate_key\t= $dir/private/cakey.pem# The private key\n\nx509_extensions\t= usr_cert\t\t# The extensions to add to the cert\n\n# Comment out the following two lines for the \"traditional\"\n# (and highly broken) format.\nname_opt \t= ca_default\t\t# Subject Name options\ncert_opt \t= ca_default\t\t# Certificate field options\n\n# Extension copying option: use with caution.\n# copy_extensions = copy\n\n# Extensions to add to a CRL. Note: Netscape communicator chokes on V2 CRLs\n# so this is commented out by default to leave a V1 CRL.\n# crlnumber must also be commented out to leave a V1 CRL.\n# crl_extensions\t= crl_ext\n\ndefault_days\t= 365\t\t\t# how long to certify for\ndefault_crl_days= 30\t\t\t# how long before next CRL\ndefault_md\t= default\t\t# use public key default MD\npreserve\t= no\t\t\t# keep passed DN ordering\n\n# A few difference way of specifying how similar the request should look\n# For type CA, t", 4096) = 4096 <0.000033>
00:33:13.616336 read(4, "he listed attributes must be the same, and the optional\n# and supplied fields are just that :-)\npolicy\t\t= policy_match\n\n# For the CA policy\n[ policy_match ]\ncountryName\t\t= match\nstateOrProvinceName\t= match\norganizationName\t= match\norganizationalUnitName\t= optional\ncommonName\t\t= supplied\nemailAddress\t\t= optional\n\n# For the 'anything' policy\n# At this point in time, you must list all acceptable 'object'\n# types.\n[ policy_anything ]\ncountryName\t\t= optional\nstateOrProvinceName\t= optional\nlocalityName\t\t= optional\norganizationName\t= optional\norganizationalUnitName\t= optional\ncommonName\t\t= supplied\nemailAddress\t\t= optional\n\n####################################################################\n[ req ]\ndefault_bits\t\t= 2048\ndefault_keyfile \t= privkey.pem\ndistinguished_name\t= req_distinguished_name\nattributes\t\t= req_attributes\nx509_extensions\t= v3_ca\t# The extensions to add to the self signed cert\n\n# Passwords for private keys if not present they will be prompted for\n# input_password = secret\n# output_password = secret\n\n# This sets a mask for permitted string types. There are several options.\n# default: PrintableString, T61String, BMPString.\n# pkix\t : PrintableString, BMPString (PKIX recommendation before 2004)\n# utf8only: only UTF8Strings (PKIX recommendation after 2004).\n# nombstr : PrintableString, T61String (no BMPStrings or UTF8Strings).\n# MASK:XXXX a literal mask value.\n# WARNING: ancient versions of Netscape crash on BMPStrings or UTF8Strings.\nstring_mask = utf8only\n\n# req_extensions = v3_req # The extensions to add to a certificate request\n\n[ req_distinguished_name ]\ncountryName\t\t\t= Country Name (2 letter code)\ncountryName_default\t\t= AU\ncountryName_min\t\t\t= 2\ncountryName_max\t\t\t= 2\n\nstateOrProvinceName\t\t= State or Province Name (full name)\nstateOrProvinceName_default\t= Some-State\n\nlocalityName\t\t\t= Locality Name (eg, city)\n\n0.organizationName\t\t= Organization Name (eg, company)\n0.organizationName_default\t= Internet Widgits Pty Ltd\n\n# we can do this but it is not needed normally :-)\n#1.organizationName\t\t= Second Organization Name (eg, company)\n#1.organizationName_default\t= World Wide Web Pty Ltd\n\norganizationalUnitName\t\t= Organizational Unit Name (eg, section)\n#organizationalUnitName_default\t=\n\ncommonName\t\t\t= Common Name (e.g. server FQDN or YOUR name)\ncommonName_max\t\t\t= 64\n\nemailAddress\t\t\t= Email Address\nemailAddress_max\t\t= 64\n\n# SET-ex3\t\t\t= SET extension number 3\n\n[ req_attributes ]\nchallengePassword\t\t= A challenge password\nchallengePassword_min\t\t= 4\nchallengePassword_max\t\t= 20\n\nunstructuredName\t\t= An optional company name\n\n[ usr_cert ]\n\n# These extensions are added when 'ca' signs a request.\n\n# This goes against PKIX guidelines but some CAs do it and some software\n# requires this to avoid interpreting an end user certificate as a CA.\n\nbasicConstraints=CA:FALSE\n\n# This is typical in keyUsage for a client certificate.\n# keyUsage = nonRepudiation, digitalSignature, keyEncipherment\n\n# PKIX recommendations harmless if included in all certificates.\nsubjectKeyIdentifier=hash\nauthorityKeyIdentifier=keyid,issuer\n\n# This stuff is for subjectAltName and issuerAltname.\n# Import the email address.\n# subjectAltName=email:copy\n# An alternative to produce certificates that aren't\n# deprecated according to PKIX.\n# subjectAltName=email:move\n\n# Copy subject details\n# issuerAltName=issuer:copy\n\n# This is required for TSA certificates.\n# extendedKeyUsage = critical,timeStamping\n\n[ v3_req ]\n\n# Extensions to add to a certificate request\n\nbasicConstraints = CA:FALSE\nkeyUsage = nonRepudiation, digitalSignature, keyEncipherment\n\n[ v3_ca ]\n\n\n# Extensions for a typical CA\n\n\n# PKIX recommendation.\n\nsubjectKeyIdentifier=hash\n\nauthorityKeyIdentifier=keyid:always,issuer\n\nbasicConstraints = critical,CA:true\n\n# Key usage: this is typical for a CA certificate. However since it will\n# prevent it being used as an test self-signed certificate it is best\n# left out by default.\n# keyUsage = cRLSign, keyCertSign\n\n# Include email address in subject alt name: another PKIX recommendation\n# subjectAltName=email:copy\n# Copy issuer details\n# issuerAltName=issuer:copy\n\n# DE", 4096) = 4096 <0.000029>
00:33:13.616595 read(4, "R hex encoding of an extension: beware experts only!\n# obj=DER:02:03\n# Where 'obj' is a standard or added object\n# You can even override a supported extension:\n# basicConstraints= critical, DER:30:03:01:01:FF\n\n[ crl_ext ]\n\n# CRL extensions.\n# Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.\n\n# issuerAltName=issuer:copy\nauthorityKeyIdentifier=keyid:always\n\n[ proxy_cert_ext ]\n# These extensions should be added when creating a proxy certificate\n\n# This goes against PKIX guidelines but some CAs do it and some software\n# requires this to avoid interpreting an end user certificate as a CA.\n\nbasicConstraints=CA:FALSE\n\n# This is typical in keyUsage for a client certificate.\n# keyUsage = nonRepudiation, digitalSignature, keyEncipherment\n\n# PKIX recommendations harmless if included in all certificates.\nsubjectKeyIdentifier=hash\nauthorityKeyIdentifier=keyid,issuer\n\n# This stuff is for subjectAltName and issuerAltname.\n# Import the email address.\n# subjectAltName=email:copy\n# An alternative to produce certificates that aren't\n# deprecated according to PKIX.\n# subjectAltName=email:move\n\n# Copy subject details\n# issuerAltName=issuer:copy\n\n# This really needs to be in place for it to be a proxy certificate.\nproxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo\n\n####################################################################\n[ tsa ]\n\ndefault_tsa = tsa_config1\t# the default TSA section\n\n[ tsa_config1 ]\n\n# These are used by the TSA reply generation only.\ndir\t\t= ./demoCA\t\t# TSA root directory\nserial\t\t= $dir/tsaserial\t# The current serial number (mandatory)\ncrypto_device\t= builtin\t\t# OpenSSL engine to use for signing\nsigner_cert\t= $dir/tsacert.pem \t# The TSA signing certificate\n\t\t\t\t\t# (optional)\ncerts\t\t= $dir/cacert.pem\t# Certificate chain to include in reply\n\t\t\t\t\t# (optional)\nsigner_key\t= $dir/private/tsakey.pem # The TSA private key (optional)\nsigner_digest  = sha256\t\t\t# Signing digest to use. (Optional)\ndefault_policy\t= tsa_policy1\t\t# Policy if request did not specify it\n\t\t\t\t\t# (optional)\nother_policies\t= tsa_policy2, tsa_policy3\t# acceptable policies (optional)\ndigests     = sha1, sha256, sha384, sha512  # Acceptable message digests (mandatory)\naccuracy\t= secs:1, millisecs:500, microsecs:100\t# (optional)\nclock_precision_digits  = 0\t# number of digits after dot. (optional)\nordering\t\t= yes\t# Is ordering defined for timestamps?\n\t\t\t\t# (optional, default: no)\ntsa_name\t\t= yes\t# Must the TSA name be included in the reply?\n\t\t\t\t# (optional, default: no)\ness_cert_id_chain\t= no\t# Must the ESS cert id chain be included?\n\t\t\t\t# (optional, default: no)\ness_cert_id_alg\t\t= sha1\t# algorithm to compute certificate\n\t\t\t\t# identifier (optional, default: sha1)\n\n[insta] # CMP using Insta Demo CA\n# Message transfer\nserver = pki.certificate.fi:8700\n# proxy = # set this as far as needed, e.g., http://192.168.1.1:8080\n# tls_use = 0\npath = pkix/\n\n# Server authentication\nrecipient = \"/C=FI/O=Insta Demo/CN=Insta Demo CA\" # or set srvcert or issuer\nignore_keyusage = 1 # potentially needed quirk\nunprotected_errors = 1 # potentially needed quirk\nextracertsout = insta.extracerts.pem\n\n# Client authentication\nref = 3078 # user identification\nsecret = pass:insta # can be used for both client and server side\n\n# Generic message options\ncmd = ir # default operation, can be overridden on cmd line with, e.g., kur\n\n# Certificate enrollment\nsubject = \"/CN=openssl-cmp-test\"\nnewkey = insta.priv.pem\nout_trusted = apps/insta.ca.crt # does not include keyUsage digitalSignature\ncertout = insta.cert.pem\n\n[pbm] # Password-based protection for Insta CA\n# Server and client authentication\nref = $insta::ref # 3078\nsecret = $insta::secret # pass:insta\n\n[signature] # Signature-based protection for Insta CA\n# Server authentication\ntrusted = $insta::out_trusted # apps/insta.ca.crt\n\n# Client authentication\nsecret = # disable PBM\nkey = $insta::newkey # insta.priv.pem\ncert = $insta::certout # insta.cert.pem\n\n[ir]\ncmd = ir\n\n[cr]\ncmd = cr\n\n[kur]\n# Certificate update\ncmd = kur\noldcert = $insta::certout # insta.cert.pem\n\n[rr]\n# Certificate revocation\ncmd = rr", 4096) = 4096 <0.000028>
00:33:13.616829 brk(0x55ab539000)       = 0x55ab539000 <0.000051>
00:33:13.617058 read(4, "\noldcert = $insta::certout # insta.cert.pem\n", 4096) = 44 <0.000028>
00:33:13.617164 read(4, "", 4096)       = 0 <0.000025>
00:33:13.617263 close(4)                = 0 <0.000031>
00:33:13.617420 futex(0x7fa1a92b70, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000026>
00:33:13.617518 futex(0x7fa1b53814, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000026>
00:33:13.617626 sysinfo({uptime=33838, loads=[12960, 8992, 6368], totalram=8189632512, freeram=7073710080, sharedram=68243456, bufferram=32440320, totalswap=209711104, freeswap=209711104, procs=170, totalhigh=0, freehigh=0, mem_unit=1}) = 0 <0.000122>
00:33:13.617864 futex(0x7fa1b5382c, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000026>
00:33:13.618052 futex(0x7fa1b53830, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000025>
00:33:13.618146 futex(0x7fa1b53800, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000025>
00:33:13.620992 brk(0x55ab55a000)       = 0x55ab55a000 <0.000049>
00:33:13.621156 brk(0x55ab559000)       = 0x55ab559000 <0.000065>
00:33:13.622252 futex(0x7fa1a92208, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000028>
00:33:13.623037 futex(0x7fa1a92c80, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000028>
00:33:13.623202 getpid()                = 5273 <0.000026>
00:33:13.623331 getrandom("\x8a\x30\xe7\x50\xbd\x0f\x4e\xde\xc3\x0f\x81\x2e\x1f\xa1\xd5\xff\x8f\xa9\xf4\x44\x78\x41\x70\xaa\xbe\xff\xa8\x28\x47\x63\x07\xf0\x8a\xa3\x23\xff\xf6\x0e\x5d\x2c\x81\xc0\x93\x7c\x53\xd1\x6a\x52", 48, 0) = 48 <0.000030>
00:33:13.623484 getpid()                = 5273 <0.000025>
00:33:13.623589 getpid()                = 5273 <0.000025>
00:33:13.623721 getpid()                = 5273 <0.000025>
00:33:13.623814 getpid()                = 5273 <0.000025>
00:33:13.623942 getpid()                = 5273 <0.000025>
00:33:13.624050 getpid()                = 5273 <0.000025>
00:33:13.624174 getpid()                = 5273 <0.000025>
00:33:13.624267 getpid()                = 5273 <0.000025>
00:33:13.624390 getpid()                = 5273 <0.000025>
00:33:13.624488 getpid()                = 5273 <0.000025>
00:33:13.624596 newfstatat(AT_FDCWD, "/home/mumblepi/.postgresql/root.crt", 0x7fdc0d5eb8, 0) = -1 ENOENT (No such file or directory) <0.000031>
00:33:13.624721 newfstatat(AT_FDCWD, "/home/mumblepi/.postgresql/postgresql.crt", 0x7fdc0d5eb8, 0) = -1 ENOENT (No such file or directory) <0.000026>
00:33:13.624869 futex(0x7fa1a92134, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000027>
00:33:13.624990 brk(0x55ab57c000)       = 0x55ab57c000 <0.000045>
00:33:13.625177 getpid()                = 5273 <0.000026>
00:33:13.625282 getpid()                = 5273 <0.000025>
00:33:13.625493 getpid()                = 5273 <0.000025>
00:33:13.625760 sendto(3, "\26\3\1\0012\1\0\1.\3\3\377\300Q\232\23\360}\275\250>\375iv;z\356]\267\333;\232\355R\212\"\4Zm\234\206c\231 \345\7\200k\342\0#\33\202P\17[\275\31S\262\242W\"\27\0217\214qlf\207ur!\233t\0>\23\2\23\3\23\1\300,\3000\0\237\314\251\314\250\314\252\300+\300/\0\236\300$\300(\0k\300#\300'\0g\300\n\300\24\09\300\t\300\23\0003\0\235\0\234\0=\0<\0005\0/\0\377\1\0\0\247\0\0\0\16\0\f\0\0\tlocalhost\0\v\0\4\3\0\1\2\0\n\0\26\0\24\0\35\0\27\0\36\0\31\0\30\1\0\1\1\1\2\1\3\1\4\0#\0\0\0\26\0\0\0\27\0\0\0\r\0*\0(\4\3\5\3\6\3\10\7\10\10\10\t\10\n\10\v\10\4\10\5\10\6\4\1\5\1\6\1\3\3\3\1\3\2\4\2\5\2\6\2\0+\0\5\4\3\4\3\3\0-\0\2\1\1\0003\0&\0$\0\35\0 &1\254\302D\37\7\fTm\337\2224\345=\30?I\24\331\17\362\321i\364I\352\313X\20\335#", 311, MSG_NOSIGNAL, NULL, 0) = 311 <0.000118>
00:33:13.626012 recvfrom(3, 0x55ab55bc43, 5, 0, NULL, NULL) = -1 EAGAIN (Resource temporarily unavailable) <0.000028>
00:33:13.626134 ppoll([{fd=3, events=POLLIN|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLIN}]) <0.000444>
00:33:13.626731 recvfrom(3, "\26\3\3\0X", 5, 0, NULL, NULL) = 5 <0.000029>
00:33:13.626875 recvfrom(3, "\2\0\0T\3\3\317!\255t\345\232a\21\276\35\214\2\36e\270\221\302\242\21\26z\273\214^\7\236\t\342\310\2503\234 \345\7\200k\342\0#\33\202P\17[\275\31S\262\242W\"\27\0217\214qlf\207ur!\233t\23\2\0\0\f\0+\0\2\3\4\0003\0\2\0\27", 88, 0, NULL, NULL) = 88 <0.000027>
00:33:13.627292 getpid()                = 5273 <0.000028>
00:33:13.627612 sendto(3, "\24\3\3\0\1\1\26\3\3\1S\1\0\1O\3\3\377\300Q\232\23\360}\275\250>\375iv;z\356]\267\333;\232\355R\212\"\4Zm\234\206c\231 \345\7\200k\342\0#\33\202P\17[\275\31S\262\242W\"\27\0217\214qlf\207ur!\233t\0>\23\2\23\3\23\1\300,\3000\0\237\314\251\314\250\314\252\300+\300/\0\236\300$\300(\0k\300#\300'\0g\300\n\300\24\09\300\t\300\23\0003\0\235\0\234\0=\0<\0005\0/\0\377\1\0\0\310\0\0\0\16\0\f\0\0\tlocalhost\0\v\0\4\3\0\1\2\0\n\0\26\0\24\0\35\0\27\0\36\0\31\0\30\1\0\1\1\1\2\1\3\1\4\0#\0\0\0\26\0\0\0\27\0\0\0\r\0*\0(\4\3\5\3\6\3\10\7\10\10\10\t\10\n\10\v\10\4\10\5\10\6\4\1\5\1\6\1\3\3\3\1\3\2\4\2\5\2\6\2\0+\0\5\4\3\4\3\3\0-\0\2\1\1\0003\0G\0E\0\27\0A\4(s\16\317\224k\345\303\233\250\345\205\27\364\177ilfl2\355\272\303\224\246\311\207\225\341%\366\372\311\2617\3511\245\373k\351\203\2004\300\1\35|\300\367\v\21S3\24\274\5\225\30\266\2\201^\335", 350, MSG_NOSIGNAL, NULL, 0) = 350 <0.000104>
00:33:13.627870 recvfrom(3, "\24\3\3\0\1", 5, 0, NULL, NULL) = 5 <0.000028>
00:33:13.628002 recvfrom(3, "\1", 1, 0, NULL, NULL) = 1 <0.000029>
00:33:13.628118 recvfrom(3, 0x55ab55bc43, 5, 0, NULL, NULL) = -1 EAGAIN (Resource temporarily unavailable) <0.000027>
00:33:13.628234 ppoll([{fd=3, events=POLLIN|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLIN}]) <0.008436>
00:33:13.636845 recvfrom(3, "\26\3\3\0\233", 5, 0, NULL, NULL) = 5 <0.000030>
00:33:13.637006 recvfrom(3, "\2\0\0\227\3\3//\vC(_=(\355\306\321\225\221\2bj\fD\275\273\200g\373\27*\363j\347l\300\251\277 \345\7\200k\342\0#\33\202P\17[\275\31S\262\242W\"\27\0217\214qlf\207ur!\233t\23\2\0\0O\0+\0\2\3\4\0003\0E\0\27\0A\4<\277\366\35*\304\352\354\312\207\221s\2620\335\337\333\252J\256r\365\26T\n\36\220\212\31\317.\220Q`\370\16 \r\263\f\335\231\306\177Q}&z\215R\243[\334t\300a$\271\223\306\206Q\353/", 155, 0, NULL, NULL) = 155 <0.000027>
00:33:13.638088 recvfrom(3, "\27\3\3\0\27", 5, 0, NULL, NULL) = 5 <0.000033>
00:33:13.638234 recvfrom(3, "@\320\316'\245T\304\25p\r\254\214W\217IZRO\356\256\235 \327", 23, 0, NULL, NULL) = 23 <0.000027>
00:33:13.638369 recvfrom(3, "\27\3\3\3\27", 5, 0, NULL, NULL) = 5 <0.000028>
00:33:13.638482 recvfrom(3, "\215hk}\330\35\360\375\253c9\20Y\206+\215\2fr\223\314/\201p\307_\3366\370\6\250T\301\v+F\207D\16n\300\16\265'W\201\250\271\367\3753Sr\244\247\204\211\n\37\\\250q\374\335\21\314\365\364!\20\361\224GE\247P\303+\203\314\370\244\357\277\256\305t=\f:\23o\23\343o.\254n[\335\341\30'\n}Sq\304\327Z\0\227s\246\22\224\317\202\337\4+\350\363\0262\301\3500\207\372x\30\312F\373=\226\314\3C\316\325\253gY%\361 \215\3369w\21bk|z\377\6*\346\371\352\215./;.\255\3678'*\21\3426\3365\326\323\366\261\343~\211\254\247\7\361z\356\224}>\253V\357\300Q\3172\335\31h\262Y\316\346f\320\360\20\333\20\256.z\320\321V\224\250\311J\310;\17\34\252\316\252|\263\22\263P\231\310\342\250c{\215\10UI\266L\3109\256aM\255\274<>~.)\3266\4~\t)\244\332\264\330\307\246\335\322`\221\177\310\334\363\316\27\374l;\231,]\27\317\16\3\335\203\236o\326\231\226 ^\267\20},\235zsm\324\213W\372;.\354\351\336\1\v1agn\212VD4\340w#\17\316;\20\270\312\337>\345\227\207\\\35\274\366\367\20\376\206\335\366\357l$\5\373\335|\30\354;\327J\253K;\26\16)\27a\307\361\24\327=\f\325\10\362jR\324\363\316\30\324\242\202\3572mq\311\343\277\215\223a\6\\/\215RfX\323\327\277\366\3329u\27a\374\234\261\302\250\232sZ\263\243\226\2\377\321U\245W\6\232\306F\213w\\y\2\375Wt\334\200\n$\233r\362\327i\231\253\256\301\177e\255\265D\236y\256Z\226,\264\21\375(\277\371pr\"\339D\37~\225\272Z\261.\204\30\234\377\356\224Qhl\213\256+\352\306Wr\370\17\214\342\265C'\330,(\24\271Z\rLC\320\256s#\246\213\316\373\0010K\375\312[\233\306{\231\32\32+[~\306\371\366\325\227|mx4Oo\337\221\350;; \272\177@\214\322\34m\222/j\7k\327mz\304s\20S\334\367\365\30\373\354\343\3251\261N\274\322\253\341\305 4g\326h\32b\223\22\201\371\374\276\256\324\200\215\22I\302\260\3F\301t\202R\221\3378)#\30y\226\223\336\t\356\341\26q\264u\331:^\321\265\246\336pi\333\255\262\211\350\4\232\211\36Z\333 >\251\232\222H\243\222\375:\303625\306\256\304L\"\vD\r%\247\302\37F\2720\351\270\10-\254\306xu\30\362\351\3354`A\3\277\30&f\314\304\323e\226\24@\1\255\327\366C\310{1\352/\232\374\341\221khz\254d\244\203\342Q\322\360\225E\362U\2656\361\323M\200\\\324\340\325\215\307\23-\303\375\271\0.1(ehp.\23\352-c\20\\\274\225\205j\371\204\352\337\2e0\315\276\364\317\177", 791, 0, NULL, NULL) = 791 <0.000027>
00:33:13.639915 recvfrom(3, "\27\3\3\1\31", 5, 0, NULL, NULL) = 5 <0.000040>
00:33:13.640129 recvfrom(3, "n\3575\256\350\3152\\o\302L\337\36\304\252e\200si\t.\256_XX\23\236\214\350H\260h{\341\34\371\221Q8<\261\214@Q\232\355\207\10\305\27]\2`\254\357\276\323\204o.>\222\246\264\7\35\226E8\267\21\312\24&\237U<]\335\306\256R\321\16\1\274\223\277\317\241z\323wv\203DS\224TUJ\275\27h\221\366\2170N\271\7=\273\23\255\324\335'O\5\264f*\271\276\17\232s{\2066\377\372\363a\21\327\226o)'.\255\r\205f\215j\345\10P\206j\276\336\333.\215\363\25?\300DG\216R\246\277O\333\344\265a\274\344\342\10\353\275\351\361\361\207\352\351\2361\335D\355'\364\340\7\245\246\r\303\375\r\202W\221\211\262\275\244I\225\261\256\264\346\201;\16u\275\225\252\270r\275\265\223\315,\371\234c\252\373\226\2631\240\32nf\377t1\377\355E\300\32V\346\235TI\"\2527\236\245^\302\344L4U(\v\245r\336G\370G\3201\30\311\334\311\333w\312{", 281, 0, NULL, NULL) = 281 <0.000029>
00:33:13.640592 recvfrom(3, "\27\3\3\0E", 5, 0, NULL, NULL) = 5 <0.000033>
00:33:13.640721 recvfrom(3, ";\273\3765|\351p\236x\373\362:iI\17C\254\263\313\30\225\240<\343\336dE\316\211\223\303\256\210\24\335\324]'Lp\r\252\362\17\25\332\313\303fA\313\n\320\337W\27\255!\312\357\333?\327o\372\240E\267m", 69, 0, NULL, NULL) = 69 <0.000030>
00:33:13.641063 sendto(3, "\27\3\3\0E\16!9\210\362\340\326M\26\253\277\274\272\244D\232\v\334\256\327\333b\334J*\352i\362\241\341\270\3\360\214?Y\352\4\365\346\326\2472\177\202\356&\275P\327\236\321\317\2755\31dXOl]g\261\274\31\215L\244\224", 74, MSG_NOSIGNAL, NULL, 0) = 74 <0.000113>
00:33:13.641362 ppoll([{fd=3, events=POLLOUT|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLOUT}]) <0.000035>
00:33:13.641526 sendto(3, "\27\3\3\0h\224a\237\203H\366A\317\306\264\302q\31\313\301\337\33\225r\365>U\260\364%tZ\\\207\361\253\242\16#w+\331\313\227`fL\32\37732\361\354\v5*g\235\2616\213\251<\317v{Yf]e\260w\235A\2\341f\3300@\10\r\336\230TK\34lZC\20\246\242\312\v\252\246K/\320\312\20D\257W\317\324\310\330", 109, MSG_NOSIGNAL, NULL, 0) = 109 <0.000060>
00:33:13.641693 ppoll([{fd=3, events=POLLIN|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLIN}]) <0.000031>
00:33:13.641821 recvfrom(3, "\27\3\3\0J", 5, 0, NULL, NULL) = 5 <0.000030>
00:33:13.641948 recvfrom(3, "\310\254\222\362(\322\310\367\301<\227,bz\2733w\237\310\210\321[\217\231\366;ed\212e6\252\376?\253\366V3`R\251\20\r\236\2107\344\243M\332\34\22%]9\236\243j\231\23\373\243o\234\200\257\256e\321\234\303t\375t", 74, 0, NULL, NULL) = 74 <0.000030>
00:33:13.642213 recvfrom(3, "\27\3\3\0J", 5, 0, NULL, NULL) = 5 <0.000035>
00:33:13.642359 recvfrom(3, "\342H\200#@\267\317\2578\206\241H\334\265\207W\223p\335\213v\1\242q\252\322\33-\202\306?\241\275\354GN\177N\2\373C\202\214\335\2325h\340(\7Cp\0237|,R\337^\366\24\3\331\240?\306\316\37\361\306\23\355;s", 74, 0, NULL, NULL) = 74 <0.000030>
00:33:13.642566 recvfrom(3, 0x55ab55bc43, 5, 0, NULL, NULL) = -1 EAGAIN (Resource temporarily unavailable) <0.000031>
00:33:13.642730 ppoll([{fd=3, events=POLLIN|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLIN}]) <0.000818>
00:33:13.643689 recvfrom(3, "\27\3\3\0<", 5, 0, NULL, NULL) = 5 <0.000031>
00:33:13.643835 recvfrom(3, "\0\2\204:\342\324\246\260s\58\262\31#\246\233RivB\230D\20\243\253CM\10\33n\224\275\\E\354\240-\213}\356\351j'p\345R\300\304\233D!'\t\7~\22=\250y\243", 60, 0, NULL, NULL) = 60 <0.000030>
00:33:13.644009 openat(AT_FDCWD, "/usr/share/locale/en_GB.UTF-8/LC_MESSAGES/psql-16.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000039>
00:33:13.644138 openat(AT_FDCWD, "/usr/share/locale/en_GB.utf8/LC_MESSAGES/psql-16.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000030>
00:33:13.644244 openat(AT_FDCWD, "/usr/share/locale/en_GB/LC_MESSAGES/psql-16.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000031>
00:33:13.644354 openat(AT_FDCWD, "/usr/share/locale/en.UTF-8/LC_MESSAGES/psql-16.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.644461 openat(AT_FDCWD, "/usr/share/locale/en.utf8/LC_MESSAGES/psql-16.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000029>
00:33:13.644565 openat(AT_FDCWD, "/usr/share/locale/en/LC_MESSAGES/psql-16.mo", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000031>
00:33:13.644720 sendto(3, "\27\3\3\0\23\363\241\2<%\373\342z\263\366g;fv\265\308\26\n", 24, MSG_NOSIGNAL, NULL, 0) = 24 <0.000074>
00:33:13.645004 close(3)                = 0 <0.000089>
00:33:13.645189 openat(AT_FDCWD, "/dev/tty", O_RDONLY) = 3 <0.000055>
00:33:13.645342 openat(AT_FDCWD, "/dev/tty", O_WRONLY|O_CREAT|O_TRUNC, 0666) = 4 <0.000039>
00:33:13.645468 ioctl(3, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHO|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000032>
00:33:13.645596 ioctl(3, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHO|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000026>
00:33:13.645706 ioctl(3, SNDCTL_TMR_CONTINUE or TCSETSF, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000039>
00:33:13.645828 ioctl(3, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000026>
00:33:13.645952 newfstatat(4, "", {st_mode=S_IFCHR|0666, st_rdev=makedev(0x5, 0), ...}, AT_EMPTY_PATH) = 0 <0.000031>
00:33:13.646080 ioctl(4, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000027>
00:33:13.646222 write(4, "Password for user postgres: ", 28) = 28 <0.000044>
00:33:13.646633 newfstatat(3, "", {st_mode=S_IFCHR|0666, st_rdev=makedev(0x5, 0), ...}, AT_EMPTY_PATH) = 0 <0.000042>
00:33:13.646884 ioctl(3, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000032>
00:33:13.647007 read(3, "Notarobot2023\n", 4096) = 14 <10.922930>
00:33:24.570251 ioctl(3, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000084>
00:33:24.570607 ioctl(3, SNDCTL_TMR_CONTINUE or TCSETSF, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHO|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000092>
00:33:24.570971 ioctl(3, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHO|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000073>
00:33:24.571253 write(4, "\n", 1)       = 1 <0.000122>
00:33:24.571580 close(3)                = 0 <0.000094>
00:33:24.571859 close(4)                = 0 <0.000075>
00:33:24.572229 newfstatat(AT_FDCWD, "/etc/nsswitch.conf", {st_mode=S_IFREG|0644, st_size=526, ...}, 0) = 0 <0.000082>
00:33:24.572553 newfstatat(AT_FDCWD, "/etc/resolv.conf", {st_mode=S_IFREG|0644, st_size=53, ...}, 0) = 0 <0.000077>
00:33:24.572855 openat(AT_FDCWD, "/etc/hosts", O_RDONLY|O_CLOEXEC) = 3 <0.000095>
00:33:24.573150 newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=128, ...}, AT_EMPTY_PATH) = 0 <0.000074>
00:33:24.573444 lseek(3, 0, SEEK_SET)   = 0 <0.000071>
00:33:24.573698 read(3, "127.0.0.1\tlocalhost\n::1\t\tlocalhost ip6-localhost ip6-loopback\nff02::1\t\tip6-allnodes\nff02::2\t\tip6-allrouters\n\n127.0.1.1\tmumblepi\n", 4096) = 128 <0.000077>
00:33:24.573982 read(3, "", 4096)       = 0 <0.000071>
00:33:24.574229 close(3)                = 0 <0.000076>
00:33:24.574484 socket(AF_NETLINK, SOCK_RAW|SOCK_CLOEXEC, NETLINK_ROUTE) = 3 <0.000105>
00:33:24.574848 bind(3, {sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, 12) = 0 <0.000087>
00:33:24.575136 getsockname(3, {sa_family=AF_NETLINK, nl_pid=5273, nl_groups=00000000}, [12]) = 0 <0.000074>
00:33:24.575418 sendto(3, [{nlmsg_len=20, nlmsg_type=0x16 /* NLMSG_??? */, nlmsg_flags=NLM_F_REQUEST|0x300, nlmsg_seq=1722497604, nlmsg_pid=0}, "\x00\x00\x00\x00"], 20, 0, {sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, 12) = 20 <0.000128>
00:33:24.587240 recvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=[[{nlmsg_len=76, nlmsg_type=0x14 /* NLMSG_??? */, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1722497604, nlmsg_pid=5273}, "\x02\x08\x80\xfe\x01\x00\x00\x00\x08\x00\x01\x00\x7f\x00\x00\x01\x08\x00\x02\x00\x7f\x00\x00\x01\x07\x00\x03\x00\x6c\x6f\x00\x00\x08\x00\x08\x00\x80\x00\x00\x00\x14\x00\x06\x00\xff\xff\xff\xff\xff\xff\xff\xff\x75\x01\x00\x00\x75\x01\x00\x00"], [{nlmsg_len=88, nlmsg_type=0x14 /* NLMSG_??? */, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1722497604, nlmsg_pid=5273}, "\x02\x18\x80\x00\x02\x00\x00\x00\x08\x00\x01\x00\xc0\xa8\x00\xbc\x08\x00\x02\x00\xc0\xa8\x00\xbc\x08\x00\x04\x00\xc0\xa8\x00\xff\x09\x00\x03\x00\x65\x74\x68\x30\x00\x00\x00\x00\x08\x00\x08\x00\x80\x02\x00\x00\x14\x00\x06\x00\xff\xff\xff\xff\xff\xff\xff\xff\x82\x05\x00\x00\x82\x05\x00\x00"]], iov_len=4096}], msg_iovlen=1, msg_controllen=0, msg_flags=0}, 0) = 164 <0.000104>
00:33:24.599143 recvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=[[{nlmsg_len=72, nlmsg_type=0x14 /* NLMSG_??? */, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1722497604, nlmsg_pid=5273}, "\x0a\x80\x80\xfe\x01\x00\x00\x00\x14\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x14\x00\x06\x00\xff\xff\xff\xff\xff\xff\xff\xff\x75\x01\x00\x00\x75\x01\x00\x00\x08\x00\x08\x00\x80\x02\x00\x00"], [{nlmsg_len=72, nlmsg_type=0x14 /* NLMSG_??? */, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1722497604, nlmsg_pid=5273}, "\x0a\x40\x80\xfd\x02\x00\x00\x00\x14\x00\x01\x00\xfe\x80\x00\x00\x00\x00\x00\x00\x87\xee\xe2\x8a\xb4\xa2\xca\x7d\x14\x00\x06\x00\xff\xff\xff\xff\xff\xff\xff\xff\x80\x05\x00\x00\x80\x05\x00\x00\x08\x00\x08\x00\x80\x02\x00\x00"]], iov_len=4096}], msg_iovlen=1, msg_controllen=0, msg_flags=0}, 0) = 144 <0.000093>
00:33:24.611239 recvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=[{nlmsg_len=20, nlmsg_type=NLMSG_DONE, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1722497604, nlmsg_pid=5273}, 0], iov_len=4096}], msg_iovlen=1, msg_controllen=0, msg_flags=0}, 0) = 20 <0.000078>
00:33:24.623079 close(3)                = 0 <0.000099>
00:33:24.623385 socket(AF_INET, SOCK_DGRAM|SOCK_CLOEXEC, IPPROTO_IP) = 3 <0.000090>
00:33:24.623651 connect(3, {sa_family=AF_INET, sin_port=htons(5432), sin_addr=inet_addr("127.0.0.1")}, 16) = 0 <0.000117>
00:33:24.623978 getsockname(3, {sa_family=AF_INET, sin_port=htons(43140), sin_addr=inet_addr("127.0.0.1")}, [28 => 16]) = 0 <0.000070>
00:33:24.624262 close(3)                = 0 <0.000090>
00:33:24.624520 socket(AF_INET6, SOCK_DGRAM|SOCK_CLOEXEC, IPPROTO_IP) = 3 <0.000086>
00:33:24.624777 connect(3, {sa_family=AF_INET6, sin6_port=htons(5432), sin6_flowinfo=htonl(0), inet_pton(AF_INET6, "::1", &sin6_addr), sin6_scope_id=0}, 28) = 0 <0.000118>
00:33:24.625100 getsockname(3, {sa_family=AF_INET6, sin6_port=htons(55635), sin6_flowinfo=htonl(0), inet_pton(AF_INET6, "::1", &sin6_addr), sin6_scope_id=0}, [28]) = 0 <0.000071>
00:33:24.625383 close(3)                = 0 <0.000091>
00:33:24.625673 socket(AF_INET6, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, IPPROTO_IP) = 3 <0.000084>
00:33:24.625952 setsockopt(3, SOL_TCP, TCP_NODELAY, [1], 4) = 0 <0.000074>
00:33:24.626217 setsockopt(3, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0 <0.000071>
00:33:24.626477 connect(3, {sa_family=AF_INET6, sin6_port=htons(5432), sin6_flowinfo=htonl(0), inet_pton(AF_INET6, "::1", &sin6_addr), sin6_scope_id=0}, 28) = -1 EINPROGRESS (Operation now in progress) <0.002250>
00:33:24.629039 ppoll([{fd=3, events=POLLOUT|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLOUT}]) <0.000082>
00:33:24.629391 getsockopt(3, SOL_SOCKET, SO_ERROR, [0], [4]) = 0 <0.000070>
00:33:24.629670 getsockname(3, {sa_family=AF_INET6, sin6_port=htons(52276), sin6_flowinfo=htonl(0), inet_pton(AF_INET6, "::1", &sin6_addr), sin6_scope_id=0}, [128 => 28]) = 0 <0.000074>
00:33:24.630033 ppoll([{fd=3, events=POLLOUT|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLOUT}]) <0.000074>
00:33:24.630343 newfstatat(AT_FDCWD, "/etc/gss/mech", 0x7fdc0d64e8, AT_SYMLINK_NOFOLLOW) = -1 ENOENT (No such file or directory) <0.000078>
00:33:24.630707 openat(AT_FDCWD, "/etc/gss/mech.d", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = 4 <0.000097>
00:33:24.631021 newfstatat(4, "", {st_mode=S_IFDIR|0755, st_size=4096, ...}, AT_EMPTY_PATH) = 0 <0.000072>
00:33:24.631333 getdents64(4, 0x55ab556710 /* 2 entries */, 32768) = 48 <0.000115>
00:33:24.631655 getdents64(4, 0x55ab556710 /* 0 entries */, 32768) = 0 <0.000066>
00:33:24.631896 close(4)                = 0 <0.000079>
00:33:24.632296 newfstatat(AT_FDCWD, "/etc/krb5.conf", 0x7fdc0d42c8, 0) = -1 ENOENT (No such file or directory) <0.000076>
00:33:24.632620 geteuid()               = 1000 <0.000065>
00:33:24.632886 openat(AT_FDCWD, "/etc/krb5/user/1000/client.keytab", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000078>
00:33:24.633199 getuid()                = 1000 <0.000066>
00:33:24.633453 newfstatat(AT_FDCWD, "/tmp/krb5cc_1000", 0x7fdc0d63d8, 0) = -1 ENOENT (No such file or directory) <0.000072>
00:33:24.633859 newfstatat(AT_FDCWD, "/etc/krb5.conf", 0x7fdc0d3f38, 0) = -1 ENOENT (No such file or directory) <0.000072>
00:33:24.634149 geteuid()               = 1000 <0.000065>
00:33:24.634404 openat(AT_FDCWD, "/etc/krb5/user/1000/client.keytab", O_RDONLY) = -1 ENOENT (No such file or directory) <0.000079>
00:33:24.634739 getuid()                = 1000 <0.000065>
00:33:24.634992 newfstatat(AT_FDCWD, "/tmp/krb5cc_1000", 0x7fdc0d6048, 0) = -1 ENOENT (No such file or directory) <0.000070>
00:33:24.635300 sendto(3, "\0\0\0\10\4\322\26/", 8, MSG_NOSIGNAL, NULL, 0) = 8 <0.000240>
00:33:24.635787 ppoll([{fd=3, events=POLLIN|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLIN}]) <0.000076>
00:33:24.636086 recvfrom(3, "S", 16384, 0, NULL, NULL) = 1 <0.000076>
00:33:24.638073 getpid()                = 5273 <0.000070>
00:33:24.638389 getpid()                = 5273 <0.000065>
00:33:24.638739 getpid()                = 5273 <0.000070>
00:33:24.639012 getpid()                = 5273 <0.000065>
00:33:24.639276 newfstatat(AT_FDCWD, "/home/mumblepi/.postgresql/root.crt", 0x7fdc0d5eb8, 0) = -1 ENOENT (No such file or directory) <0.000076>
00:33:24.639571 newfstatat(AT_FDCWD, "/home/mumblepi/.postgresql/postgresql.crt", 0x7fdc0d5eb8, 0) = -1 ENOENT (No such file or directory) <0.000069>
00:33:24.639972 getpid()                = 5273 <0.000067>
00:33:24.640234 getpid()                = 5273 <0.000065>
00:33:24.640688 getpid()                = 5273 <0.000069>
00:33:24.641317 sendto(3, "\26\3\1\0012\1\0\1.\3\3a\327\221\277\31\256\227\7\330\256H\2753%\243\335\341\352\226y\v\33k\2336\317\246\313\266 \203B \360\r\201\210Yo\315E\301\322\216\366\341|m\0224U\351 \244\20\244\227I\244)\205f\275\26\7\0>\23\2\23\3\23\1\300,\3000\0\237\314\251\314\250\314\252\300+\300/\0\236\300$\300(\0k\300#\300'\0g\300\n\300\24\09\300\t\300\23\0003\0\235\0\234\0=\0<\0005\0/\0\377\1\0\0\247\0\0\0\16\0\f\0\0\tlocalhost\0\v\0\4\3\0\1\2\0\n\0\26\0\24\0\35\0\27\0\36\0\31\0\30\1\0\1\1\1\2\1\3\1\4\0#\0\0\0\26\0\0\0\27\0\0\0\r\0*\0(\4\3\5\3\6\3\10\7\10\10\10\t\10\n\10\v\10\4\10\5\10\6\4\1\5\1\6\1\3\3\3\1\3\2\4\2\5\2\6\2\0+\0\5\4\3\4\3\3\0-\0\2\1\1\0003\0&\0$\0\35\0 \235\215\36Vd\245ho\22\33\256n\243\354sk\227\336\243\333\3126\377\24\306\27j\343lTF.", 311, MSG_NOSIGNAL, NULL, 0) = 311 <0.000204>
00:33:24.641794 recvfrom(3, 0x55ab55bbb3, 5, 0, NULL, NULL) = -1 EAGAIN (Resource temporarily unavailable) <0.000072>
00:33:24.642071 ppoll([{fd=3, events=POLLIN|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLIN}]) <0.000964>
00:33:24.643315 recvfrom(3, "\26\3\3\0X", 5, 0, NULL, NULL) = 5 <0.000072>
00:33:24.643642 recvfrom(3, "\2\0\0T\3\3\317!\255t\345\232a\21\276\35\214\2\36e\270\221\302\242\21\26z\273\214^\7\236\t\342\310\2503\234 \360\r\201\210Yo\315E\301\322\216\366\341|m\0224U\351 \244\20\244\227I\244)\205f\275\26\7\23\2\0\0\f\0+\0\2\3\4\0003\0\2\0\27", 88, 0, NULL, NULL) = 88 <0.000072>
00:33:24.644478 getpid()                = 5273 <0.000070>
00:33:24.645155 sendto(3, "\24\3\3\0\1\1\26\3\3\1S\1\0\1O\3\3a\327\221\277\31\256\227\7\330\256H\2753%\243\335\341\352\226y\v\33k\2336\317\246\313\266 \203B \360\r\201\210Yo\315E\301\322\216\366\341|m\0224U\351 \244\20\244\227I\244)\205f\275\26\7\0>\23\2\23\3\23\1\300,\3000\0\237\314\251\314\250\314\252\300+\300/\0\236\300$\300(\0k\300#\300'\0g\300\n\300\24\09\300\t\300\23\0003\0\235\0\234\0=\0<\0005\0/\0\377\1\0\0\310\0\0\0\16\0\f\0\0\tlocalhost\0\v\0\4\3\0\1\2\0\n\0\26\0\24\0\35\0\27\0\36\0\31\0\30\1\0\1\1\1\2\1\3\1\4\0#\0\0\0\26\0\0\0\27\0\0\0\r\0*\0(\4\3\5\3\6\3\10\7\10\10\10\t\10\n\10\v\10\4\10\5\10\6\4\1\5\1\6\1\3\3\3\1\3\2\4\2\5\2\6\2\0+\0\5\4\3\4\3\3\0-\0\2\1\1\0003\0G\0E\0\27\0A\4T\262\307\357\351\20\250b>v\30\333\335\tr\374\26\245\372_d\206\265\336\203\323\375h\t\267\331S\3740\246\200\2031\f=\320\246\357\373\237zE\277\206\270\271\205\2716\\\fO\307\303\324\246\356\307\277", 350, MSG_NOSIGNAL, NULL, 0) = 350 <0.000194>
00:33:24.645626 recvfrom(3, "\24\3\3\0\1", 5, 0, NULL, NULL) = 5 <0.000074>
00:33:24.645939 recvfrom(3, "\1", 1, 0, NULL, NULL) = 1 <0.000074>
00:33:24.646235 recvfrom(3, 0x55ab55bbb3, 5, 0, NULL, NULL) = -1 EAGAIN (Resource temporarily unavailable) <0.000071>
00:33:24.646519 ppoll([{fd=3, events=POLLIN|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLIN}]) <0.020779>
00:33:24.667527 recvfrom(3, "\26\3\3\0\233", 5, 0, NULL, NULL) = 5 <0.000033>
00:33:24.667698 recvfrom(3, "\2\0\0\227\3\3\6\366\376\325\245:\340\32\231\264\303\230ev5\343\305\232\203\227\235x\363\25\0_\365\257p\341\321\222 \360\r\201\210Yo\315E\301\322\216\366\341|m\0224U\351 \244\20\244\227I\244)\205f\275\26\7\23\2\0\0O\0+\0\2\3\4\0003\0E\0\27\0A\0044\365S.;\354a\211\30\207\324\367\333Q\371\200y\3760\10\31\234\203\30\31\202\230=\256\7\275T`O\320\3248S\277U(\200\r\23AX\215\227\234\207\310\317t\327:\274\266\0175\202\231\325#\305", 155, 0, NULL, NULL) = 155 <0.000030>
00:33:24.668621 recvfrom(3, "\27\3\3\0\27", 5, 0, NULL, NULL) = 5 <0.000035>
00:33:24.668767 recvfrom(3, "\222\353\267\337-wy\n\212iW\2516\v\265U\34\277T8\271f\320", 23, 0, NULL, NULL) = 23 <0.000030>
00:33:24.668908 recvfrom(3, "\27\3\3\3\27", 5, 0, NULL, NULL) = 5 <0.000030>
00:33:24.669026 recvfrom(3, "\r\22\10OH\222Y}hM\224\\`\232\21\2\277\246|_b9\377d\272\251\322d~\375O\1\251\243l`M\23\371\306@\r@\337\20\363\6\10>\336\204\343g\203\262\304\307\241\\h\352\210x\260C\340,\225\225-!%\32@\f\350T\211S\340{\231\273\362\254\270\3045\334\237\205\26Y\350\302\4\314\264aA\217\233\336\t\367\301\375\211\377\306\7\314\245r\330\276\315\362\222\216\311\251\334\2520E\204\342\244\201\316>\34\16c\t\310*\16\312F\255Q\207pu\335?8\221\23V\230\344\222\0066q\203\341\311\2\344\240S\357=\323\246\3\277\256-4\0\327\230\265=\321+\207\222,\226\25Y\1\235\\\361\22\6\305|~{\21\242\16\243i\221H\372\260}#\257\244\"\34\326\344U3\26Ai\321\360\342\205\20\321\303\221\35\270\350\236\346\353\232\270&\366`\374\22q\301\215\260&\247\307\271h\0\376t\231\341\213\245\1\245\271\243\203.f\367+\\\27X\317\246P\305/z\256|.\31\311D\207m3l\226\\\310\326\335\26~]\226\0\355\326\237\361\34UK\t`:\201\315\362\3653\22\317\237\326C\322\366\t07\274\3\16\24\306\177B\25eC\324\250\346\276+\303Q\317\20N\276\2156mR\3455a\33\2G\232\355'Y'\220]W\253'J\347\35528\35\250\316kD\200\357\302)d\247\277\373\37\252\223\301\17\200E\23$\vj\205\365:\311\304\233}t\375\270\361x\312\16\6\21\377\34P\201\223\200i\226d\210\324\222\\\314\330S\5\324/\306\306\3725\210\30B\352\t\207c\255S\336\225\375ZD{\243c\246\233e3\316\5\205\204\250\378;^\363\217\r\354\350\203\370\362\247\22\334\177M\315\304\266\235ep\221\363\336?\375\225\242\253\271\377\364-\201\333\32-7\277\6n\32\350\2Y\363\352R\373'G9\247\35\233\372\205\2vN\214\262\275!\214\272\320g(\216N\346\n \3051\226\222\2319\v\217\230\246\330X\2444\300\314G\3?\221\34\21<\232\257\21553|Gh\214Z\303\37\256Z\251\6g\204o\217x\362\233\276\253\307\217\211=\215_c?h\241u\36(\244n\332L\367\304\223\236+\272tpBX\25\357\256\240RMN\273\315Q\30\"<\3\322\254\345\271&(\223\353L\22\320~\317(F\342\"17\263(\3312\220\354\336b\311\6\376c\232:\257\213\320j\257\226\16\351\tn\341\304\v\247\2\271O\356\204\36\237\365\177\260\214\335s\276\3\300/\313\200{8+\320\255kZ\31\234 \336\363\271\245\255\230\341,\33\231\322\316\32\2268\203\365\305\347\20\33UL\331\366scb\352H\240| \5\261/?\217\375\206\347&\326\243}#8%h\263bc\242\372\4;\362\211\306\205\352\5\32\21~\304\301\262\366{o\272\302R\21Td\237\372\317c\376\260\35\21\302h\355\30\357\v}\321\n9\f", 791, 0, NULL, NULL) = 791 <0.000031>
00:33:24.670011 recvfrom(3, "\27\3\3\1\31", 5, 0, NULL, NULL) = 5 <0.000038>
00:33:24.670184 recvfrom(3, "\370Um\357**\7\373\340\255\356\22\7\326\211\365\265z\22\321i\327\215\n\265E\343\"\225\177-.)\7Jv\234\242\t\244\251\6\307\357\271\375\306\363]\304\346\27\312i\352\317\337\225\177\200\260;nC\206\225\363\248O\241\356$\223\373_\205^\226\355n\374\2131\255B\346aPSa\260u\261\270\312\336\32\30\301?U\231\227\341\361z\357/1A\364\204C\340GsG\16\367&K\347y`?\n=\253_ A\0102\275\377\315|\237\235e\335M(V\211\326\330\224\332no\366J\254\242g\265k\304\371\327\276\210\v\330\2278\370\21\226\7\341\36t2\177V\354\313\254Q\4\251X\274\33\266l\2P Xr{\2753\333\322\220s\301\202\334\34\310/nR\27\205z\212\343\10\321e\230\335\360\363\31o\342~\206\226\2255\313\215/4R\253\263Nn\375\223S\ro\331\314\371\2121\315\241\226\374e\221\310\31\215\3z\316\324\365Mu^\25\0p\351[\235\tbt\23\231\201\362\315\353\331", 281, 0, NULL, NULL) = 281 <0.000030>
00:33:24.670621 recvfrom(3, "\27\3\3\0E", 5, 0, NULL, NULL) = 5 <0.000034>
00:33:24.670783 recvfrom(3, "\351f\363\235\344\205\\\4\f\275\347whX\251@A\200\277U\311$\35*\336gr\327\305\344\276\272yS\3734(\r=\371\215\6VJ\303\3=.\221U\261n\355\230\244v\32\2469!B\275v\357\177D\315\225\n", 69, 0, NULL, NULL) = 69 <0.000032>
00:33:24.671111 sendto(3, "\27\3\3\0E8c\36\316\262u\32\214\202\353\10\230\266\207\336!v[\312S@\355\262\366\26\341\242\253\305\256\0064\10N\20y\222\312\36\247\260\247\340FWD\260;6{\225\331E\323:!z\214\267\6\276\275,\241%\374l\265F", 74, MSG_NOSIGNAL, NULL, 0) = 74 <0.000112>
00:33:24.671407 ppoll([{fd=3, events=POLLOUT|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLOUT}]) <0.000035>
00:33:24.671579 sendto(3, "\27\3\3\0h.\254C\226F\tM>\17\200F\21\260\266\30\3223\301}V\252O\277\243y.At\242\24\365\307\340\202\211!\303\6\v\375\260\207*v\201\2127\2F]\26a\372\301\351V\203\fF\313([\332\351\25\330\17\210\3160\0033\254\37&\221Y\263\n\322\336L\274\v\204U\200\377`pl\253\227\243\350\316/g3\245\257\363\371p", 109, MSG_NOSIGNAL, NULL, 0) = 109 <0.000063>
00:33:24.671756 ppoll([{fd=3, events=POLLIN|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLIN}]) <0.000032>
00:33:24.671888 recvfrom(3, "\27\3\3\0J", 5, 0, NULL, NULL) = 5 <0.000032>
00:33:24.672020 recvfrom(3, "\325\207\332\2220\363\203\233\246\323\311\2\340J\254m\311\264\276\325\20q\236(\231\1\216\270\262g$\250Rr\350\214\32\362\372\312\325}\316\322\210\230\335>\253\0167SAPtb\31-\360\223\321\21K51cv\36\3337\236\332};", 74, 0, NULL, NULL) = 74 <0.000034>
00:33:24.672299 recvfrom(3, "\27\3\3\0J", 5, 0, NULL, NULL) = 5 <0.000037>
00:33:24.672451 recvfrom(3, "\255\3\262\271H\34c\1\r\207[\367\27\36i\v\314\301\222G\2\373\373\6\225\210\206\217-\275\311\337\200G\375>X\351\300\235\251\301Bhj\257t\372\215\322A,\261\335mW`\307\205\206b\356\255\214B=\5'e>\24=\302\366", 74, 0, NULL, NULL) = 74 <0.000031>
00:33:24.672671 recvfrom(3, 0x55ab55bbb3, 5, 0, NULL, NULL) = -1 EAGAIN (Resource temporarily unavailable) <0.000033>
00:33:24.672808 ppoll([{fd=3, events=POLLIN|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLIN}]) <0.000771>
00:33:24.673717 recvfrom(3, "\27\3\3\0<", 5, 0, NULL, NULL) = 5 <0.000032>
00:33:24.673863 recvfrom(3, "\341U\26\226R\177,SU\202\247\215\5\323\310\177]^\203\3\205p\273\236\242\341\371\327\275\220\367\23\7Q\244\203$\305\332\251\273\271\30\266\343\335+\2{\325\375\256\22\306\310u\336\342\241T", 60, 0, NULL, NULL) = 60 <0.000032>
00:33:24.674026 getpid()                = 5273 <0.000028>
00:33:24.674171 sendto(3, "\27\3\3\0b\\\313\270T9W2\205\327\201{\35\373\241t\216\304j+\325\243\2702\5\300\0065\n1\243K;m%\312\177\360\226A\353\331Hnf\340\322\340\205\374\f\301\t%H\242\253_\214+\367\265ka$\263O:\215\361\326@H\10\340\355e\342b3A\32\22^\270A\373\317T\241d\35X\363d\311\37\310E", 103, MSG_NOSIGNAL, NULL, 0) = 103 <0.000071>
00:33:24.674365 ppoll([{fd=3, events=POLLIN|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLIN}]) <0.000033>
00:33:24.674495 recvfrom(3, "\27\3\3\0n", 5, 0, NULL, NULL) = 5 <0.000030>
00:33:24.674616 recvfrom(3, "\305ds\257\0021o\254/\330\7\344v}yXV\367q\203\276Rw\360\22\33\7G\354\v\3\325\264\364$\277\347H=\211z\32QR\235)\305\220m16\200;\4\202b\236\254\356\260R\3436\334\217\247\307\237kG\220\314\345\2558\314\177(\371\226\227\275\301IK\r\222\357\222\2710!en\275\30\200\207\233<\354\335\304\366\327\322\v~/\376", 110, 0, NULL, NULL) = 110 <0.000068>
00:33:24.696830 sendto(3, "\27\3\3\0\306\3219\333\3459|^\303h\326uPtY(I\31\344n`\251\236H;`\361\232T\335\17N\352\344\231\350T\307\235P\212\224\263\311\240\247\273nXq.b \276\251h\20\227_``J\314\264\272\34\251\263\355{\\\32~\223\3176\320\201|~\23\301\17\206\16k\242[\250\314\227#\367\376K\311\301\364\367\3463,e(\254\22\344\226\177\337\242\247\24:\255\1&\245Ei\330\214-\rc\10&\337y\2740\237e\36\265\343\211\360\217\313\216;\354t\376\203\201H\376<\177\252\352\330m\326\227\32r<\327@\265\t\231\263\346B\323\270\17\243t\230\310\201e\\|\206\1JT@b\16\30\236~t\224\264@\n\33\24`\203\230", 203, MSG_NOSIGNAL, NULL, 0) = 203 <0.000072>
00:33:24.697016 ppoll([{fd=3, events=POLLIN|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLIN}]) <0.002853>
00:33:24.700045 recvfrom(3, "\27\3\3\2\r", 5, 0, NULL, NULL) = 5 <0.000033>
00:33:24.700212 recvfrom(3, "-e\240\357\273]\0173\33E\335\te\263%\271P\"\275s4O\271\212c\320\300\271\244R\243\23p\\\344\317\3\321\177\244_\7\236\t\310\32\257\202\223\321\312\341Aj~\262\323\337U}X\330\224\0r'\342Y\376\233\340\346\271\204\3716\222\211uL2\225\234\253\374}T\263\260\254\247\346\326G\301\215^G\342f\303\356\225[\16\260\16\313M\366Z\325\327p\257\344\253L\305\2033B\7\334G$\317`<\206M\342\230\200X\327\340\330\241WFyC\276\240\311\236l \316\323s\1778j\325\214j\376@\355\304\30\222!^\327\372\306g@\1\335\376\253^\204\201\367\204*\247\177\377\236\10j\343Ah\367\v\322e\234\1i\357R\305Ho\201\343\226\311X\333\210\207\25\244\314G2E\326s.s\3274\334\302\214\235\310\307,$\25[\317y\320\363\267\5x\364a\363@\235\223\202\370 l~V]\342h\340\310b\255\277\311A\261\336\226\316\270\27.MrJ\357HG\216u.\305\207_\350 w\325\253\20\310\241\340\326\r4\370\246\227\227Za]|4t\344f;1\25\177L\32\273\20\33*\355\334\0\7M\265\357\322\376\336\223dQ%h\366\376\32uw\313;\254i\27\1\2029\31`\242\367\\@c\3736\22{\23\274QV\26O\201\247\216S^\212\317\215\367t\36\31\1\373\320u[(,\377\34>\277\214N\4{\367u\0\20hp1\260\5*\207K-J\264\r\207'\6\333D\247jZP\365'\242\201\365\265u\207\207*&\200\303(\270\262\273\3625\324\314\21,\"\271\320\n\346>\201\374\1\211|\204\367h\342\f&\303\32[{\350S\236\202=_\22\0\351\243x \376@pc\316C\247&I&\352\372\3764\222\242=v\257\v.\346\32\217:\214\336\220\315\34\1\20(\226\350)\343c6E\v\210\321\250\230\10\26(r\16e\354Y\2675\247kj", 525, 0, NULL, NULL) = 525 <0.000031>
00:33:24.700491 rt_sigaction(SIGINT, {sa_handler=0x557d585950, sa_mask=[], sa_flags=SA_RESTART}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0 <0.000031>
00:33:24.700615 rt_sigaction(SIGCHLD, {sa_handler=0x557d56c0c0, sa_mask=[], sa_flags=SA_RESTART|SA_NOCLDSTOP}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0 <0.000028>
00:33:24.700727 rt_sigaction(SIGALRM, {sa_handler=0x557d56c0c0, sa_mask=[], sa_flags=SA_RESTART}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0 <0.000028>
00:33:24.700866 newfstatat(AT_FDCWD, "/usr/lib/postgresql/16/bin/psql", {st_mode=S_IFREG|0755, st_size=855408, ...}, 0) = 0 <0.000037>
00:33:24.700996 faccessat(AT_FDCWD, "/usr/lib/postgresql/16/bin/psql", R_OK) = 0 <0.000037>
00:33:24.701110 faccessat(AT_FDCWD, "/usr/lib/postgresql/16/bin/psql", X_OK) = 0 <0.000031>
00:33:24.701219 readlinkat(AT_FDCWD, "/usr", 0x7fdc0d5ce0, 1023) = -1 EINVAL (Invalid argument) <0.000030>
00:33:24.701335 readlinkat(AT_FDCWD, "/usr/lib", 0x7fdc0d5ce0, 1023) = -1 EINVAL (Invalid argument) <0.000029>
00:33:24.701444 readlinkat(AT_FDCWD, "/usr/lib/postgresql", 0x7fdc0d5ce0, 1023) = -1 EINVAL (Invalid argument) <0.000030>
00:33:24.701552 readlinkat(AT_FDCWD, "/usr/lib/postgresql/16", 0x7fdc0d5ce0, 1023) = -1 EINVAL (Invalid argument) <0.000030>
00:33:24.701687 readlinkat(AT_FDCWD, "/usr/lib/postgresql/16/bin", 0x7fdc0d5ce0, 1023) = -1 EINVAL (Invalid argument) <0.000030>
00:33:24.701796 readlinkat(AT_FDCWD, "/usr/lib/postgresql/16/bin/psql", 0x7fdc0d5ce0, 1023) = -1 EINVAL (Invalid argument) <0.000030>
00:33:24.701913 faccessat(AT_FDCWD, "/etc/postgresql-common/psqlrc-16.3 (Debian 16.3-1.pgdg120+1)", R_OK) = -1 ENOENT (No such file or directory) <0.000513>
00:33:24.702516 faccessat(AT_FDCWD, "/etc/postgresql-common/psqlrc-16", R_OK) = -1 ENOENT (No such file or directory) <0.000038>
00:33:24.702642 faccessat(AT_FDCWD, "/etc/postgresql-common/psqlrc", R_OK) = -1 ENOENT (No such file or directory) <0.000035>
00:33:24.702782 faccessat(AT_FDCWD, "/home/mumblepi/.psqlrc-16.3 (Debian 16.3-1.pgdg120+1)", R_OK) = -1 ENOENT (No such file or directory) <0.000043>
00:33:24.702903 faccessat(AT_FDCWD, "/home/mumblepi/.psqlrc-16", R_OK) = -1 ENOENT (No such file or directory) <0.000035>
00:33:24.703016 faccessat(AT_FDCWD, "/home/mumblepi/.psqlrc", R_OK) = -1 ENOENT (No such file or directory) <0.000034>
00:33:24.703168 sendto(3, "\27\3\3\0\37;\204\204\375\25p\336O\362\32\205jk\346\343\20c&\267\263.\352\":Y\234\0327xy\211", 36, MSG_NOSIGNAL, NULL, 0) = 36 <0.000094>
00:33:24.703370 ppoll([{fd=3, events=POLLIN|POLLERR}], 1, NULL, NULL, 0) = 1 ([{fd=3, revents=POLLIN}]) <0.000673>
00:33:24.704174 recvfrom(3, "\27\3\3\0S", 5, 0, NULL, NULL) = 5 <0.000032>
00:33:24.704320 recvfrom(3, "o\220)\26\302\230P_$P(N\220T\351\270M\351\230)]y\16\26\340\375\356\t\226\17+\267`\311\261\355:U\223\232j\346\30\377\2028\t\253\350M\217OJ\342\3666\325v\320kiq\263AXPl\17z\213\3007\2447\315\33`\316u\27+\270p", 83, 0, NULL, NULL) = 83 <0.000030>
00:33:24.704492 ioctl(1, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHO|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000034>
00:33:24.704615 ioctl(1, TIOCGWINSZ, {ws_row=24, ws_col=80, ws_xpixel=0, ws_ypixel=0}) = 0 <0.000027>
00:33:24.704720 ioctl(0, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHO|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000027>
00:33:24.704824 ioctl(1, TCGETS, {c_iflag=ICRNL|IXON|IUTF8, c_oflag=NL0|CR0|TAB0|BS0|VT0|FF0|OPOST|ONLCR, c_cflag=B38400|CS8|CREAD, c_lflag=ISIG|ICANON|ECHO|ECHOE|ECHOK|IEXTEN|ECHOCTL|ECHOKE, ...}) = 0 <0.000027>
00:33:24.704927 ioctl(1, TIOCGWINSZ, {ws_row=24, ws_col=80, ws_xpixel=0, ws_ypixel=0}) = 0 <0.000026>
00:33:24.705032 newfstatat(1, "", {st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0), ...}, AT_EMPTY_PATH) = 0 <0.000030>
00:33:24.705159 write(1, " ?column? \n", 11) = 11 <0.000066>
00:33:24.705304 write(1, "----------\n", 11) = 11 <0.000049>
00:33:24.705436 write(1, "        1\n", 10) = 10 <0.000048>
00:33:24.705575 write(1, "(1 row)\n", 8) = 8 <0.000049>
00:33:24.705701 write(1, "\n", 1)       = 1 <0.000040>
00:33:24.705839 recvfrom(3, 0x55ab55bbb3, 5, 0, NULL, NULL) = -1 EAGAIN (Resource temporarily unavailable) <0.000031>
00:33:24.705983 sendto(3, "\27\3\3\0\26\30\333\3676w\232\272\304tt\241\225\252\274\360T\373j\336zk\243", 27, MSG_NOSIGNAL, NULL, 0) = 27 <0.000072>
00:33:24.706172 sendto(3, "\27\3\3\0\23\254\312*;\206\220\5\5v\332\202\216\374\324\2\357\323\23s", 24, MSG_NOSIGNAL, NULL, 0) = 24 <0.000060>
00:33:24.706461 close(3)                = 0 <0.000122>
00:33:24.706747 rt_sigaction(SIGPIPE, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTART}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0 <0.000030>
00:33:24.706941 futex(0x7fa1a9218c, FUTEX_WAKE_PRIVATE, 2147483647) = 0 <0.000029>
00:33:24.708231 exit_group(0)           = ?
00:33:24.709697 +++ exited with 0 +++
